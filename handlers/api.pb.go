// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package handlers is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	ApiPics
	ApiPic
*/
package handlers

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type ApiPics struct {
	Pic []*ApiPic `protobuf:"bytes,1,rep,name=pic" json:"pic,omitempty"`
}

func (m *ApiPics) Reset()                    { *m = ApiPics{} }
func (m *ApiPics) String() string            { return proto.CompactTextString(m) }
func (*ApiPics) ProtoMessage()               {}
func (*ApiPics) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ApiPics) GetPic() []*ApiPic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type ApiPic struct {
	Id                   string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Width                int32   `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height               int32   `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Version              int64   `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	Type                 string  `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	RelativeUrl          string  `protobuf:"bytes,6,opt,name=relative_url,json=relativeUrl" json:"relative_url,omitempty"`
	ThumbnailRelativeUrl string  `protobuf:"bytes,7,opt,name=thumbnail_relative_url,json=thumbnailRelativeUrl" json:"thumbnail_relative_url,omitempty"`
	Duration             float64 `protobuf:"fixed64,8,opt,name=duration" json:"duration,omitempty"`
	PendingDeletion      bool    `protobuf:"varint,9,opt,name=pending_deletion,json=pendingDeletion" json:"pending_deletion,omitempty"`
	ViewCount            int64   `protobuf:"varint,10,opt,name=view_count,json=viewCount" json:"view_count,omitempty"`
}

func (m *ApiPic) Reset()                    { *m = ApiPic{} }
func (m *ApiPic) String() string            { return proto.CompactTextString(m) }
func (*ApiPic) ProtoMessage()               {}
func (*ApiPic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*ApiPics)(nil), "pixur.api.ApiPics")
	proto.RegisterType((*ApiPic)(nil), "pixur.api.ApiPic")
}

var fileDescriptor0 = []byte{
	// 288 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x91, 0xdf, 0x4a, 0xfb, 0x30,
	0x14, 0x80, 0x49, 0xbb, 0x75, 0xed, 0xd9, 0x8f, 0x9f, 0x7a, 0x18, 0x23, 0x08, 0x42, 0x9d, 0x37,
	0xf5, 0xa6, 0x17, 0xea, 0x0b, 0xf8, 0xe7, 0x01, 0x24, 0xe0, 0x8d, 0x37, 0x25, 0x5b, 0xc2, 0x7a,
	0x20, 0xa6, 0x21, 0x4b, 0x37, 0x7d, 0x2e, 0x5f, 0x50, 0x9a, 0xfd, 0x41, 0xef, 0xf2, 0x7d, 0xe7,
	0x4b, 0x48, 0x08, 0x14, 0xd2, 0x51, 0xed, 0x7c, 0x17, 0x3a, 0x2c, 0x1c, 0x7d, 0xf6, 0xbe, 0x96,
	0x8e, 0x16, 0x35, 0x4c, 0x1e, 0x1d, 0xbd, 0xd2, 0x6a, 0x83, 0x37, 0x90, 0x3a, 0x5a, 0x71, 0x56,
	0xa6, 0xd5, 0xf4, 0xee, 0xa2, 0x3e, 0x35, 0xf5, 0x3e, 0x10, 0xc3, 0x74, 0xf1, 0x9d, 0x40, 0xb6,
	0x67, 0xfc, 0x0f, 0x09, 0x29, 0xce, 0x4a, 0x56, 0x15, 0x22, 0x21, 0x85, 0x33, 0x18, 0xef, 0x48,
	0x85, 0x96, 0x27, 0x25, 0xab, 0xc6, 0x62, 0x0f, 0x38, 0x87, 0xac, 0xd5, 0xb4, 0x6e, 0x03, 0x4f,
	0xa3, 0x3e, 0x10, 0x72, 0x98, 0x6c, 0xb5, 0xdf, 0x50, 0x67, 0xf9, 0xa8, 0x64, 0x55, 0x2a, 0x8e,
	0x88, 0x08, 0xa3, 0xf0, 0xe5, 0x34, 0x1f, 0xc7, 0x93, 0xe3, 0x1a, 0xaf, 0xe1, 0x9f, 0xd7, 0x46,
	0x06, 0xda, 0xea, 0xa6, 0xf7, 0x86, 0x67, 0x71, 0x36, 0x3d, 0xba, 0x37, 0x6f, 0xf0, 0x01, 0xe6,
	0xa1, 0xed, 0x3f, 0x96, 0x56, 0x92, 0x69, 0xfe, 0xc4, 0x93, 0x18, 0xcf, 0x4e, 0x53, 0xf1, 0x6b,
	0xd7, 0x25, 0xe4, 0xaa, 0xf7, 0x32, 0x0c, 0xf7, 0xc8, 0x4b, 0x56, 0x31, 0x71, 0x62, 0xbc, 0x85,
	0x73, 0xa7, 0xad, 0x22, 0xbb, 0x6e, 0x94, 0x36, 0x3a, 0x36, 0x45, 0xc9, 0xaa, 0x5c, 0x9c, 0x1d,
	0xfc, 0xcb, 0x41, 0xe3, 0x15, 0xc0, 0x96, 0xf4, 0xae, 0x59, 0x75, 0xbd, 0x0d, 0x1c, 0xe2, 0x83,
	0x8a, 0xc1, 0x3c, 0x0f, 0xe2, 0x09, 0xde, 0xf3, 0x56, 0x5a, 0x65, 0xb4, 0xdf, 0x2c, 0xb3, 0xf8,
	0x07, 0xf7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x8e, 0x77, 0x7d, 0x90, 0x01, 0x00, 0x00,
}
