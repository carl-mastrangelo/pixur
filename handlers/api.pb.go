// Code generated by protoc-gen-go.
// source: api.proto
// DO NOT EDIT!

/*
Package handlers is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	ApiPic
	ApiPicTag
	LookupPicDetailsResponse
	IndexResponse
	AddPicTagsResponse
*/
package handlers

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/duration"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type ApiPic struct {
	Id                   string                    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Width                int32                     `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height               int32                     `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Version              int64                     `protobuf:"fixed64,4,opt,name=version" json:"version,omitempty"`
	Type                 string                    `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
	RelativeUrl          string                    `protobuf:"bytes,6,opt,name=relative_url,json=relativeUrl" json:"relative_url,omitempty"`
	ThumbnailRelativeUrl string                    `protobuf:"bytes,7,opt,name=thumbnail_relative_url,json=thumbnailRelativeUrl" json:"thumbnail_relative_url,omitempty"`
	PendingDeletion      bool                      `protobuf:"varint,9,opt,name=pending_deletion,json=pendingDeletion" json:"pending_deletion,omitempty"`
	ViewCount            int64                     `protobuf:"varint,10,opt,name=view_count,json=viewCount" json:"view_count,omitempty"`
	Duration             *google_protobuf.Duration `protobuf:"bytes,11,opt,name=duration" json:"duration,omitempty"`
}

func (m *ApiPic) Reset()                    { *m = ApiPic{} }
func (m *ApiPic) String() string            { return proto.CompactTextString(m) }
func (*ApiPic) ProtoMessage()               {}
func (*ApiPic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ApiPic) GetDuration() *google_protobuf.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type ApiPicTag struct {
	PicId        int64                       `protobuf:"varint,1,opt,name=pic_id,json=picId" json:"pic_id,omitempty"`
	TagId        int64                       `protobuf:"varint,2,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	Name         string                      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	CreatedTime  *google_protobuf1.Timestamp `protobuf:"bytes,4,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	ModifiedTime *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=modified_time,json=modifiedTime" json:"modified_time,omitempty"`
	Version      int64                       `protobuf:"fixed64,6,opt,name=version" json:"version,omitempty"`
}

func (m *ApiPicTag) Reset()                    { *m = ApiPicTag{} }
func (m *ApiPicTag) String() string            { return proto.CompactTextString(m) }
func (*ApiPicTag) ProtoMessage()               {}
func (*ApiPicTag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ApiPicTag) GetCreatedTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *ApiPicTag) GetModifiedTime() *google_protobuf1.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

type LookupPicDetailsResponse struct {
	Pic    *ApiPic      `protobuf:"bytes,1,opt,name=pic" json:"pic,omitempty"`
	PicTag []*ApiPicTag `protobuf:"bytes,2,rep,name=pic_tag,json=picTag" json:"pic_tag,omitempty"`
}

func (m *LookupPicDetailsResponse) Reset()                    { *m = LookupPicDetailsResponse{} }
func (m *LookupPicDetailsResponse) String() string            { return proto.CompactTextString(m) }
func (*LookupPicDetailsResponse) ProtoMessage()               {}
func (*LookupPicDetailsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LookupPicDetailsResponse) GetPic() *ApiPic {
	if m != nil {
		return m.Pic
	}
	return nil
}

func (m *LookupPicDetailsResponse) GetPicTag() []*ApiPicTag {
	if m != nil {
		return m.PicTag
	}
	return nil
}

type IndexResponse struct {
	Pic []*ApiPic `protobuf:"bytes,1,rep,name=pic" json:"pic,omitempty"`
}

func (m *IndexResponse) Reset()                    { *m = IndexResponse{} }
func (m *IndexResponse) String() string            { return proto.CompactTextString(m) }
func (*IndexResponse) ProtoMessage()               {}
func (*IndexResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *IndexResponse) GetPic() []*ApiPic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type AddPicTagsResponse struct {
}

func (m *AddPicTagsResponse) Reset()                    { *m = AddPicTagsResponse{} }
func (m *AddPicTagsResponse) String() string            { return proto.CompactTextString(m) }
func (*AddPicTagsResponse) ProtoMessage()               {}
func (*AddPicTagsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*ApiPic)(nil), "pixur.api.ApiPic")
	proto.RegisterType((*ApiPicTag)(nil), "pixur.api.ApiPicTag")
	proto.RegisterType((*LookupPicDetailsResponse)(nil), "pixur.api.LookupPicDetailsResponse")
	proto.RegisterType((*IndexResponse)(nil), "pixur.api.IndexResponse")
	proto.RegisterType((*AddPicTagsResponse)(nil), "pixur.api.AddPicTagsResponse")
}

var fileDescriptor0 = []byte{
	// 499 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x95, 0xa4, 0x4d, 0x9b, 0x49, 0x17, 0x8a, 0x55, 0x56, 0xa6, 0x12, 0x10, 0xca, 0x25,
	0x1c, 0xc8, 0x4a, 0x65, 0x39, 0x22, 0xb4, 0xd0, 0x4b, 0x11, 0x87, 0x95, 0x55, 0x2e, 0x5c, 0x22,
	0x37, 0xf6, 0xa6, 0x23, 0xd2, 0xc4, 0x4a, 0x9c, 0xee, 0xf2, 0x9e, 0xbc, 0x03, 0xaf, 0x81, 0xe2,
	0x24, 0xd5, 0x2e, 0x15, 0xe2, 0xe6, 0xf9, 0xff, 0x7f, 0xc6, 0xce, 0x37, 0x01, 0x8f, 0x2b, 0x8c,
	0x54, 0x59, 0xe8, 0x82, 0x78, 0x0a, 0xef, 0xea, 0x32, 0xe2, 0x0a, 0xe7, 0x2f, 0xd2, 0xa2, 0x48,
	0x33, 0x79, 0x61, 0x8c, 0x6d, 0x7d, 0x73, 0x21, 0xea, 0x92, 0x6b, 0x2c, 0xf2, 0x36, 0x3a, 0x7f,
	0xf9, 0xb7, 0xaf, 0x71, 0x2f, 0x2b, 0xcd, 0xf7, 0xaa, 0x0d, 0x2c, 0x7e, 0xd9, 0xe0, 0x5e, 0x29,
	0xbc, 0xc6, 0x84, 0x3c, 0x02, 0x1b, 0x05, 0xb5, 0x02, 0x2b, 0xf4, 0x98, 0x8d, 0x82, 0xcc, 0x60,
	0x78, 0x8b, 0x42, 0xef, 0xa8, 0x1d, 0x58, 0xe1, 0x90, 0xb5, 0x05, 0x39, 0x07, 0x77, 0x27, 0x31,
	0xdd, 0x69, 0xea, 0x18, 0xb9, 0xab, 0x08, 0x85, 0xd1, 0x41, 0x96, 0x15, 0x16, 0x39, 0x1d, 0x04,
	0x56, 0x38, 0x65, 0x7d, 0x49, 0x08, 0x0c, 0xf4, 0x4f, 0x25, 0xe9, 0xd0, 0x4c, 0x36, 0x67, 0xf2,
	0x0a, 0x26, 0xa5, 0xcc, 0xb8, 0xc6, 0x83, 0x8c, 0xeb, 0x32, 0xa3, 0xae, 0xf1, 0xfc, 0x5e, 0xfb,
	0x56, 0x66, 0xe4, 0x12, 0xce, 0xf5, 0xae, 0xde, 0x6f, 0x73, 0x8e, 0x59, 0xfc, 0x20, 0x3c, 0x32,
	0xe1, 0xd9, 0xd1, 0x65, 0xf7, 0xba, 0xde, 0xc0, 0x54, 0xc9, 0x5c, 0x60, 0x9e, 0xc6, 0x42, 0x66,
	0xb2, 0x41, 0x41, 0xbd, 0xc0, 0x0a, 0xc7, 0xec, 0x71, 0xa7, 0xaf, 0x3a, 0x99, 0x3c, 0x07, 0x38,
	0xa0, 0xbc, 0x8d, 0x93, 0xa2, 0xce, 0x35, 0x85, 0xc0, 0x0a, 0x1d, 0xe6, 0x35, 0xca, 0xe7, 0x46,
	0x20, 0xef, 0x61, 0xdc, 0xc3, 0xa4, 0x7e, 0x60, 0x85, 0xfe, 0xf2, 0x59, 0xd4, 0xd2, 0x8c, 0x7a,
	0x9a, 0xd1, 0xaa, 0x0b, 0xb0, 0x63, 0xf4, 0xcb, 0x60, 0x3c, 0x9e, 0x7a, 0x8b, 0xdf, 0x16, 0x78,
	0x2d, 0xd6, 0x0d, 0x4f, 0xc9, 0x53, 0x70, 0x15, 0x26, 0x71, 0x47, 0xd7, 0x61, 0x43, 0x85, 0xc9,
	0x5a, 0x34, 0xb2, 0xe6, 0x69, 0x23, 0xdb, 0xad, 0xac, 0x79, 0xba, 0x16, 0x0d, 0xaf, 0x9c, 0xef,
	0xa5, 0xe1, 0xeb, 0x31, 0x73, 0x26, 0x1f, 0x60, 0x92, 0x94, 0x92, 0x6b, 0x29, 0xe2, 0x66, 0x83,
	0x06, 0xb1, 0xbf, 0x9c, 0x9f, 0x3c, 0x68, 0xd3, 0xaf, 0x97, 0xf9, 0x5d, 0xbe, 0x51, 0xc8, 0x47,
	0x38, 0xdb, 0x17, 0x02, 0x6f, 0xb0, 0xef, 0x1f, 0xfe, 0xb7, 0x7f, 0xd2, 0x37, 0x98, 0x01, 0xf7,
	0xb6, 0xeb, 0x3e, 0xd8, 0xee, 0x22, 0x07, 0xfa, 0xb5, 0x28, 0x7e, 0xd4, 0xea, 0x1a, 0x93, 0x95,
	0xd4, 0x1c, 0xb3, 0x8a, 0xc9, 0x4a, 0x15, 0x79, 0x25, 0xc9, 0x6b, 0x70, 0x14, 0x26, 0xe6, 0xa3,
	0xfd, 0xe5, 0x93, 0xe8, 0xf8, 0xdb, 0x46, 0x2d, 0x1a, 0xd6, 0xb8, 0xe4, 0x2d, 0x8c, 0x1a, 0x38,
	0x9a, 0xa7, 0xd4, 0x0e, 0x9c, 0xd0, 0x5f, 0xce, 0x4e, 0x82, 0x1b, 0x9e, 0xb2, 0x86, 0xe0, 0x86,
	0xa7, 0x8b, 0x4b, 0x38, 0x5b, 0xe7, 0x42, 0xde, 0x9d, 0x5e, 0xe2, 0xfc, 0xfb, 0x92, 0xc5, 0x0c,
	0xc8, 0x95, 0x10, 0xed, 0xa8, 0xe3, 0xfb, 0x3e, 0xc1, 0xf7, 0xf1, 0x8e, 0xe7, 0x22, 0x93, 0x65,
	0xb5, 0x75, 0x0d, 0x83, 0x77, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x9e, 0x20, 0x9d, 0x68,
	0x03, 0x00, 0x00,
}
