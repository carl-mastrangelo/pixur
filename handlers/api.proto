syntax = "proto3";

package pixur.api;

option go_package = "handlers";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

message ApiPic {
  // id is the unique identifier for the pic, in varint form
  string id = 1;
  // width is the width of pic
  int32 width = 2;
  // height is the height of the pic
  int32 height = 3;
  // version is the version of the pic.  It is used when updating the pic.
  sfixed64 version = 4;
  // type is the mime type of the pic. (JPEG, GIF, PNG, or WEBM)
  string type = 5;
  
  // relative_url is the location of the pic file relative to the root dir.
  string relative_url = 6;
  // thumbnail_relative_url is the location of the the pic thumbnail
  // relative to the root dir.
  string thumbnail_relative_url = 7;
  reserved 8;

  // pending_deletion indicates if the pic may be deleted soon.
  bool pending_deletion = 9;
  // view_count is the number of views this picture has received.
  int64 view_count = 10;

  // duration is present if the image is animated (GIF or WEBM).  Note that
  // GIFs duration is not well defined and is subject to reinterpretation.
  google.protobuf.Duration duration = 11;
}

message ApiPicTag {
  // pic_id is the unique identifier for the pic, in varint form
  string pic_id = 1;
  // tag_id is the unique identifier for the tag, in varint form
  string tag_id = 2;
  // name is the tag name in utf8 form
  string name = 3;
  // created_time is when the tag was created.
  google.protobuf.Timestamp created_time = 4;
  // modified_time is when the tag was last modified.
  google.protobuf.Timestamp modified_time = 5;
  // version is the version of the tag.  It is used when updating the tag.
  sfixed64 version = 6;
}

message LookupPicDetailsResponse {
  ApiPic pic = 1;
  repeated ApiPicTag pic_tag = 2;
}

message IndexResponse {
  repeated ApiPic pic = 1;
}

message AddPicTagsResponse{
  // nothing here for now.
}

message CreatePicResponse {
  ApiPic pic = 1;
}

message FindSimilarPicsResponse {
  repeated string id = 1; 
}

message IncrementViewCountResponse {
  // nothing for now.
}

message PurgePicResponse {
  // nothing for now
}

message SoftDeletePicResponse {
  // nothing for now
}

message UpsertPicResponse {
  ApiPic pic = 1;
}

message GetSessionResponse {
  JwtPayload jwt_payload = 1;
}

message JwtPayload {
  // sub is the Subject claim of the payload.  It is the user id in varint form.
  string sub = 1;
  // exp is the Expiration claim in unix epoch seconds.  Encodes as string in 
  // jsonpb, int in the JWT.
  int64 exp = 2;
  // nbf is the Not Before claim time in unix epoch seconds.  Encodes as string 
  // in jsonpb, int in the JWT.
  int64 nbf = 3;
}

message GetXsrfTokenResponse {
}
