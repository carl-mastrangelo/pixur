// Code generated by protoc-gen-go.
// source: tables.proto
// DO NOT EDIT!

/*
Package tables is a generated protocol buffer package.

It is generated from these files:
	tables.proto

It has these top-level messages:
	PicTable
	TagTable
	PicTagTable
	PicIdentTable
	UserTable
*/
package tables

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pixur "pixur.org/pixur/schema"
import _ "pixur.org/pixur/schema/db/model"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type PicTable struct {
	Id          int64      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	CreatedTime int64      `protobuf:"varint,2,opt,name=created_time,json=createdTime" json:"created_time,omitempty"`
	IsHidden    bool       `protobuf:"varint,3,opt,name=is_hidden,json=isHidden" json:"is_hidden,omitempty"`
	Data        *pixur.Pic `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *PicTable) Reset()                    { *m = PicTable{} }
func (m *PicTable) String() string            { return proto.CompactTextString(m) }
func (*PicTable) ProtoMessage()               {}
func (*PicTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PicTable) GetData() *pixur.Pic {
	if m != nil {
		return m.Data
	}
	return nil
}

type TagTable struct {
	Id   int64      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Data *pixur.Tag `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TagTable) Reset()                    { *m = TagTable{} }
func (m *TagTable) String() string            { return proto.CompactTextString(m) }
func (*TagTable) ProtoMessage()               {}
func (*TagTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TagTable) GetData() *pixur.Tag {
	if m != nil {
		return m.Data
	}
	return nil
}

type PicTagTable struct {
	PicId int64         `protobuf:"varint,1,opt,name=pic_id,json=picId" json:"pic_id,omitempty"`
	TagId int64         `protobuf:"varint,2,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	Data  *pixur.PicTag `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *PicTagTable) Reset()                    { *m = PicTagTable{} }
func (m *PicTagTable) String() string            { return proto.CompactTextString(m) }
func (*PicTagTable) ProtoMessage()               {}
func (*PicTagTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PicTagTable) GetData() *pixur.PicTag {
	if m != nil {
		return m.Data
	}
	return nil
}

type PicIdentTable struct {
	PicId int64               `protobuf:"varint,1,opt,name=pic_id,json=picId" json:"pic_id,omitempty"`
	Type  pixur.PicIdent_Type `protobuf:"varint,2,opt,name=type,enum=pixur.PicIdent_Type" json:"type,omitempty"`
	Value []byte              `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Data  *pixur.PicIdent     `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *PicIdentTable) Reset()                    { *m = PicIdentTable{} }
func (m *PicIdentTable) String() string            { return proto.CompactTextString(m) }
func (*PicIdentTable) ProtoMessage()               {}
func (*PicIdentTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PicIdentTable) GetData() *pixur.PicIdent {
	if m != nil {
		return m.Data
	}
	return nil
}

type UserTable struct {
	Id    int64       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Ident string      `protobuf:"bytes,2,opt,name=ident" json:"ident,omitempty"`
	Data  *pixur.User `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *UserTable) Reset()                    { *m = UserTable{} }
func (m *UserTable) String() string            { return proto.CompactTextString(m) }
func (*UserTable) ProtoMessage()               {}
func (*UserTable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserTable) GetData() *pixur.User {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PicTable)(nil), "pixur.tables.PicTable")
	proto.RegisterType((*TagTable)(nil), "pixur.tables.TagTable")
	proto.RegisterType((*PicTagTable)(nil), "pixur.tables.PicTagTable")
	proto.RegisterType((*PicIdentTable)(nil), "pixur.tables.PicIdentTable")
	proto.RegisterType((*UserTable)(nil), "pixur.tables.UserTable")
}

var fileDescriptor0 = []byte{
	// 475 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x93, 0x4f, 0x8b, 0xd3, 0x50,
	0x14, 0xc5, 0x79, 0xf9, 0x67, 0x72, 0xdb, 0xa9, 0xe1, 0xd1, 0xd1, 0x92, 0xc1, 0x31, 0x8d, 0x08,
	0x05, 0xa1, 0x85, 0x71, 0x27, 0x2e, 0xa4, 0x0b, 0x71, 0x36, 0x5a, 0x42, 0xdc, 0xb8, 0x29, 0xaf,
	0x79, 0x8f, 0xcc, 0x83, 0xa6, 0x0d, 0x49, 0x2a, 0x76, 0x17, 0xb7, 0xf9, 0x58, 0xee, 0xfd, 0x4e,
	0xf2, 0xfe, 0xb4, 0x99, 0x48, 0x75, 0x53, 0x72, 0x4f, 0xef, 0x3d, 0xe7, 0x97, 0x7b, 0x09, 0x0c,
	0x6b, 0xb2, 0xd9, 0xb2, 0x6a, 0x5e, 0x94, 0xfb, 0x7a, 0x8f, 0x87, 0x05, 0xff, 0x71, 0x28, 0xe7,
	0x4a, 0x0b, 0x22, 0x55, 0xed, 0xcb, 0x6c, 0x21, 0x9f, 0x16, 0x55, 0xfa, 0xc0, 0x72, 0xa2, 0x0a,
	0x35, 0x11, 0xbc, 0xf9, 0x47, 0x0f, 0xdd, 0x2c, 0xf2, 0x3d, 0x65, 0x5b, 0xf5, 0xab, 0x9a, 0xa3,
	0x5f, 0x08, 0xdc, 0x15, 0x4f, 0x13, 0x61, 0x8f, 0x47, 0x60, 0x70, 0x3a, 0x41, 0x21, 0x9a, 0x99,
	0xb1, 0xc1, 0x29, 0x9e, 0xc2, 0x30, 0x2d, 0x19, 0xa9, 0x19, 0x5d, 0xd7, 0x3c, 0x67, 0x13, 0x43,
	0xfe, 0x33, 0xd0, 0x5a, 0xc2, 0x73, 0x86, 0x6f, 0xc0, 0xe3, 0xd5, 0xfa, 0x81, 0x53, 0xca, 0x76,
	0x13, 0x33, 0x44, 0x33, 0x37, 0x76, 0x79, 0xf5, 0x49, 0xd6, 0xf8, 0x16, 0x2c, 0x4a, 0x6a, 0x32,
	0xb1, 0x42, 0x34, 0x1b, 0xdc, 0xc1, 0x5c, 0x81, 0xad, 0x78, 0x1a, 0x4b, 0xfd, 0xdd, 0xc7, 0xb6,
	0x09, 0x97, 0x60, 0xad, 0x78, 0x5a, 0x61, 0x47, 0x64, 0xfb, 0x08, 0xdf, 0xf4, 0x33, 0x7d, 0x23,
	0xf0, 0x96, 0x87, 0xbc, 0xf8, 0x52, 0x52, 0x56, 0xe2, 0xeb, 0x47, 0x69, 0xbe, 0x11, 0x38, 0x2a,
	0x27, 0x2a, 0xc1, 0x4d, 0x48, 0x76, 0xf9, 0x1d, 0x30, 0x58, 0x3b, 0xa2, 0xd9, 0xbd, 0x58, 0x3e,
	0x9f, 0xb9, 0xcc, 0x1e, 0x57, 0x42, 0x32, 0xcd, 0x15, 0xb5, 0x4d, 0x78, 0x0b, 0x56, 0x42, 0xb2,
	0x8e, 0x6b, 0xa4, 0x7c, 0x7c, 0x33, 0xb0, 0x3e, 0x93, 0x9c, 0x45, 0x3f, 0x11, 0x0c, 0xe4, 0xe2,
	0x74, 0xee, 0x35, 0x38, 0x05, 0x4f, 0xd7, 0xe7, 0x6c, 0xbb, 0xe0, 0xe9, 0x3d, 0x15, 0x72, 0x4d,
	0x32, 0x21, 0xab, 0xe5, 0xd9, 0x35, 0xc9, 0xee, 0xc5, 0x66, 0x1f, 0x13, 0x5c, 0x75, 0x9b, 0xe9,
	0x20, 0xa6, 0x6d, 0x13, 0xbe, 0x80, 0x27, 0x4a, 0xab, 0x30, 0x3e, 0xf9, 0x9f, 0x0c, 0x7d, 0x14,
	0xfd, 0x46, 0x70, 0xb5, 0x12, 0x31, 0x6c, 0x57, 0xff, 0x97, 0x62, 0x06, 0x56, 0x7d, 0x2c, 0xd4,
	0x12, 0x46, 0x77, 0xe3, 0x2e, 0x4e, 0x8e, 0xce, 0x93, 0x63, 0xc1, 0x62, 0xd9, 0x81, 0xc7, 0x60,
	0x7f, 0x27, 0xdb, 0x03, 0x93, 0x64, 0xc3, 0x58, 0x15, 0xf8, 0x55, 0xef, 0x90, 0x4f, 0xff, 0x9a,
	0xd7, 0xc0, 0x1f, 0xda, 0x26, 0x7c, 0x0f, 0xde, 0x49, 0xad, 0xf0, 0xf3, 0x33, 0xb2, 0xf4, 0xd6,
	0xce, 0x3e, 0xc2, 0xcf, 0xfa, 0x82, 0x11, 0xd8, 0x72, 0x22, 0x3a, 0x82, 0xf7, 0xb5, 0x62, 0xe5,
	0xe5, 0x43, 0x8e, 0xc1, 0xe6, 0xa2, 0x4b, 0x5f, 0x52, 0x15, 0xf8, 0x65, 0x6f, 0x91, 0x03, 0x4d,
	0x26, 0x5c, 0x34, 0xd5, 0xeb, 0xb6, 0x09, 0xa7, 0x60, 0x0b, 0xa5, 0x3b, 0xa6, 0xaf, 0xbd, 0x7c,
	0x53, 0x47, 0x2f, 0xdd, 0x6f, 0x8e, 0xfa, 0xc4, 0x36, 0x8e, 0xfc, 0x30, 0xde, 0xfe, 0x09, 0x00,
	0x00, 0xff, 0xff, 0xaf, 0x01, 0x28, 0x6d, 0x87, 0x03, 0x00, 0x00,
}
