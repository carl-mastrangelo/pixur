// Code generated by protoc-gen-go.
// source: tables.proto
// DO NOT EDIT!

/*
Package tables is a generated protocol buffer package.

It is generated from these files:
	tables.proto

It has these top-level messages:
	PicRow
	TagRow
	PicTagRow
	PicIdentRow
	UserRow
*/
package tables

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import pixur "pixur.org/pixur/schema"
import _ "pixur.org/pixur/schema/db/model"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type PicRow struct {
	Id         int64      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	IndexOrder int64      `protobuf:"varint,2,opt,name=index_order,json=indexOrder" json:"index_order,omitempty"`
	Data       *pixur.Pic `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *PicRow) Reset()                    { *m = PicRow{} }
func (m *PicRow) String() string            { return proto.CompactTextString(m) }
func (*PicRow) ProtoMessage()               {}
func (*PicRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PicRow) GetData() *pixur.Pic {
	if m != nil {
		return m.Data
	}
	return nil
}

type TagRow struct {
	Id   int64      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name string     `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Data *pixur.Tag `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *TagRow) Reset()                    { *m = TagRow{} }
func (m *TagRow) String() string            { return proto.CompactTextString(m) }
func (*TagRow) ProtoMessage()               {}
func (*TagRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TagRow) GetData() *pixur.Tag {
	if m != nil {
		return m.Data
	}
	return nil
}

type PicTagRow struct {
	PicId int64         `protobuf:"varint,1,opt,name=pic_id,json=picId" json:"pic_id,omitempty"`
	TagId int64         `protobuf:"varint,2,opt,name=tag_id,json=tagId" json:"tag_id,omitempty"`
	Data  *pixur.PicTag `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *PicTagRow) Reset()                    { *m = PicTagRow{} }
func (m *PicTagRow) String() string            { return proto.CompactTextString(m) }
func (*PicTagRow) ProtoMessage()               {}
func (*PicTagRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PicTagRow) GetData() *pixur.PicTag {
	if m != nil {
		return m.Data
	}
	return nil
}

type PicIdentRow struct {
	PicId int64               `protobuf:"varint,1,opt,name=pic_id,json=picId" json:"pic_id,omitempty"`
	Type  pixur.PicIdent_Type `protobuf:"varint,2,opt,name=type,enum=pixur.PicIdent_Type" json:"type,omitempty"`
	Value []byte              `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Data  *pixur.PicIdent     `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *PicIdentRow) Reset()                    { *m = PicIdentRow{} }
func (m *PicIdentRow) String() string            { return proto.CompactTextString(m) }
func (*PicIdentRow) ProtoMessage()               {}
func (*PicIdentRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PicIdentRow) GetData() *pixur.PicIdent {
	if m != nil {
		return m.Data
	}
	return nil
}

type UserRow struct {
	Id    int64       `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Ident string      `protobuf:"bytes,2,opt,name=ident" json:"ident,omitempty"`
	Data  *pixur.User `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (m *UserRow) Reset()                    { *m = UserRow{} }
func (m *UserRow) String() string            { return proto.CompactTextString(m) }
func (*UserRow) ProtoMessage()               {}
func (*UserRow) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserRow) GetData() *pixur.User {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PicRow)(nil), "pixur.tables.PicRow")
	proto.RegisterType((*TagRow)(nil), "pixur.tables.TagRow")
	proto.RegisterType((*PicTagRow)(nil), "pixur.tables.PicTagRow")
	proto.RegisterType((*PicIdentRow)(nil), "pixur.tables.PicIdentRow")
	proto.RegisterType((*UserRow)(nil), "pixur.tables.UserRow")
}

var fileDescriptor0 = []byte{
	// 522 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x93, 0xcf, 0x8b, 0xd3, 0x4e,
	0x18, 0xc6, 0x99, 0x34, 0x49, 0xdb, 0xb7, 0x3f, 0x36, 0xcc, 0xf7, 0x8b, 0x96, 0x2c, 0xae, 0xd3,
	0xb8, 0x0b, 0x0b, 0x0b, 0x2d, 0xac, 0x82, 0x20, 0x1e, 0xa4, 0x9e, 0xd6, 0x83, 0x96, 0x52, 0x3d,
	0x78, 0x29, 0xd3, 0xcc, 0x90, 0x1d, 0x68, 0x9b, 0x90, 0x64, 0x75, 0xf7, 0x96, 0x73, 0xf0, 0xe8,
	0xdd, 0xbf, 0xc4, 0x7f, 0xcc, 0x93, 0xcc, 0x3b, 0x69, 0xb3, 0x11, 0x64, 0xf1, 0x52, 0x66, 0xde,
	0x79, 0xe6, 0x79, 0x3e, 0xf3, 0xf6, 0x0d, 0xf4, 0x73, 0xbe, 0xde, 0xc8, 0x6c, 0x92, 0xa4, 0x71,
	0x1e, 0xd3, 0x7e, 0xa2, 0x6e, 0x6f, 0xd2, 0x89, 0xa9, 0xf9, 0x81, 0xd9, 0xc5, 0x69, 0x34, 0xc5,
	0xd5, 0x34, 0x0b, 0xaf, 0xe5, 0x96, 0x9b, 0x8d, 0xb9, 0xe1, 0x5f, 0xfc, 0x45, 0x23, 0xd6, 0xd3,
	0x6d, 0x2c, 0xe4, 0xc6, 0xfc, 0x1a, 0x71, 0xf0, 0x93, 0x80, 0x3b, 0x57, 0xe1, 0x22, 0xfe, 0x4a,
	0x8f, 0xc1, 0x52, 0x62, 0x44, 0x18, 0x39, 0x6f, 0xcd, 0x7a, 0x65, 0xc1, 0xda, 0xe0, 0x5c, 0x89,
	0xb7, 0xf1, 0x66, 0x61, 0x29, 0x41, 0x5f, 0x40, 0x4f, 0xed, 0x84, 0xbc, 0x5d, 0xc5, 0xa9, 0x90,
	0xe9, 0xc8, 0x42, 0xd5, 0x7f, 0x65, 0xc1, 0x8e, 0x60, 0x70, 0xa5, 0x0f, 0x3e, 0xe8, 0xba, 0x56,
	0x83, 0x3a, 0x6c, 0xe9, 0x09, 0xd8, 0x82, 0xe7, 0x7c, 0x64, 0x33, 0x72, 0xde, 0xbb, 0x84, 0x89,
	0x21, 0xd3, 0x79, 0x58, 0x7f, 0x35, 0x2d, 0x0b, 0x76, 0x01, 0xf6, 0x5c, 0x85, 0x19, 0x75, 0x75,
	0xbc, 0x47, 0xe8, 0x71, 0x23, 0xc9, 0xb3, 0x7c, 0xa8, 0xfd, 0xdf, 0xd9, 0x9d, 0x96, 0x67, 0x2f,
	0xba, 0x2a, 0x5b, 0x5d, 0x2b, 0x21, 0xe4, 0x2e, 0xf8, 0x46, 0xc0, 0x5d, 0xf2, 0xe8, 0x41, 0xfe,
	0x31, 0xd8, 0x3b, 0xbe, 0x95, 0x08, 0xde, 0x9d, 0x0d, 0xca, 0x82, 0x75, 0xa1, 0xfd, 0x9e, 0x6f,
	0xa5, 0x16, 0xe0, 0xd1, 0x01, 0xb6, 0xd5, 0x80, 0xd5, 0xe6, 0x06, 0x36, 0x28, 0x0b, 0x76, 0x02,
	0xf6, 0x92, 0x47, 0x35, 0xec, 0xd0, 0xd8, 0x7a, 0x2d, 0xdf, 0xd6, 0x66, 0xc1, 0x0f, 0x02, 0xdd,
	0xb9, 0x0a, 0x2b, 0xa2, 0x33, 0x70, 0x13, 0x15, 0xae, 0x0e, 0x54, 0xc3, 0xb2, 0x60, 0x00, 0x9d,
	0xb9, 0x0a, 0x0d, 0x98, 0x93, 0xe8, 0x95, 0x96, 0xe5, 0x3c, 0xd2, 0x32, 0xeb, 0xbe, 0x6c, 0xc9,
	0xa3, 0x4a, 0x96, 0xeb, 0x95, 0x7e, 0xc2, 0x3d, 0xbe, 0x41, 0xdd, 0xcc, 0x1a, 0x71, 0x5c, 0x16,
	0xec, 0x09, 0xb4, 0x4d, 0x2d, 0xa3, 0x74, 0x9f, 0xbf, 0x0f, 0xf0, 0x48, 0xf0, 0x8b, 0x40, 0x0f,
	0x01, 0xe4, 0x2e, 0xff, 0x07, 0xc6, 0x97, 0x60, 0xe7, 0x77, 0x89, 0xe9, 0xdf, 0xf0, 0xf2, 0xff,
	0x3a, 0x1c, 0x8d, 0x26, 0xcb, 0xbb, 0x44, 0xee, 0xbb, 0xaa, 0xd7, 0xd8, 0x55, 0x7d, 0x81, 0x9e,
	0x82, 0xf3, 0x85, 0x6f, 0x6e, 0x24, 0x62, 0xf7, 0xf7, 0xf6, 0x9f, 0x74, 0x09, 0xed, 0xf1, 0x90,
	0x3e, 0x6b, 0x0c, 0xca, 0xd1, 0x1f, 0xf6, 0xd5, 0xeb, 0xde, 0x94, 0x05, 0x7b, 0x8d, 0xfd, 0xc5,
	0x6a, 0x46, 0x1f, 0x1f, 0xde, 0x87, 0x59, 0x55, 0x92, 0x47, 0xe8, 0xa3, 0x66, 0xc1, 0xf2, 0x1d,
	0xbc, 0x11, 0x7c, 0x27, 0xd0, 0xfe, 0x98, 0xc9, 0xf4, 0xc1, 0x71, 0x39, 0x05, 0x47, 0xe9, 0x1b,
	0xd5, 0xbc, 0x54, 0xd4, 0x68, 0x82, 0xd4, 0x78, 0x48, 0x9f, 0x36, 0xfe, 0x91, 0x5e, 0x45, 0x8d,
	0x01, 0x86, 0xf8, 0xac, 0x2c, 0xd8, 0x18, 0x1c, 0x5d, 0xa9, 0x67, 0xc6, 0xab, 0xbc, 0xbd, 0x56,
	0x85, 0x35, 0xeb, 0x7c, 0x76, 0xcd, 0xf7, 0xbd, 0x76, 0xf1, 0xab, 0x7c, 0xfe, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0xea, 0x9b, 0xc7, 0x59, 0x04, 0x04, 0x00, 0x00,
}
