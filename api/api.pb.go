// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	any "github.com/golang/protobuf/ptypes/any"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddPicCommentRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	CommentParentId      string   `protobuf:"bytes,2,opt,name=comment_parent_id,json=commentParentId,proto3" json:"comment_parent_id,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPicCommentRequest) Reset()         { *m = AddPicCommentRequest{} }
func (m *AddPicCommentRequest) String() string { return proto.CompactTextString(m) }
func (*AddPicCommentRequest) ProtoMessage()    {}
func (*AddPicCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *AddPicCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicCommentRequest.Unmarshal(m, b)
}
func (m *AddPicCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicCommentRequest.Marshal(b, m, deterministic)
}
func (m *AddPicCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicCommentRequest.Merge(m, src)
}
func (m *AddPicCommentRequest) XXX_Size() int {
	return xxx_messageInfo_AddPicCommentRequest.Size(m)
}
func (m *AddPicCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicCommentRequest proto.InternalMessageInfo

func (m *AddPicCommentRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *AddPicCommentRequest) GetCommentParentId() string {
	if m != nil {
		return m.CommentParentId
	}
	return ""
}

func (m *AddPicCommentRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type AddPicCommentResponse struct {
	Comment              *PicComment `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddPicCommentResponse) Reset()         { *m = AddPicCommentResponse{} }
func (m *AddPicCommentResponse) String() string { return proto.CompactTextString(m) }
func (*AddPicCommentResponse) ProtoMessage()    {}
func (*AddPicCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *AddPicCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicCommentResponse.Unmarshal(m, b)
}
func (m *AddPicCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicCommentResponse.Marshal(b, m, deterministic)
}
func (m *AddPicCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicCommentResponse.Merge(m, src)
}
func (m *AddPicCommentResponse) XXX_Size() int {
	return xxx_messageInfo_AddPicCommentResponse.Size(m)
}
func (m *AddPicCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicCommentResponse proto.InternalMessageInfo

func (m *AddPicCommentResponse) GetComment() *PicComment {
	if m != nil {
		return m.Comment
	}
	return nil
}

type AddPicTagsRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	Tag                  []string `protobuf:"bytes,2,rep,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPicTagsRequest) Reset()         { *m = AddPicTagsRequest{} }
func (m *AddPicTagsRequest) String() string { return proto.CompactTextString(m) }
func (*AddPicTagsRequest) ProtoMessage()    {}
func (*AddPicTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *AddPicTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicTagsRequest.Unmarshal(m, b)
}
func (m *AddPicTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicTagsRequest.Marshal(b, m, deterministic)
}
func (m *AddPicTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicTagsRequest.Merge(m, src)
}
func (m *AddPicTagsRequest) XXX_Size() int {
	return xxx_messageInfo_AddPicTagsRequest.Size(m)
}
func (m *AddPicTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicTagsRequest proto.InternalMessageInfo

func (m *AddPicTagsRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *AddPicTagsRequest) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

type AddPicTagsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPicTagsResponse) Reset()         { *m = AddPicTagsResponse{} }
func (m *AddPicTagsResponse) String() string { return proto.CompactTextString(m) }
func (*AddPicTagsResponse) ProtoMessage()    {}
func (*AddPicTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *AddPicTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicTagsResponse.Unmarshal(m, b)
}
func (m *AddPicTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicTagsResponse.Marshal(b, m, deterministic)
}
func (m *AddPicTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicTagsResponse.Merge(m, src)
}
func (m *AddPicTagsResponse) XXX_Size() int {
	return xxx_messageInfo_AddPicTagsResponse.Size(m)
}
func (m *AddPicTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicTagsResponse proto.InternalMessageInfo

type CreateUserRequest struct {
	// ident is the unique identity of the user being created, usually an email address
	Ident string `protobuf:"bytes,1,opt,name=ident,proto3" json:"ident,omitempty"`
	// secret is the secret string used to authenticate the user, usually a password
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *CreateUserRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type CreateUserResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserResponse) Reset()         { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()    {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *CreateUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserResponse.Unmarshal(m, b)
}
func (m *CreateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserResponse.Marshal(b, m, deterministic)
}
func (m *CreateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserResponse.Merge(m, src)
}
func (m *CreateUserResponse) XXX_Size() int {
	return xxx_messageInfo_CreateUserResponse.Size(m)
}
func (m *CreateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserResponse proto.InternalMessageInfo

type DeleteTokenRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTokenRequest) Reset()         { *m = DeleteTokenRequest{} }
func (m *DeleteTokenRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTokenRequest) ProtoMessage()    {}
func (*DeleteTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *DeleteTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTokenRequest.Unmarshal(m, b)
}
func (m *DeleteTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTokenRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTokenRequest.Merge(m, src)
}
func (m *DeleteTokenRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTokenRequest.Size(m)
}
func (m *DeleteTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTokenRequest proto.InternalMessageInfo

type DeleteTokenResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTokenResponse) Reset()         { *m = DeleteTokenResponse{} }
func (m *DeleteTokenResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTokenResponse) ProtoMessage()    {}
func (*DeleteTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *DeleteTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTokenResponse.Unmarshal(m, b)
}
func (m *DeleteTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTokenResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTokenResponse.Merge(m, src)
}
func (m *DeleteTokenResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTokenResponse.Size(m)
}
func (m *DeleteTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTokenResponse proto.InternalMessageInfo

type FindIndexPicsRequest struct {
	StartPicId           string   `protobuf:"bytes,1,opt,name=start_pic_id,json=startPicId,proto3" json:"start_pic_id,omitempty"`
	Ascending            bool     `protobuf:"varint,2,opt,name=ascending,proto3" json:"ascending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindIndexPicsRequest) Reset()         { *m = FindIndexPicsRequest{} }
func (m *FindIndexPicsRequest) String() string { return proto.CompactTextString(m) }
func (*FindIndexPicsRequest) ProtoMessage()    {}
func (*FindIndexPicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *FindIndexPicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindIndexPicsRequest.Unmarshal(m, b)
}
func (m *FindIndexPicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindIndexPicsRequest.Marshal(b, m, deterministic)
}
func (m *FindIndexPicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindIndexPicsRequest.Merge(m, src)
}
func (m *FindIndexPicsRequest) XXX_Size() int {
	return xxx_messageInfo_FindIndexPicsRequest.Size(m)
}
func (m *FindIndexPicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindIndexPicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindIndexPicsRequest proto.InternalMessageInfo

func (m *FindIndexPicsRequest) GetStartPicId() string {
	if m != nil {
		return m.StartPicId
	}
	return ""
}

func (m *FindIndexPicsRequest) GetAscending() bool {
	if m != nil {
		return m.Ascending
	}
	return false
}

type FindIndexPicsResponse struct {
	Pic []*PicAndThumbnail `protobuf:"bytes,4,rep,name=pic,proto3" json:"pic,omitempty"`
	// if set, this field is the next pic id as a
	// continuation token.
	NextPicId string `protobuf:"bytes,2,opt,name=next_pic_id,json=nextPicId,proto3" json:"next_pic_id,omitempty"`
	// if set, this field is the previous pic id as a
	// continuation token.
	PrevPicId            string   `protobuf:"bytes,3,opt,name=prev_pic_id,json=prevPicId,proto3" json:"prev_pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindIndexPicsResponse) Reset()         { *m = FindIndexPicsResponse{} }
func (m *FindIndexPicsResponse) String() string { return proto.CompactTextString(m) }
func (*FindIndexPicsResponse) ProtoMessage()    {}
func (*FindIndexPicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *FindIndexPicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindIndexPicsResponse.Unmarshal(m, b)
}
func (m *FindIndexPicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindIndexPicsResponse.Marshal(b, m, deterministic)
}
func (m *FindIndexPicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindIndexPicsResponse.Merge(m, src)
}
func (m *FindIndexPicsResponse) XXX_Size() int {
	return xxx_messageInfo_FindIndexPicsResponse.Size(m)
}
func (m *FindIndexPicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindIndexPicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindIndexPicsResponse proto.InternalMessageInfo

func (m *FindIndexPicsResponse) GetPic() []*PicAndThumbnail {
	if m != nil {
		return m.Pic
	}
	return nil
}

func (m *FindIndexPicsResponse) GetNextPicId() string {
	if m != nil {
		return m.NextPicId
	}
	return ""
}

func (m *FindIndexPicsResponse) GetPrevPicId() string {
	if m != nil {
		return m.PrevPicId
	}
	return ""
}

type FindPicCommentVotesRequest struct {
	// the pic id of pic comment votes.  Must be present.
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// the comment id of pic comment votes.  If present, pic id must be present too.
	CommentId string `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	// the user_id of the pic votes.  If present, comment id must be present too.
	UserId               string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindPicCommentVotesRequest) Reset()         { *m = FindPicCommentVotesRequest{} }
func (m *FindPicCommentVotesRequest) String() string { return proto.CompactTextString(m) }
func (*FindPicCommentVotesRequest) ProtoMessage()    {}
func (*FindPicCommentVotesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *FindPicCommentVotesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindPicCommentVotesRequest.Unmarshal(m, b)
}
func (m *FindPicCommentVotesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindPicCommentVotesRequest.Marshal(b, m, deterministic)
}
func (m *FindPicCommentVotesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindPicCommentVotesRequest.Merge(m, src)
}
func (m *FindPicCommentVotesRequest) XXX_Size() int {
	return xxx_messageInfo_FindPicCommentVotesRequest.Size(m)
}
func (m *FindPicCommentVotesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindPicCommentVotesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindPicCommentVotesRequest proto.InternalMessageInfo

func (m *FindPicCommentVotesRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *FindPicCommentVotesRequest) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *FindPicCommentVotesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type FindPicCommentVotesResponse struct {
	// all the votes that matched the prefix, and which the subject user has access to.
	Vote                 []*PicCommentVote `protobuf:"bytes,1,rep,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FindPicCommentVotesResponse) Reset()         { *m = FindPicCommentVotesResponse{} }
func (m *FindPicCommentVotesResponse) String() string { return proto.CompactTextString(m) }
func (*FindPicCommentVotesResponse) ProtoMessage()    {}
func (*FindPicCommentVotesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *FindPicCommentVotesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindPicCommentVotesResponse.Unmarshal(m, b)
}
func (m *FindPicCommentVotesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindPicCommentVotesResponse.Marshal(b, m, deterministic)
}
func (m *FindPicCommentVotesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindPicCommentVotesResponse.Merge(m, src)
}
func (m *FindPicCommentVotesResponse) XXX_Size() int {
	return xxx_messageInfo_FindPicCommentVotesResponse.Size(m)
}
func (m *FindPicCommentVotesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindPicCommentVotesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindPicCommentVotesResponse proto.InternalMessageInfo

func (m *FindPicCommentVotesResponse) GetVote() []*PicCommentVote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type FindSchedPicsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSchedPicsRequest) Reset()         { *m = FindSchedPicsRequest{} }
func (m *FindSchedPicsRequest) String() string { return proto.CompactTextString(m) }
func (*FindSchedPicsRequest) ProtoMessage()    {}
func (*FindSchedPicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *FindSchedPicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSchedPicsRequest.Unmarshal(m, b)
}
func (m *FindSchedPicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSchedPicsRequest.Marshal(b, m, deterministic)
}
func (m *FindSchedPicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSchedPicsRequest.Merge(m, src)
}
func (m *FindSchedPicsRequest) XXX_Size() int {
	return xxx_messageInfo_FindSchedPicsRequest.Size(m)
}
func (m *FindSchedPicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSchedPicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindSchedPicsRequest proto.InternalMessageInfo

type FindSchedPicsResponse struct {
	Pic                  []*PicAndThumbnail `protobuf:"bytes,2,rep,name=pic,proto3" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FindSchedPicsResponse) Reset()         { *m = FindSchedPicsResponse{} }
func (m *FindSchedPicsResponse) String() string { return proto.CompactTextString(m) }
func (*FindSchedPicsResponse) ProtoMessage()    {}
func (*FindSchedPicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *FindSchedPicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSchedPicsResponse.Unmarshal(m, b)
}
func (m *FindSchedPicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSchedPicsResponse.Marshal(b, m, deterministic)
}
func (m *FindSchedPicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSchedPicsResponse.Merge(m, src)
}
func (m *FindSchedPicsResponse) XXX_Size() int {
	return xxx_messageInfo_FindSchedPicsResponse.Size(m)
}
func (m *FindSchedPicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSchedPicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindSchedPicsResponse proto.InternalMessageInfo

func (m *FindSchedPicsResponse) GetPic() []*PicAndThumbnail {
	if m != nil {
		return m.Pic
	}
	return nil
}

type FindSimilarPicsRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSimilarPicsRequest) Reset()         { *m = FindSimilarPicsRequest{} }
func (m *FindSimilarPicsRequest) String() string { return proto.CompactTextString(m) }
func (*FindSimilarPicsRequest) ProtoMessage()    {}
func (*FindSimilarPicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *FindSimilarPicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSimilarPicsRequest.Unmarshal(m, b)
}
func (m *FindSimilarPicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSimilarPicsRequest.Marshal(b, m, deterministic)
}
func (m *FindSimilarPicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSimilarPicsRequest.Merge(m, src)
}
func (m *FindSimilarPicsRequest) XXX_Size() int {
	return xxx_messageInfo_FindSimilarPicsRequest.Size(m)
}
func (m *FindSimilarPicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSimilarPicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindSimilarPicsRequest proto.InternalMessageInfo

func (m *FindSimilarPicsRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type FindSimilarPicsResponse struct {
	PicId                []string `protobuf:"bytes,1,rep,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSimilarPicsResponse) Reset()         { *m = FindSimilarPicsResponse{} }
func (m *FindSimilarPicsResponse) String() string { return proto.CompactTextString(m) }
func (*FindSimilarPicsResponse) ProtoMessage()    {}
func (*FindSimilarPicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *FindSimilarPicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSimilarPicsResponse.Unmarshal(m, b)
}
func (m *FindSimilarPicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSimilarPicsResponse.Marshal(b, m, deterministic)
}
func (m *FindSimilarPicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSimilarPicsResponse.Merge(m, src)
}
func (m *FindSimilarPicsResponse) XXX_Size() int {
	return xxx_messageInfo_FindSimilarPicsResponse.Size(m)
}
func (m *FindSimilarPicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSimilarPicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindSimilarPicsResponse proto.InternalMessageInfo

func (m *FindSimilarPicsResponse) GetPicId() []string {
	if m != nil {
		return m.PicId
	}
	return nil
}

type FindUserEventsRequest struct {
	// Optional.  Uses auth token if not specified.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Optional.  If present, specifies the starting user event id to scan for
	StartUserEventId     string   `protobuf:"bytes,2,opt,name=start_user_event_id,json=startUserEventId,proto3" json:"start_user_event_id,omitempty"`
	Ascending            bool     `protobuf:"varint,3,opt,name=ascending,proto3" json:"ascending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindUserEventsRequest) Reset()         { *m = FindUserEventsRequest{} }
func (m *FindUserEventsRequest) String() string { return proto.CompactTextString(m) }
func (*FindUserEventsRequest) ProtoMessage()    {}
func (*FindUserEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *FindUserEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUserEventsRequest.Unmarshal(m, b)
}
func (m *FindUserEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUserEventsRequest.Marshal(b, m, deterministic)
}
func (m *FindUserEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUserEventsRequest.Merge(m, src)
}
func (m *FindUserEventsRequest) XXX_Size() int {
	return xxx_messageInfo_FindUserEventsRequest.Size(m)
}
func (m *FindUserEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUserEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindUserEventsRequest proto.InternalMessageInfo

func (m *FindUserEventsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *FindUserEventsRequest) GetStartUserEventId() string {
	if m != nil {
		return m.StartUserEventId
	}
	return ""
}

func (m *FindUserEventsRequest) GetAscending() bool {
	if m != nil {
		return m.Ascending
	}
	return false
}

type FindUserEventsResponse struct {
	UserEvent            []*UserEvent `protobuf:"bytes,1,rep,name=user_event,json=userEvent,proto3" json:"user_event,omitempty"`
	NextUserEventId      string       `protobuf:"bytes,2,opt,name=next_user_event_id,json=nextUserEventId,proto3" json:"next_user_event_id,omitempty"`
	PrevUserEventId      string       `protobuf:"bytes,3,opt,name=prev_user_event_id,json=prevUserEventId,proto3" json:"prev_user_event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FindUserEventsResponse) Reset()         { *m = FindUserEventsResponse{} }
func (m *FindUserEventsResponse) String() string { return proto.CompactTextString(m) }
func (*FindUserEventsResponse) ProtoMessage()    {}
func (*FindUserEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *FindUserEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUserEventsResponse.Unmarshal(m, b)
}
func (m *FindUserEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUserEventsResponse.Marshal(b, m, deterministic)
}
func (m *FindUserEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUserEventsResponse.Merge(m, src)
}
func (m *FindUserEventsResponse) XXX_Size() int {
	return xxx_messageInfo_FindUserEventsResponse.Size(m)
}
func (m *FindUserEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUserEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindUserEventsResponse proto.InternalMessageInfo

func (m *FindUserEventsResponse) GetUserEvent() []*UserEvent {
	if m != nil {
		return m.UserEvent
	}
	return nil
}

func (m *FindUserEventsResponse) GetNextUserEventId() string {
	if m != nil {
		return m.NextUserEventId
	}
	return ""
}

func (m *FindUserEventsResponse) GetPrevUserEventId() string {
	if m != nil {
		return m.PrevUserEventId
	}
	return ""
}

type GetRefreshTokenRequest struct {
	// ident is the unique identity of the user being created, usually an email address
	Ident string `protobuf:"bytes,1,opt,name=ident,proto3" json:"ident,omitempty"`
	// secret is the secret string used to authenticate the user, usually a password
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	PreviousAuthToken    string   `protobuf:"bytes,3,opt,name=previous_auth_token,json=previousAuthToken,proto3" json:"previous_auth_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRefreshTokenRequest) Reset()         { *m = GetRefreshTokenRequest{} }
func (m *GetRefreshTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetRefreshTokenRequest) ProtoMessage()    {}
func (*GetRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *GetRefreshTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRefreshTokenRequest.Unmarshal(m, b)
}
func (m *GetRefreshTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRefreshTokenRequest.Marshal(b, m, deterministic)
}
func (m *GetRefreshTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRefreshTokenRequest.Merge(m, src)
}
func (m *GetRefreshTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetRefreshTokenRequest.Size(m)
}
func (m *GetRefreshTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRefreshTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRefreshTokenRequest proto.InternalMessageInfo

func (m *GetRefreshTokenRequest) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *GetRefreshTokenRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *GetRefreshTokenRequest) GetPreviousAuthToken() string {
	if m != nil {
		return m.PreviousAuthToken
	}
	return ""
}

type GetRefreshTokenResponse struct {
	AuthToken            string      `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	PixToken             string      `protobuf:"bytes,5,opt,name=pix_token,json=pixToken,proto3" json:"pix_token,omitempty"`
	AuthPayload          *PwtPayload `protobuf:"bytes,4,opt,name=auth_payload,json=authPayload,proto3" json:"auth_payload,omitempty"`
	PixPayload           *PwtPayload `protobuf:"bytes,6,opt,name=pix_payload,json=pixPayload,proto3" json:"pix_payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRefreshTokenResponse) Reset()         { *m = GetRefreshTokenResponse{} }
func (m *GetRefreshTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GetRefreshTokenResponse) ProtoMessage()    {}
func (*GetRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *GetRefreshTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRefreshTokenResponse.Unmarshal(m, b)
}
func (m *GetRefreshTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRefreshTokenResponse.Marshal(b, m, deterministic)
}
func (m *GetRefreshTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRefreshTokenResponse.Merge(m, src)
}
func (m *GetRefreshTokenResponse) XXX_Size() int {
	return xxx_messageInfo_GetRefreshTokenResponse.Size(m)
}
func (m *GetRefreshTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRefreshTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRefreshTokenResponse proto.InternalMessageInfo

func (m *GetRefreshTokenResponse) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *GetRefreshTokenResponse) GetPixToken() string {
	if m != nil {
		return m.PixToken
	}
	return ""
}

func (m *GetRefreshTokenResponse) GetAuthPayload() *PwtPayload {
	if m != nil {
		return m.AuthPayload
	}
	return nil
}

func (m *GetRefreshTokenResponse) GetPixPayload() *PwtPayload {
	if m != nil {
		return m.PixPayload
	}
	return nil
}

type IncrementViewCountRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrementViewCountRequest) Reset()         { *m = IncrementViewCountRequest{} }
func (m *IncrementViewCountRequest) String() string { return proto.CompactTextString(m) }
func (*IncrementViewCountRequest) ProtoMessage()    {}
func (*IncrementViewCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *IncrementViewCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementViewCountRequest.Unmarshal(m, b)
}
func (m *IncrementViewCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementViewCountRequest.Marshal(b, m, deterministic)
}
func (m *IncrementViewCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementViewCountRequest.Merge(m, src)
}
func (m *IncrementViewCountRequest) XXX_Size() int {
	return xxx_messageInfo_IncrementViewCountRequest.Size(m)
}
func (m *IncrementViewCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementViewCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementViewCountRequest proto.InternalMessageInfo

func (m *IncrementViewCountRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type IncrementViewCountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrementViewCountResponse) Reset()         { *m = IncrementViewCountResponse{} }
func (m *IncrementViewCountResponse) String() string { return proto.CompactTextString(m) }
func (*IncrementViewCountResponse) ProtoMessage()    {}
func (*IncrementViewCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *IncrementViewCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementViewCountResponse.Unmarshal(m, b)
}
func (m *IncrementViewCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementViewCountResponse.Marshal(b, m, deterministic)
}
func (m *IncrementViewCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementViewCountResponse.Merge(m, src)
}
func (m *IncrementViewCountResponse) XXX_Size() int {
	return xxx_messageInfo_IncrementViewCountResponse.Size(m)
}
func (m *IncrementViewCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementViewCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementViewCountResponse proto.InternalMessageInfo

type LookupPicCommentVoteRequest struct {
	PicId     string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	CommentId string `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	// if absent, this comes from the auth token.
	UserId               string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicCommentVoteRequest) Reset()         { *m = LookupPicCommentVoteRequest{} }
func (m *LookupPicCommentVoteRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicCommentVoteRequest) ProtoMessage()    {}
func (*LookupPicCommentVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *LookupPicCommentVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicCommentVoteRequest.Unmarshal(m, b)
}
func (m *LookupPicCommentVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicCommentVoteRequest.Marshal(b, m, deterministic)
}
func (m *LookupPicCommentVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicCommentVoteRequest.Merge(m, src)
}
func (m *LookupPicCommentVoteRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicCommentVoteRequest.Size(m)
}
func (m *LookupPicCommentVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicCommentVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicCommentVoteRequest proto.InternalMessageInfo

func (m *LookupPicCommentVoteRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *LookupPicCommentVoteRequest) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *LookupPicCommentVoteRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LookupPicCommentVoteResponse struct {
	Vote                 *PicCommentVote `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LookupPicCommentVoteResponse) Reset()         { *m = LookupPicCommentVoteResponse{} }
func (m *LookupPicCommentVoteResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicCommentVoteResponse) ProtoMessage()    {}
func (*LookupPicCommentVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *LookupPicCommentVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicCommentVoteResponse.Unmarshal(m, b)
}
func (m *LookupPicCommentVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicCommentVoteResponse.Marshal(b, m, deterministic)
}
func (m *LookupPicCommentVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicCommentVoteResponse.Merge(m, src)
}
func (m *LookupPicCommentVoteResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicCommentVoteResponse.Size(m)
}
func (m *LookupPicCommentVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicCommentVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicCommentVoteResponse proto.InternalMessageInfo

func (m *LookupPicCommentVoteResponse) GetVote() *PicCommentVote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type LookupPicDetailsRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicDetailsRequest) Reset()         { *m = LookupPicDetailsRequest{} }
func (m *LookupPicDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicDetailsRequest) ProtoMessage()    {}
func (*LookupPicDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *LookupPicDetailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicDetailsRequest.Unmarshal(m, b)
}
func (m *LookupPicDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicDetailsRequest.Marshal(b, m, deterministic)
}
func (m *LookupPicDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicDetailsRequest.Merge(m, src)
}
func (m *LookupPicDetailsRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicDetailsRequest.Size(m)
}
func (m *LookupPicDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicDetailsRequest proto.InternalMessageInfo

func (m *LookupPicDetailsRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type LookupPicDetailsResponse struct {
	Pic                  *Pic            `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	PicTag               []*PicTag       `protobuf:"bytes,2,rep,name=pic_tag,json=picTag,proto3" json:"pic_tag,omitempty"`
	PicCommentTree       *PicCommentTree `protobuf:"bytes,3,opt,name=pic_comment_tree,json=picCommentTree,proto3" json:"pic_comment_tree,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LookupPicDetailsResponse) Reset()         { *m = LookupPicDetailsResponse{} }
func (m *LookupPicDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicDetailsResponse) ProtoMessage()    {}
func (*LookupPicDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *LookupPicDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicDetailsResponse.Unmarshal(m, b)
}
func (m *LookupPicDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicDetailsResponse.Marshal(b, m, deterministic)
}
func (m *LookupPicDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicDetailsResponse.Merge(m, src)
}
func (m *LookupPicDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicDetailsResponse.Size(m)
}
func (m *LookupPicDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicDetailsResponse proto.InternalMessageInfo

func (m *LookupPicDetailsResponse) GetPic() *Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

func (m *LookupPicDetailsResponse) GetPicTag() []*PicTag {
	if m != nil {
		return m.PicTag
	}
	return nil
}

func (m *LookupPicDetailsResponse) GetPicCommentTree() *PicCommentTree {
	if m != nil {
		return m.PicCommentTree
	}
	return nil
}

type LookupPicExtensionRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicExtensionRequest) Reset()         { *m = LookupPicExtensionRequest{} }
func (m *LookupPicExtensionRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicExtensionRequest) ProtoMessage()    {}
func (*LookupPicExtensionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *LookupPicExtensionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicExtensionRequest.Unmarshal(m, b)
}
func (m *LookupPicExtensionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicExtensionRequest.Marshal(b, m, deterministic)
}
func (m *LookupPicExtensionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicExtensionRequest.Merge(m, src)
}
func (m *LookupPicExtensionRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicExtensionRequest.Size(m)
}
func (m *LookupPicExtensionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicExtensionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicExtensionRequest proto.InternalMessageInfo

func (m *LookupPicExtensionRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type LookupPicExtensionResponse struct {
	Ext                  map[string]*any.Any `protobuf:"bytes,1,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LookupPicExtensionResponse) Reset()         { *m = LookupPicExtensionResponse{} }
func (m *LookupPicExtensionResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicExtensionResponse) ProtoMessage()    {}
func (*LookupPicExtensionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}

func (m *LookupPicExtensionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicExtensionResponse.Unmarshal(m, b)
}
func (m *LookupPicExtensionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicExtensionResponse.Marshal(b, m, deterministic)
}
func (m *LookupPicExtensionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicExtensionResponse.Merge(m, src)
}
func (m *LookupPicExtensionResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicExtensionResponse.Size(m)
}
func (m *LookupPicExtensionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicExtensionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicExtensionResponse proto.InternalMessageInfo

func (m *LookupPicExtensionResponse) GetExt() map[string]*any.Any {
	if m != nil {
		return m.Ext
	}
	return nil
}

type LookupPicFileRequest struct {
	PicFileId            string         `protobuf:"bytes,1,opt,name=pic_file_id,json=picFileId,proto3" json:"pic_file_id,omitempty"`
	Format               PicFile_Format `protobuf:"varint,2,opt,name=format,proto3,enum=pixur.api.PicFile_Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LookupPicFileRequest) Reset()         { *m = LookupPicFileRequest{} }
func (m *LookupPicFileRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicFileRequest) ProtoMessage()    {}
func (*LookupPicFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}

func (m *LookupPicFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicFileRequest.Unmarshal(m, b)
}
func (m *LookupPicFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicFileRequest.Marshal(b, m, deterministic)
}
func (m *LookupPicFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicFileRequest.Merge(m, src)
}
func (m *LookupPicFileRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicFileRequest.Size(m)
}
func (m *LookupPicFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicFileRequest proto.InternalMessageInfo

func (m *LookupPicFileRequest) GetPicFileId() string {
	if m != nil {
		return m.PicFileId
	}
	return ""
}

func (m *LookupPicFileRequest) GetFormat() PicFile_Format {
	if m != nil {
		return m.Format
	}
	return PicFile_UNKNOWN
}

type LookupPicFileResponse struct {
	PicFile              *PicFile `protobuf:"bytes,1,opt,name=pic_file,json=picFile,proto3" json:"pic_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicFileResponse) Reset()         { *m = LookupPicFileResponse{} }
func (m *LookupPicFileResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicFileResponse) ProtoMessage()    {}
func (*LookupPicFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{29}
}

func (m *LookupPicFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicFileResponse.Unmarshal(m, b)
}
func (m *LookupPicFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicFileResponse.Marshal(b, m, deterministic)
}
func (m *LookupPicFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicFileResponse.Merge(m, src)
}
func (m *LookupPicFileResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicFileResponse.Size(m)
}
func (m *LookupPicFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicFileResponse proto.InternalMessageInfo

func (m *LookupPicFileResponse) GetPicFile() *PicFile {
	if m != nil {
		return m.PicFile
	}
	return nil
}

type LookupPicVoteRequest struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// Optional.  Uses auth token if not specified.
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicVoteRequest) Reset()         { *m = LookupPicVoteRequest{} }
func (m *LookupPicVoteRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicVoteRequest) ProtoMessage()    {}
func (*LookupPicVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{30}
}

func (m *LookupPicVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicVoteRequest.Unmarshal(m, b)
}
func (m *LookupPicVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicVoteRequest.Marshal(b, m, deterministic)
}
func (m *LookupPicVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicVoteRequest.Merge(m, src)
}
func (m *LookupPicVoteRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicVoteRequest.Size(m)
}
func (m *LookupPicVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicVoteRequest proto.InternalMessageInfo

func (m *LookupPicVoteRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *LookupPicVoteRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LookupPicVoteResponse struct {
	Vote                 *PicVote `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicVoteResponse) Reset()         { *m = LookupPicVoteResponse{} }
func (m *LookupPicVoteResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicVoteResponse) ProtoMessage()    {}
func (*LookupPicVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{31}
}

func (m *LookupPicVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicVoteResponse.Unmarshal(m, b)
}
func (m *LookupPicVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicVoteResponse.Marshal(b, m, deterministic)
}
func (m *LookupPicVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicVoteResponse.Merge(m, src)
}
func (m *LookupPicVoteResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicVoteResponse.Size(m)
}
func (m *LookupPicVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicVoteResponse proto.InternalMessageInfo

func (m *LookupPicVoteResponse) GetVote() *PicVote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type LookupPublicUserInfoRequest struct {
	// if absent, assumed to come from auth token
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPublicUserInfoRequest) Reset()         { *m = LookupPublicUserInfoRequest{} }
func (m *LookupPublicUserInfoRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPublicUserInfoRequest) ProtoMessage()    {}
func (*LookupPublicUserInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{32}
}

func (m *LookupPublicUserInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPublicUserInfoRequest.Unmarshal(m, b)
}
func (m *LookupPublicUserInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPublicUserInfoRequest.Marshal(b, m, deterministic)
}
func (m *LookupPublicUserInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPublicUserInfoRequest.Merge(m, src)
}
func (m *LookupPublicUserInfoRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPublicUserInfoRequest.Size(m)
}
func (m *LookupPublicUserInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPublicUserInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPublicUserInfoRequest proto.InternalMessageInfo

func (m *LookupPublicUserInfoRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LookupPublicUserInfoResponse struct {
	UserInfo             *PublicUserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LookupPublicUserInfoResponse) Reset()         { *m = LookupPublicUserInfoResponse{} }
func (m *LookupPublicUserInfoResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPublicUserInfoResponse) ProtoMessage()    {}
func (*LookupPublicUserInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{33}
}

func (m *LookupPublicUserInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPublicUserInfoResponse.Unmarshal(m, b)
}
func (m *LookupPublicUserInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPublicUserInfoResponse.Marshal(b, m, deterministic)
}
func (m *LookupPublicUserInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPublicUserInfoResponse.Merge(m, src)
}
func (m *LookupPublicUserInfoResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPublicUserInfoResponse.Size(m)
}
func (m *LookupPublicUserInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPublicUserInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPublicUserInfoResponse proto.InternalMessageInfo

func (m *LookupPublicUserInfoResponse) GetUserInfo() *PublicUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type LookupUserRequest struct {
	// if absent, assumed to come from auth token
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupUserRequest) Reset()         { *m = LookupUserRequest{} }
func (m *LookupUserRequest) String() string { return proto.CompactTextString(m) }
func (*LookupUserRequest) ProtoMessage()    {}
func (*LookupUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{34}
}

func (m *LookupUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupUserRequest.Unmarshal(m, b)
}
func (m *LookupUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupUserRequest.Marshal(b, m, deterministic)
}
func (m *LookupUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupUserRequest.Merge(m, src)
}
func (m *LookupUserRequest) XXX_Size() int {
	return xxx_messageInfo_LookupUserRequest.Size(m)
}
func (m *LookupUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupUserRequest proto.InternalMessageInfo

func (m *LookupUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LookupUserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupUserResponse) Reset()         { *m = LookupUserResponse{} }
func (m *LookupUserResponse) String() string { return proto.CompactTextString(m) }
func (*LookupUserResponse) ProtoMessage()    {}
func (*LookupUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{35}
}

func (m *LookupUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupUserResponse.Unmarshal(m, b)
}
func (m *LookupUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupUserResponse.Marshal(b, m, deterministic)
}
func (m *LookupUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupUserResponse.Merge(m, src)
}
func (m *LookupUserResponse) XXX_Size() int {
	return xxx_messageInfo_LookupUserResponse.Size(m)
}
func (m *LookupUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupUserResponse proto.InternalMessageInfo

func (m *LookupUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type PurgePicRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgePicRequest) Reset()         { *m = PurgePicRequest{} }
func (m *PurgePicRequest) String() string { return proto.CompactTextString(m) }
func (*PurgePicRequest) ProtoMessage()    {}
func (*PurgePicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{36}
}

func (m *PurgePicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgePicRequest.Unmarshal(m, b)
}
func (m *PurgePicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgePicRequest.Marshal(b, m, deterministic)
}
func (m *PurgePicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgePicRequest.Merge(m, src)
}
func (m *PurgePicRequest) XXX_Size() int {
	return xxx_messageInfo_PurgePicRequest.Size(m)
}
func (m *PurgePicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgePicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PurgePicRequest proto.InternalMessageInfo

func (m *PurgePicRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type PurgePicResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgePicResponse) Reset()         { *m = PurgePicResponse{} }
func (m *PurgePicResponse) String() string { return proto.CompactTextString(m) }
func (*PurgePicResponse) ProtoMessage()    {}
func (*PurgePicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{37}
}

func (m *PurgePicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgePicResponse.Unmarshal(m, b)
}
func (m *PurgePicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgePicResponse.Marshal(b, m, deterministic)
}
func (m *PurgePicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgePicResponse.Merge(m, src)
}
func (m *PurgePicResponse) XXX_Size() int {
	return xxx_messageInfo_PurgePicResponse.Size(m)
}
func (m *PurgePicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgePicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PurgePicResponse proto.InternalMessageInfo

type ReadPicFileRequest struct {
	PicFileId string         `protobuf:"bytes,1,opt,name=pic_file_id,json=picFileId,proto3" json:"pic_file_id,omitempty"`
	Format    PicFile_Format `protobuf:"varint,2,opt,name=format,proto3,enum=pixur.api.PicFile_Format" json:"format,omitempty"`
	// The offset into the file to start reading at.  Required
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The maximum number of bytes to read.   Maybe be 0.
	Limit                int64    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPicFileRequest) Reset()         { *m = ReadPicFileRequest{} }
func (m *ReadPicFileRequest) String() string { return proto.CompactTextString(m) }
func (*ReadPicFileRequest) ProtoMessage()    {}
func (*ReadPicFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{38}
}

func (m *ReadPicFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPicFileRequest.Unmarshal(m, b)
}
func (m *ReadPicFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPicFileRequest.Marshal(b, m, deterministic)
}
func (m *ReadPicFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPicFileRequest.Merge(m, src)
}
func (m *ReadPicFileRequest) XXX_Size() int {
	return xxx_messageInfo_ReadPicFileRequest.Size(m)
}
func (m *ReadPicFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPicFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPicFileRequest proto.InternalMessageInfo

func (m *ReadPicFileRequest) GetPicFileId() string {
	if m != nil {
		return m.PicFileId
	}
	return ""
}

func (m *ReadPicFileRequest) GetFormat() PicFile_Format {
	if m != nil {
		return m.Format
	}
	return PicFile_UNKNOWN
}

func (m *ReadPicFileRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadPicFileRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadPicFileResponse struct {
	// may be empty
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// indicates that the end of the pic has been reached.
	Eof                  bool     `protobuf:"varint,2,opt,name=eof,proto3" json:"eof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPicFileResponse) Reset()         { *m = ReadPicFileResponse{} }
func (m *ReadPicFileResponse) String() string { return proto.CompactTextString(m) }
func (*ReadPicFileResponse) ProtoMessage()    {}
func (*ReadPicFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{39}
}

func (m *ReadPicFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPicFileResponse.Unmarshal(m, b)
}
func (m *ReadPicFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPicFileResponse.Marshal(b, m, deterministic)
}
func (m *ReadPicFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPicFileResponse.Merge(m, src)
}
func (m *ReadPicFileResponse) XXX_Size() int {
	return xxx_messageInfo_ReadPicFileResponse.Size(m)
}
func (m *ReadPicFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPicFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPicFileResponse proto.InternalMessageInfo

func (m *ReadPicFileResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadPicFileResponse) GetEof() bool {
	if m != nil {
		return m.Eof
	}
	return false
}

type SoftDeletePicRequest struct {
	PicId                string               `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	Details              string               `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Reason               DeletionReason       `protobuf:"varint,3,opt,name=reason,proto3,enum=pixur.api.DeletionReason" json:"reason,omitempty"`
	DeletionTime         *timestamp.Timestamp `protobuf:"bytes,4,opt,name=deletion_time,json=deletionTime,proto3" json:"deletion_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SoftDeletePicRequest) Reset()         { *m = SoftDeletePicRequest{} }
func (m *SoftDeletePicRequest) String() string { return proto.CompactTextString(m) }
func (*SoftDeletePicRequest) ProtoMessage()    {}
func (*SoftDeletePicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{40}
}

func (m *SoftDeletePicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoftDeletePicRequest.Unmarshal(m, b)
}
func (m *SoftDeletePicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoftDeletePicRequest.Marshal(b, m, deterministic)
}
func (m *SoftDeletePicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoftDeletePicRequest.Merge(m, src)
}
func (m *SoftDeletePicRequest) XXX_Size() int {
	return xxx_messageInfo_SoftDeletePicRequest.Size(m)
}
func (m *SoftDeletePicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SoftDeletePicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SoftDeletePicRequest proto.InternalMessageInfo

func (m *SoftDeletePicRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *SoftDeletePicRequest) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *SoftDeletePicRequest) GetReason() DeletionReason {
	if m != nil {
		return m.Reason
	}
	return DeletionReason_UNKNOWN
}

func (m *SoftDeletePicRequest) GetDeletionTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeletionTime
	}
	return nil
}

type SoftDeletePicResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SoftDeletePicResponse) Reset()         { *m = SoftDeletePicResponse{} }
func (m *SoftDeletePicResponse) String() string { return proto.CompactTextString(m) }
func (*SoftDeletePicResponse) ProtoMessage()    {}
func (*SoftDeletePicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{41}
}

func (m *SoftDeletePicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoftDeletePicResponse.Unmarshal(m, b)
}
func (m *SoftDeletePicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoftDeletePicResponse.Marshal(b, m, deterministic)
}
func (m *SoftDeletePicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoftDeletePicResponse.Merge(m, src)
}
func (m *SoftDeletePicResponse) XXX_Size() int {
	return xxx_messageInfo_SoftDeletePicResponse.Size(m)
}
func (m *SoftDeletePicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SoftDeletePicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SoftDeletePicResponse proto.InternalMessageInfo

type UpdateUserRequest struct {
	UserId               string                              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Version              int64                               `protobuf:"fixed64,2,opt,name=version,proto3" json:"version,omitempty"`
	Ident                *UpdateUserRequest_ChangeIdent      `protobuf:"bytes,3,opt,name=ident,proto3" json:"ident,omitempty"`
	Secret               *UpdateUserRequest_ChangeSecret     `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	Capability           *UpdateUserRequest_ChangeCapability `protobuf:"bytes,5,opt,name=capability,proto3" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateUserRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UpdateUserRequest) GetIdent() *UpdateUserRequest_ChangeIdent {
	if m != nil {
		return m.Ident
	}
	return nil
}

func (m *UpdateUserRequest) GetSecret() *UpdateUserRequest_ChangeSecret {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *UpdateUserRequest) GetCapability() *UpdateUserRequest_ChangeCapability {
	if m != nil {
		return m.Capability
	}
	return nil
}

type UpdateUserRequest_ChangeIdent struct {
	Ident                string   `protobuf:"bytes,1,opt,name=ident,proto3" json:"ident,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest_ChangeIdent) Reset()         { *m = UpdateUserRequest_ChangeIdent{} }
func (m *UpdateUserRequest_ChangeIdent) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_ChangeIdent) ProtoMessage()    {}
func (*UpdateUserRequest_ChangeIdent) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42, 0}
}

func (m *UpdateUserRequest_ChangeIdent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_ChangeIdent.Unmarshal(m, b)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_ChangeIdent.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_ChangeIdent.Merge(m, src)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_ChangeIdent.Size(m)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_ChangeIdent.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_ChangeIdent proto.InternalMessageInfo

func (m *UpdateUserRequest_ChangeIdent) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

type UpdateUserRequest_ChangeSecret struct {
	Secret               string   `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest_ChangeSecret) Reset()         { *m = UpdateUserRequest_ChangeSecret{} }
func (m *UpdateUserRequest_ChangeSecret) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_ChangeSecret) ProtoMessage()    {}
func (*UpdateUserRequest_ChangeSecret) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42, 1}
}

func (m *UpdateUserRequest_ChangeSecret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_ChangeSecret.Unmarshal(m, b)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_ChangeSecret.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_ChangeSecret.Merge(m, src)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_ChangeSecret.Size(m)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_ChangeSecret.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_ChangeSecret proto.InternalMessageInfo

func (m *UpdateUserRequest_ChangeSecret) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type UpdateUserRequest_ChangeCapability struct {
	SetCapability        []Capability_Cap `protobuf:"varint,1,rep,packed,name=set_capability,json=setCapability,proto3,enum=pixur.api.Capability_Cap" json:"set_capability,omitempty"`
	ClearCapability      []Capability_Cap `protobuf:"varint,2,rep,packed,name=clear_capability,json=clearCapability,proto3,enum=pixur.api.Capability_Cap" json:"clear_capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateUserRequest_ChangeCapability) Reset()         { *m = UpdateUserRequest_ChangeCapability{} }
func (m *UpdateUserRequest_ChangeCapability) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_ChangeCapability) ProtoMessage()    {}
func (*UpdateUserRequest_ChangeCapability) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42, 2}
}

func (m *UpdateUserRequest_ChangeCapability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_ChangeCapability.Unmarshal(m, b)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_ChangeCapability.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_ChangeCapability.Merge(m, src)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_ChangeCapability.Size(m)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_ChangeCapability.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_ChangeCapability proto.InternalMessageInfo

func (m *UpdateUserRequest_ChangeCapability) GetSetCapability() []Capability_Cap {
	if m != nil {
		return m.SetCapability
	}
	return nil
}

func (m *UpdateUserRequest_ChangeCapability) GetClearCapability() []Capability_Cap {
	if m != nil {
		return m.ClearCapability
	}
	return nil
}

type UpdateUserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserResponse) Reset()         { *m = UpdateUserResponse{} }
func (m *UpdateUserResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateUserResponse) ProtoMessage()    {}
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{43}
}

func (m *UpdateUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserResponse.Unmarshal(m, b)
}
func (m *UpdateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserResponse.Marshal(b, m, deterministic)
}
func (m *UpdateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserResponse.Merge(m, src)
}
func (m *UpdateUserResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateUserResponse.Size(m)
}
func (m *UpdateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserResponse proto.InternalMessageInfo

func (m *UpdateUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpsertPicCommentVoteRequest struct {
	PicId     string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	CommentId string `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	// Optional.   Not necessary when creating for the first time.
	Version              int64               `protobuf:"fixed64,3,opt,name=version,proto3" json:"version,omitempty"`
	Vote                 PicCommentVote_Vote `protobuf:"varint,4,opt,name=vote,proto3,enum=pixur.api.PicCommentVote_Vote" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpsertPicCommentVoteRequest) Reset()         { *m = UpsertPicCommentVoteRequest{} }
func (m *UpsertPicCommentVoteRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPicCommentVoteRequest) ProtoMessage()    {}
func (*UpsertPicCommentVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{44}
}

func (m *UpsertPicCommentVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicCommentVoteRequest.Unmarshal(m, b)
}
func (m *UpsertPicCommentVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicCommentVoteRequest.Marshal(b, m, deterministic)
}
func (m *UpsertPicCommentVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicCommentVoteRequest.Merge(m, src)
}
func (m *UpsertPicCommentVoteRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPicCommentVoteRequest.Size(m)
}
func (m *UpsertPicCommentVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicCommentVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicCommentVoteRequest proto.InternalMessageInfo

func (m *UpsertPicCommentVoteRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *UpsertPicCommentVoteRequest) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *UpsertPicCommentVoteRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UpsertPicCommentVoteRequest) GetVote() PicCommentVote_Vote {
	if m != nil {
		return m.Vote
	}
	return PicCommentVote_UNKNOWN
}

type UpsertPicCommentVoteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicCommentVoteResponse) Reset()         { *m = UpsertPicCommentVoteResponse{} }
func (m *UpsertPicCommentVoteResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPicCommentVoteResponse) ProtoMessage()    {}
func (*UpsertPicCommentVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{45}
}

func (m *UpsertPicCommentVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicCommentVoteResponse.Unmarshal(m, b)
}
func (m *UpsertPicCommentVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicCommentVoteResponse.Marshal(b, m, deterministic)
}
func (m *UpsertPicCommentVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicCommentVoteResponse.Merge(m, src)
}
func (m *UpsertPicCommentVoteResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPicCommentVoteResponse.Size(m)
}
func (m *UpsertPicCommentVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicCommentVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicCommentVoteResponse proto.InternalMessageInfo

// UpsertPicRequest is a request to upload and possibly merge with another
// picture.
type UpsertPicRequest struct {
	// url is an optional field for the Pixur backend to download the pic from.
	// Either url and/or data must be set.   If the data field is set along
	// with the URL, the url is treated as regular metadata and not fetched.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// referrer is the referrer url used to fetch the resource.  If no data is
	// set, the url will be used to retrieve the data, along with the referrer
	// being set in the request.  If data is set, referrer is treated as
	// additional metadata.  May not be used if url is not set.
	Referrer string `protobuf:"bytes,5,opt,name=referrer,proto3" json:"referrer,omitempty"`
	// name is an optional field indicating a reasonable file name for the pic.
	// If name and url are set, the name field will override the name
	// automatically derived from the URL.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// data is the file contents of the upload.  It must contain a valid pic
	// if present.  It may be left absent if there is a valid url instead.  This
	// field takes precedence over the url field if both are specified.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// md5_hash is the hash of the pic contents.  It is used to verify the pic
	// is valid when downloading from url, or when set in data.  If the Pixur
	// backend already has a pic with a matching md5_hash, it may not use
	// either data or url (at least one must still be specified, though).
	Md5Hash              []byte   `protobuf:"bytes,4,opt,name=md5_hash,json=md5Hash,proto3" json:"md5_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicRequest) Reset()         { *m = UpsertPicRequest{} }
func (m *UpsertPicRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPicRequest) ProtoMessage()    {}
func (*UpsertPicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{46}
}

func (m *UpsertPicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicRequest.Unmarshal(m, b)
}
func (m *UpsertPicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicRequest.Marshal(b, m, deterministic)
}
func (m *UpsertPicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicRequest.Merge(m, src)
}
func (m *UpsertPicRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPicRequest.Size(m)
}
func (m *UpsertPicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicRequest proto.InternalMessageInfo

func (m *UpsertPicRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *UpsertPicRequest) GetReferrer() string {
	if m != nil {
		return m.Referrer
	}
	return ""
}

func (m *UpsertPicRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpsertPicRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpsertPicRequest) GetMd5Hash() []byte {
	if m != nil {
		return m.Md5Hash
	}
	return nil
}

type UpsertPicResponse struct {
	// pic is the newly created or updated picture.
	Pic                  *Pic     `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicResponse) Reset()         { *m = UpsertPicResponse{} }
func (m *UpsertPicResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPicResponse) ProtoMessage()    {}
func (*UpsertPicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{47}
}

func (m *UpsertPicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicResponse.Unmarshal(m, b)
}
func (m *UpsertPicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicResponse.Marshal(b, m, deterministic)
}
func (m *UpsertPicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicResponse.Merge(m, src)
}
func (m *UpsertPicResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPicResponse.Size(m)
}
func (m *UpsertPicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicResponse proto.InternalMessageInfo

func (m *UpsertPicResponse) GetPic() *Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type UpsertPicVoteRequest struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// Optional.   Not necessary when creating for the first time.
	Version              int64        `protobuf:"fixed64,3,opt,name=version,proto3" json:"version,omitempty"`
	Vote                 PicVote_Vote `protobuf:"varint,2,opt,name=vote,proto3,enum=pixur.api.PicVote_Vote" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpsertPicVoteRequest) Reset()         { *m = UpsertPicVoteRequest{} }
func (m *UpsertPicVoteRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPicVoteRequest) ProtoMessage()    {}
func (*UpsertPicVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{48}
}

func (m *UpsertPicVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicVoteRequest.Unmarshal(m, b)
}
func (m *UpsertPicVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicVoteRequest.Marshal(b, m, deterministic)
}
func (m *UpsertPicVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicVoteRequest.Merge(m, src)
}
func (m *UpsertPicVoteRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPicVoteRequest.Size(m)
}
func (m *UpsertPicVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicVoteRequest proto.InternalMessageInfo

func (m *UpsertPicVoteRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *UpsertPicVoteRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UpsertPicVoteRequest) GetVote() PicVote_Vote {
	if m != nil {
		return m.Vote
	}
	return PicVote_UNKNOWN
}

type UpsertPicVoteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicVoteResponse) Reset()         { *m = UpsertPicVoteResponse{} }
func (m *UpsertPicVoteResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPicVoteResponse) ProtoMessage()    {}
func (*UpsertPicVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{49}
}

func (m *UpsertPicVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicVoteResponse.Unmarshal(m, b)
}
func (m *UpsertPicVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicVoteResponse.Marshal(b, m, deterministic)
}
func (m *UpsertPicVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicVoteResponse.Merge(m, src)
}
func (m *UpsertPicVoteResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPicVoteResponse.Size(m)
}
func (m *UpsertPicVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicVoteResponse proto.InternalMessageInfo

type WatchBackendConfigurationRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchBackendConfigurationRequest) Reset()         { *m = WatchBackendConfigurationRequest{} }
func (m *WatchBackendConfigurationRequest) String() string { return proto.CompactTextString(m) }
func (*WatchBackendConfigurationRequest) ProtoMessage()    {}
func (*WatchBackendConfigurationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{50}
}

func (m *WatchBackendConfigurationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchBackendConfigurationRequest.Unmarshal(m, b)
}
func (m *WatchBackendConfigurationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchBackendConfigurationRequest.Marshal(b, m, deterministic)
}
func (m *WatchBackendConfigurationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchBackendConfigurationRequest.Merge(m, src)
}
func (m *WatchBackendConfigurationRequest) XXX_Size() int {
	return xxx_messageInfo_WatchBackendConfigurationRequest.Size(m)
}
func (m *WatchBackendConfigurationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchBackendConfigurationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchBackendConfigurationRequest proto.InternalMessageInfo

type WatchBackendConfigurationResponse struct {
	Version              int64                 `protobuf:"fixed64,1,opt,name=version,proto3" json:"version,omitempty"`
	BackendConfiguration *BackendConfiguration `protobuf:"bytes,2,opt,name=backend_configuration,json=backendConfiguration,proto3" json:"backend_configuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *WatchBackendConfigurationResponse) Reset()         { *m = WatchBackendConfigurationResponse{} }
func (m *WatchBackendConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*WatchBackendConfigurationResponse) ProtoMessage()    {}
func (*WatchBackendConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{51}
}

func (m *WatchBackendConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchBackendConfigurationResponse.Unmarshal(m, b)
}
func (m *WatchBackendConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchBackendConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *WatchBackendConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchBackendConfigurationResponse.Merge(m, src)
}
func (m *WatchBackendConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_WatchBackendConfigurationResponse.Size(m)
}
func (m *WatchBackendConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchBackendConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchBackendConfigurationResponse proto.InternalMessageInfo

func (m *WatchBackendConfigurationResponse) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *WatchBackendConfigurationResponse) GetBackendConfiguration() *BackendConfiguration {
	if m != nil {
		return m.BackendConfiguration
	}
	return nil
}

type ServiceOpts struct {
	// a vaguely defined, but monotonically increasing "version".
	ApiVersion int64 `protobuf:"varint,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// The header key used to when using an auth token.
	AuthTokenHeaderKey string `protobuf:"bytes,2,opt,name=auth_token_header_key,json=authTokenHeaderKey,proto3" json:"auth_token_header_key,omitempty"`
	// The header key used to when using a pix token.
	PixTokenHeaderKey string `protobuf:"bytes,3,opt,name=pix_token_header_key,json=pixTokenHeaderKey,proto3" json:"pix_token_header_key,omitempty"`
	// Used in responses (e.g. ReadPicFile) to indicate suggested http headers.
	// See pixur.api.HttpHeader
	HttpHeaderKey        string   `protobuf:"bytes,4,opt,name=http_header_key,json=httpHeaderKey,proto3" json:"http_header_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceOpts) Reset()         { *m = ServiceOpts{} }
func (m *ServiceOpts) String() string { return proto.CompactTextString(m) }
func (*ServiceOpts) ProtoMessage()    {}
func (*ServiceOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{52}
}

func (m *ServiceOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceOpts.Unmarshal(m, b)
}
func (m *ServiceOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceOpts.Marshal(b, m, deterministic)
}
func (m *ServiceOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceOpts.Merge(m, src)
}
func (m *ServiceOpts) XXX_Size() int {
	return xxx_messageInfo_ServiceOpts.Size(m)
}
func (m *ServiceOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceOpts.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceOpts proto.InternalMessageInfo

func (m *ServiceOpts) GetApiVersion() int64 {
	if m != nil {
		return m.ApiVersion
	}
	return 0
}

func (m *ServiceOpts) GetAuthTokenHeaderKey() string {
	if m != nil {
		return m.AuthTokenHeaderKey
	}
	return ""
}

func (m *ServiceOpts) GetPixTokenHeaderKey() string {
	if m != nil {
		return m.PixTokenHeaderKey
	}
	return ""
}

func (m *ServiceOpts) GetHttpHeaderKey() string {
	if m != nil {
		return m.HttpHeaderKey
	}
	return ""
}

// HttpHeader is a message included as a header on some responses.  It is only a suggestion.
// See pixur.api.ServiceOpts.http_header_key
type HttpHeader struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpHeader) Reset()         { *m = HttpHeader{} }
func (m *HttpHeader) String() string { return proto.CompactTextString(m) }
func (*HttpHeader) ProtoMessage()    {}
func (*HttpHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{53}
}

func (m *HttpHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpHeader.Unmarshal(m, b)
}
func (m *HttpHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpHeader.Marshal(b, m, deterministic)
}
func (m *HttpHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpHeader.Merge(m, src)
}
func (m *HttpHeader) XXX_Size() int {
	return xxx_messageInfo_HttpHeader.Size(m)
}
func (m *HttpHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpHeader.DiscardUnknown(m)
}

var xxx_messageInfo_HttpHeader proto.InternalMessageInfo

func (m *HttpHeader) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HttpHeader) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

var E_PixurServiceOpts = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.ServiceOptions)(nil),
	ExtensionType: (*ServiceOpts)(nil),
	Field:         65537,
	Name:          "pixur.api.pixur_service_opts",
	Tag:           "bytes,65537,opt,name=pixur_service_opts",
	Filename:      "api.proto",
}

func init() {
	proto.RegisterType((*AddPicCommentRequest)(nil), "pixur.api.AddPicCommentRequest")
	proto.RegisterType((*AddPicCommentResponse)(nil), "pixur.api.AddPicCommentResponse")
	proto.RegisterType((*AddPicTagsRequest)(nil), "pixur.api.AddPicTagsRequest")
	proto.RegisterType((*AddPicTagsResponse)(nil), "pixur.api.AddPicTagsResponse")
	proto.RegisterType((*CreateUserRequest)(nil), "pixur.api.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "pixur.api.CreateUserResponse")
	proto.RegisterType((*DeleteTokenRequest)(nil), "pixur.api.DeleteTokenRequest")
	proto.RegisterType((*DeleteTokenResponse)(nil), "pixur.api.DeleteTokenResponse")
	proto.RegisterType((*FindIndexPicsRequest)(nil), "pixur.api.FindIndexPicsRequest")
	proto.RegisterType((*FindIndexPicsResponse)(nil), "pixur.api.FindIndexPicsResponse")
	proto.RegisterType((*FindPicCommentVotesRequest)(nil), "pixur.api.FindPicCommentVotesRequest")
	proto.RegisterType((*FindPicCommentVotesResponse)(nil), "pixur.api.FindPicCommentVotesResponse")
	proto.RegisterType((*FindSchedPicsRequest)(nil), "pixur.api.FindSchedPicsRequest")
	proto.RegisterType((*FindSchedPicsResponse)(nil), "pixur.api.FindSchedPicsResponse")
	proto.RegisterType((*FindSimilarPicsRequest)(nil), "pixur.api.FindSimilarPicsRequest")
	proto.RegisterType((*FindSimilarPicsResponse)(nil), "pixur.api.FindSimilarPicsResponse")
	proto.RegisterType((*FindUserEventsRequest)(nil), "pixur.api.FindUserEventsRequest")
	proto.RegisterType((*FindUserEventsResponse)(nil), "pixur.api.FindUserEventsResponse")
	proto.RegisterType((*GetRefreshTokenRequest)(nil), "pixur.api.GetRefreshTokenRequest")
	proto.RegisterType((*GetRefreshTokenResponse)(nil), "pixur.api.GetRefreshTokenResponse")
	proto.RegisterType((*IncrementViewCountRequest)(nil), "pixur.api.IncrementViewCountRequest")
	proto.RegisterType((*IncrementViewCountResponse)(nil), "pixur.api.IncrementViewCountResponse")
	proto.RegisterType((*LookupPicCommentVoteRequest)(nil), "pixur.api.LookupPicCommentVoteRequest")
	proto.RegisterType((*LookupPicCommentVoteResponse)(nil), "pixur.api.LookupPicCommentVoteResponse")
	proto.RegisterType((*LookupPicDetailsRequest)(nil), "pixur.api.LookupPicDetailsRequest")
	proto.RegisterType((*LookupPicDetailsResponse)(nil), "pixur.api.LookupPicDetailsResponse")
	proto.RegisterType((*LookupPicExtensionRequest)(nil), "pixur.api.LookupPicExtensionRequest")
	proto.RegisterType((*LookupPicExtensionResponse)(nil), "pixur.api.LookupPicExtensionResponse")
	proto.RegisterMapType((map[string]*any.Any)(nil), "pixur.api.LookupPicExtensionResponse.ExtEntry")
	proto.RegisterType((*LookupPicFileRequest)(nil), "pixur.api.LookupPicFileRequest")
	proto.RegisterType((*LookupPicFileResponse)(nil), "pixur.api.LookupPicFileResponse")
	proto.RegisterType((*LookupPicVoteRequest)(nil), "pixur.api.LookupPicVoteRequest")
	proto.RegisterType((*LookupPicVoteResponse)(nil), "pixur.api.LookupPicVoteResponse")
	proto.RegisterType((*LookupPublicUserInfoRequest)(nil), "pixur.api.LookupPublicUserInfoRequest")
	proto.RegisterType((*LookupPublicUserInfoResponse)(nil), "pixur.api.LookupPublicUserInfoResponse")
	proto.RegisterType((*LookupUserRequest)(nil), "pixur.api.LookupUserRequest")
	proto.RegisterType((*LookupUserResponse)(nil), "pixur.api.LookupUserResponse")
	proto.RegisterType((*PurgePicRequest)(nil), "pixur.api.PurgePicRequest")
	proto.RegisterType((*PurgePicResponse)(nil), "pixur.api.PurgePicResponse")
	proto.RegisterType((*ReadPicFileRequest)(nil), "pixur.api.ReadPicFileRequest")
	proto.RegisterType((*ReadPicFileResponse)(nil), "pixur.api.ReadPicFileResponse")
	proto.RegisterType((*SoftDeletePicRequest)(nil), "pixur.api.SoftDeletePicRequest")
	proto.RegisterType((*SoftDeletePicResponse)(nil), "pixur.api.SoftDeletePicResponse")
	proto.RegisterType((*UpdateUserRequest)(nil), "pixur.api.UpdateUserRequest")
	proto.RegisterType((*UpdateUserRequest_ChangeIdent)(nil), "pixur.api.UpdateUserRequest.ChangeIdent")
	proto.RegisterType((*UpdateUserRequest_ChangeSecret)(nil), "pixur.api.UpdateUserRequest.ChangeSecret")
	proto.RegisterType((*UpdateUserRequest_ChangeCapability)(nil), "pixur.api.UpdateUserRequest.ChangeCapability")
	proto.RegisterType((*UpdateUserResponse)(nil), "pixur.api.UpdateUserResponse")
	proto.RegisterType((*UpsertPicCommentVoteRequest)(nil), "pixur.api.UpsertPicCommentVoteRequest")
	proto.RegisterType((*UpsertPicCommentVoteResponse)(nil), "pixur.api.UpsertPicCommentVoteResponse")
	proto.RegisterType((*UpsertPicRequest)(nil), "pixur.api.UpsertPicRequest")
	proto.RegisterType((*UpsertPicResponse)(nil), "pixur.api.UpsertPicResponse")
	proto.RegisterType((*UpsertPicVoteRequest)(nil), "pixur.api.UpsertPicVoteRequest")
	proto.RegisterType((*UpsertPicVoteResponse)(nil), "pixur.api.UpsertPicVoteResponse")
	proto.RegisterType((*WatchBackendConfigurationRequest)(nil), "pixur.api.WatchBackendConfigurationRequest")
	proto.RegisterType((*WatchBackendConfigurationResponse)(nil), "pixur.api.WatchBackendConfigurationResponse")
	proto.RegisterType((*ServiceOpts)(nil), "pixur.api.ServiceOpts")
	proto.RegisterType((*HttpHeader)(nil), "pixur.api.HttpHeader")
	proto.RegisterExtension(E_PixurServiceOpts)
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 2305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0x4f, 0x6f, 0x1b, 0xc7,
	0x15, 0xc7, 0x8a, 0xb4, 0x44, 0x3e, 0x4a, 0x26, 0x35, 0x22, 0x2d, 0x7a, 0x25, 0xcb, 0xf2, 0xba,
	0x71, 0x55, 0xdb, 0xa2, 0x1c, 0xa5, 0x36, 0xd2, 0xa4, 0xa8, 0xa3, 0xc8, 0x56, 0xcd, 0xd4, 0x69,
	0x85, 0xb5, 0xec, 0x14, 0x01, 0x0a, 0x76, 0xc4, 0x1d, 0x92, 0x03, 0x93, 0xbb, 0xdb, 0xdd, 0xa5,
	0x22, 0x1d, 0x02, 0xa4, 0x2d, 0x8a, 0x02, 0x3d, 0x05, 0x28, 0x7a, 0xe9, 0xad, 0xa7, 0xf6, 0xd0,
	0x7e, 0x81, 0xf6, 0x4b, 0xf4, 0xd8, 0xef, 0xd1, 0x2f, 0x50, 0xcc, 0x9f, 0xdd, 0x9d, 0xd9, 0x5d,
	0x8a, 0x0a, 0xd0, 0x9c, 0xc4, 0x9d, 0xf7, 0xff, 0xcd, 0xcc, 0x9b, 0xdf, 0x7b, 0x82, 0x2a, 0xf6,
	0x69, 0xc7, 0x0f, 0xbc, 0xc8, 0x43, 0x55, 0x9f, 0x9e, 0x4f, 0x83, 0x0e, 0xf6, 0xa9, 0x79, 0x73,
	0xe8, 0x79, 0xc3, 0x31, 0xd9, 0xe3, 0x84, 0xd3, 0xe9, 0x60, 0x0f, 0xbb, 0x17, 0x82, 0xcb, 0xdc,
	0xce, 0x92, 0x1c, 0x12, 0xf6, 0x03, 0xea, 0x47, 0x5e, 0x20, 0x39, 0x6e, 0x67, 0x39, 0x22, 0x3a,
	0x21, 0x61, 0x84, 0x27, 0xbe, 0x64, 0xd8, 0x12, 0x86, 0xbc, 0x60, 0xb8, 0xc7, 0x7f, 0xed, 0x61,
	0x9f, 0xee, 0x39, 0x38, 0xc2, 0x82, 0x6e, 0x4d, 0xa0, 0x79, 0xe0, 0x38, 0xc7, 0xb4, 0x7f, 0xe8,
	0x4d, 0x26, 0xc4, 0x8d, 0x6c, 0xf2, 0xab, 0x29, 0x09, 0x23, 0xd4, 0x82, 0x45, 0x9f, 0xf6, 0x7b,
	0xd4, 0x69, 0x1b, 0xdb, 0xc6, 0x4e, 0xd5, 0xbe, 0xe6, 0xd3, 0x7e, 0xd7, 0x41, 0xf7, 0x61, 0xb5,
	0x2f, 0x18, 0x7b, 0x3e, 0x0e, 0xd8, 0x1f, 0xea, 0xb4, 0x17, 0x38, 0x47, 0x5d, 0x12, 0x8e, 0xf9,
	0x7a, 0xd7, 0x41, 0x08, 0xca, 0x11, 0x39, 0x8f, 0xda, 0x25, 0x4e, 0xe6, 0xbf, 0xad, 0x17, 0xd0,
	0xca, 0x98, 0x0b, 0x7d, 0xcf, 0x0d, 0x09, 0xda, 0x83, 0x25, 0x29, 0xcf, 0x0d, 0xd6, 0xf6, 0x5b,
	0x9d, 0x24, 0x45, 0x1d, 0x85, 0x3f, 0xe6, 0xb2, 0x7e, 0x08, 0xab, 0x42, 0xd3, 0x09, 0x1e, 0x86,
	0x73, 0xbc, 0x6e, 0x40, 0x29, 0xc2, 0xc3, 0xf6, 0xc2, 0x76, 0x69, 0xa7, 0x6a, 0xb3, 0x9f, 0x56,
	0x13, 0x90, 0x2a, 0x2d, 0x9c, 0xb0, 0x0e, 0x60, 0xf5, 0x30, 0x20, 0x38, 0x22, 0xaf, 0x43, 0x12,
	0xc4, 0x3a, 0x9b, 0x70, 0x8d, 0x3a, 0xb1, 0x5f, 0x55, 0x5b, 0x7c, 0xa0, 0x1b, 0xb0, 0x18, 0x92,
	0x7e, 0x40, 0x22, 0x19, 0xbd, 0xfc, 0x62, 0x8a, 0x55, 0x15, 0x52, 0x71, 0x13, 0xd0, 0x33, 0x32,
	0x26, 0x11, 0x39, 0xf1, 0xde, 0x12, 0x57, 0x6a, 0xb6, 0x5a, 0xb0, 0xa6, 0xad, 0x4a, 0xe6, 0x37,
	0xd0, 0x3c, 0xa2, 0xae, 0xd3, 0x75, 0x1d, 0x72, 0x7e, 0x4c, 0xfb, 0x49, 0x70, 0xdb, 0xb0, 0x1c,
	0x46, 0x38, 0x88, 0x7a, 0x5a, 0x88, 0xc0, 0xd7, 0x8e, 0x79, 0x9c, 0x9b, 0x50, 0xc5, 0x61, 0x9f,
	0xb8, 0x0e, 0x75, 0x87, 0xdc, 0xaf, 0x8a, 0x9d, 0x2e, 0x58, 0xbf, 0x33, 0xa0, 0x95, 0x51, 0x2c,
	0x93, 0xff, 0x10, 0x4a, 0x3e, 0xed, 0xb7, 0xcb, 0xdb, 0xa5, 0x9d, 0xda, 0xbe, 0xa9, 0x27, 0xfe,
	0xc0, 0x75, 0x4e, 0x46, 0xd3, 0xc9, 0xa9, 0x8b, 0xe9, 0xd8, 0x66, 0x6c, 0x68, 0x0b, 0x6a, 0x2e,
	0x39, 0x4f, 0xdc, 0x10, 0xf1, 0x57, 0xd9, 0x92, 0xf0, 0x62, 0x0b, 0x6a, 0x7e, 0x40, 0xce, 0x62,
	0xba, 0xd8, 0xfe, 0x2a, 0x5b, 0xe2, 0x74, 0xeb, 0x2d, 0x98, 0xcc, 0x8d, 0x74, 0x53, 0xdf, 0x78,
	0x11, 0x99, 0xb7, 0x85, 0xb7, 0x00, 0xe2, 0x83, 0x97, 0xda, 0x94, 0x2b, 0x5d, 0x07, 0xad, 0xc3,
	0xd2, 0x34, 0x24, 0x41, 0x6a, 0x6f, 0x91, 0x7d, 0x76, 0x1d, 0xeb, 0x25, 0x6c, 0x14, 0x1a, 0x93,
	0x91, 0xef, 0x42, 0xf9, 0xcc, 0x8b, 0x48, 0xdb, 0xe0, 0xa1, 0xdf, 0x2c, 0x3c, 0x73, 0x4c, 0xc2,
	0xe6, 0x6c, 0xd6, 0x0d, 0xb1, 0x35, 0xaf, 0xfa, 0x23, 0xe2, 0x28, 0x5b, 0x63, 0x3d, 0x17, 0x99,
	0x55, 0xd6, 0xf5, 0xcc, 0x2e, 0x5c, 0x29, 0xb3, 0xd6, 0x1e, 0xdc, 0xe0, 0x6a, 0xe8, 0x84, 0x8e,
	0x71, 0xa0, 0xee, 0x7d, 0x71, 0x56, 0xac, 0x47, 0xb0, 0x9e, 0x13, 0x90, 0x96, 0x55, 0x89, 0x52,
	0x2a, 0xf1, 0xa5, 0xf0, 0x94, 0x9d, 0xce, 0xe7, 0x67, 0xc4, 0x8d, 0x12, 0x0b, 0x4a, 0x06, 0x0d,
	0x35, 0x83, 0x68, 0x17, 0xd6, 0xc4, 0xb1, 0xe3, 0x64, 0x72, 0xa6, 0x6d, 0x41, 0x83, 0x93, 0x12,
	0x6d, 0xd9, 0x33, 0x58, 0xca, 0x9e, 0xc1, 0xbf, 0x1a, 0x22, 0x44, 0xd5, 0xbe, 0x74, 0xf8, 0x3d,
	0x80, 0xd4, 0x82, 0xdc, 0x90, 0xa6, 0x92, 0xb1, 0x44, 0xc4, 0xae, 0x4e, 0xe3, 0x9f, 0xe8, 0x01,
	0x20, 0x7e, 0x16, 0x8b, 0x7c, 0xab, 0x33, 0x8a, 0xea, 0xda, 0x03, 0x40, 0xfc, 0x60, 0xea, 0xcc,
	0xe2, 0xbc, 0xd4, 0x19, 0x45, 0x61, 0xb6, 0xce, 0xe0, 0xc6, 0x8f, 0x49, 0x64, 0x93, 0x41, 0x40,
	0xc2, 0x91, 0x7a, 0x6d, 0xbf, 0x59, 0x41, 0x40, 0x1d, 0x58, 0x63, 0xaa, 0xa9, 0x37, 0x0d, 0x7b,
	0x78, 0x1a, 0x8d, 0x7a, 0x11, 0xd3, 0x25, 0xad, 0xae, 0xc6, 0xa4, 0x83, 0x69, 0x24, 0x8c, 0x58,
	0xff, 0x35, 0x60, 0x3d, 0x67, 0x58, 0xa6, 0xe8, 0x16, 0x80, 0xa2, 0x42, 0x5e, 0x02, 0x1c, 0x8b,
	0xa2, 0x0d, 0x60, 0xcf, 0x8a, 0xa4, 0x5e, 0xe3, 0xd4, 0x8a, 0x4f, 0xcf, 0x05, 0xf1, 0x7d, 0x58,
	0xe6, 0xb2, 0x3e, 0xbe, 0x18, 0x7b, 0xd8, 0x69, 0x97, 0xf3, 0x55, 0xf6, 0x8b, 0xe8, 0x58, 0x10,
	0xed, 0x1a, 0x63, 0x95, 0x1f, 0xe8, 0x09, 0xd4, 0x98, 0xda, 0x58, 0x70, 0xf1, 0x32, 0x41, 0xf0,
	0xe9, 0xb9, 0xfc, 0xfd, 0x49, 0xb9, 0x62, 0x34, 0x16, 0x3e, 0x29, 0x57, 0x4a, 0x8d, 0xb2, 0xbd,
	0x12, 0x88, 0x78, 0x84, 0x73, 0x76, 0x3d, 0xfe, 0x94, 0x4a, 0xad, 0x7d, 0xb8, 0xd9, 0x75, 0xfb,
	0x01, 0xe1, 0xf7, 0x8d, 0x92, 0x2f, 0x0e, 0xbd, 0xe9, 0xbc, 0xb7, 0xc8, 0xda, 0x04, 0xb3, 0x48,
	0x46, 0x56, 0xd1, 0x31, 0x6c, 0xbc, 0xf4, 0xbc, 0xb7, 0x53, 0x3f, 0x73, 0x91, 0xbf, 0x9d, 0x32,
	0xf3, 0x29, 0x6c, 0x16, 0x5b, 0xcb, 0xd5, 0x19, 0xe3, 0x2a, 0x75, 0xe6, 0x11, 0xac, 0x27, 0xea,
	0x9e, 0x91, 0x08, 0xd3, 0xf1, 0xbc, 0x4a, 0xf0, 0x0f, 0x03, 0xda, 0x79, 0x11, 0x69, 0x7d, 0x5b,
	0x54, 0x21, 0x61, 0xfc, 0xba, 0x6e, 0x5c, 0xd4, 0xf4, 0xfb, 0xb0, 0xc4, 0xb4, 0xc6, 0xaf, 0x64,
	0x6d, 0x7f, 0x55, 0xe7, 0x3a, 0xc1, 0x43, 0x9b, 0xd9, 0x3d, 0xc1, 0x43, 0x74, 0x08, 0x0d, 0xc6,
	0x1b, 0xe7, 0x29, 0x0a, 0x08, 0xe1, 0xd9, 0x98, 0x15, 0xd7, 0x49, 0x40, 0x88, 0x7d, 0xdd, 0xd7,
	0xbe, 0xd9, 0x86, 0x27, 0xee, 0x3e, 0x3f, 0x8f, 0x88, 0x1b, 0x52, 0xcf, 0x9d, 0x13, 0xe3, 0xdf,
	0x0d, 0x30, 0x8b, 0x84, 0x64, 0x94, 0x1f, 0x41, 0x89, 0xc1, 0x0d, 0x51, 0x39, 0x3a, 0x8a, 0x2b,
	0xb3, 0x65, 0x3a, 0xcf, 0xcf, 0xa3, 0xe7, 0x6e, 0x14, 0x5c, 0xd8, 0x4c, 0xd4, 0x7c, 0x09, 0x95,
	0x78, 0x81, 0x61, 0x86, 0xb7, 0xe4, 0x42, 0x3a, 0xc0, 0x7e, 0xa2, 0xfb, 0x70, 0xed, 0x0c, 0x8f,
	0xa7, 0x84, 0x1f, 0x0b, 0x56, 0x9b, 0x04, 0xf6, 0xea, 0xc4, 0xd8, 0xab, 0x73, 0xe0, 0x5e, 0xd8,
	0x82, 0xe5, 0x83, 0x85, 0xf7, 0x0d, 0x8b, 0x42, 0x33, 0xb1, 0x7c, 0x44, 0xc7, 0xc9, 0xd1, 0x63,
	0xef, 0x23, 0xed, 0xf7, 0x06, 0x74, 0x4c, 0xd2, 0x10, 0xab, 0xbe, 0x60, 0xea, 0x3a, 0xe8, 0x5d,
	0x58, 0x1c, 0x78, 0xc1, 0x04, 0x8b, 0x4a, 0x72, 0x3d, 0x9b, 0x55, 0xc6, 0xd5, 0x39, 0xe2, 0x0c,
	0xb6, 0x64, 0xb4, 0x8e, 0xa0, 0x95, 0x31, 0x95, 0x9c, 0xbb, 0x4a, 0x6c, 0x4b, 0x6e, 0x3f, 0xca,
	0x6b, 0xb3, 0x97, 0xa4, 0x71, 0xeb, 0x48, 0x71, 0xf9, 0x0a, 0xb7, 0x45, 0xb9, 0x0e, 0x0b, 0xda,
	0x75, 0x78, 0xaa, 0xf8, 0xa3, 0xdd, 0x83, 0x7b, 0xda, 0x3d, 0xc8, 0xf8, 0xa2, 0x5c, 0x80, 0x27,
	0xc9, 0xed, 0x9d, 0x9e, 0x8e, 0x69, 0x9f, 0x15, 0xe6, 0xae, 0x3b, 0xf0, 0xe6, 0x3d, 0x56, 0xd6,
	0x9b, 0xe4, 0x1e, 0x66, 0xe4, 0xa4, 0xfd, 0x27, 0x50, 0x15, 0x82, 0xee, 0xc0, 0x2b, 0xba, 0x8c,
	0xba, 0x54, 0x65, 0x2a, 0x7f, 0x59, 0x0f, 0x61, 0x55, 0xe8, 0x55, 0x91, 0xe1, 0x4c, 0x2f, 0x7e,
	0x00, 0x48, 0xe5, 0x96, 0xb6, 0xef, 0x42, 0x99, 0xd1, 0xa5, 0xd9, 0x7a, 0xe6, 0x69, 0xb3, 0x39,
	0xd1, 0xda, 0x81, 0xfa, 0xf1, 0x34, 0x18, 0x12, 0x76, 0x33, 0x2f, 0xbf, 0x0d, 0x08, 0x1a, 0x29,
	0xa7, 0x2c, 0x7a, 0x7f, 0x32, 0x00, 0xd9, 0x04, 0x3b, 0xdf, 0xfa, 0x89, 0x63, 0xcf, 0x9d, 0x37,
	0x18, 0x84, 0x44, 0xc0, 0xfb, 0x92, 0x2d, 0xbf, 0xd8, 0xe3, 0x38, 0xa6, 0x13, 0x1a, 0xf1, 0xf7,
	0xa5, 0x64, 0x8b, 0x0f, 0xeb, 0x43, 0x58, 0xd3, 0xdc, 0x92, 0x19, 0x41, 0x50, 0x66, 0xad, 0x08,
	0x77, 0x68, 0xd9, 0xe6, 0xbf, 0xd9, 0xbd, 0x23, 0xde, 0x40, 0xa2, 0x57, 0xf6, 0xd3, 0xfa, 0x97,
	0x01, 0xcd, 0x57, 0xde, 0x20, 0x12, 0x58, 0x79, 0x6e, 0x62, 0x50, 0x1b, 0x96, 0x1c, 0x51, 0x00,
	0xe5, 0xa9, 0x8c, 0x3f, 0x59, 0x9c, 0x01, 0xc1, 0xa1, 0x27, 0x9e, 0x5f, 0x3d, 0x4e, 0xae, 0x9d,
	0x97, 0x06, 0xc6, 0x60, 0x4b, 0x46, 0xf4, 0x14, 0x56, 0x1c, 0x49, 0xe9, 0xb1, 0xde, 0x4a, 0xbe,
	0x9b, 0x66, 0xee, 0xf2, 0x9f, 0xc4, 0x8d, 0x97, 0xbd, 0x1c, 0x0b, 0xb0, 0x25, 0x6b, 0x1d, 0x5a,
	0x19, 0xe7, 0xe5, 0x5e, 0xfd, 0xa6, 0x0c, 0xab, 0xaf, 0x7d, 0x27, 0xd3, 0x6d, 0xcc, 0x84, 0x61,
	0x6d, 0x58, 0x3a, 0x23, 0x01, 0x2b, 0x5e, 0x3c, 0xaa, 0x86, 0x1d, 0x7f, 0xa2, 0x1f, 0xc5, 0x78,
	0x44, 0x14, 0xe1, 0x1d, 0xf5, 0x60, 0x65, 0xf5, 0x77, 0x0e, 0x47, 0xd8, 0x1d, 0x92, 0x2e, 0xe3,
	0x8f, 0x91, 0xcb, 0x41, 0x82, 0x5c, 0x44, 0x6c, 0xdf, 0xbb, 0x82, 0x82, 0x57, 0x5c, 0x20, 0x01,
	0x39, 0x9f, 0x02, 0xf4, 0xb1, 0x8f, 0x4f, 0xe9, 0x98, 0x46, 0x17, 0x1c, 0x7a, 0xd4, 0xf6, 0x77,
	0xaf, 0xa0, 0xe6, 0x30, 0x11, 0xb2, 0x15, 0x05, 0xe6, 0x5d, 0xa8, 0x29, 0x7e, 0x16, 0x03, 0x2e,
	0xf3, 0x1e, 0x2c, 0xab, 0xbe, 0x28, 0x00, 0xcc, 0x50, 0x01, 0x98, 0xf9, 0x67, 0x03, 0x1a, 0x59,
	0x6b, 0xe8, 0x23, 0xb8, 0x1e, 0x92, 0xa8, 0xa7, 0x38, 0xcd, 0x9e, 0x0d, 0xfd, 0x44, 0xa4, 0xec,
	0xec, 0xa7, 0xbd, 0x12, 0x92, 0x48, 0xd1, 0xf0, 0x0c, 0x1a, 0xfd, 0x31, 0xc1, 0x81, 0xaa, 0x63,
	0x61, 0x9e, 0x8e, 0x3a, 0x17, 0x49, 0x17, 0x59, 0xa5, 0x50, 0x73, 0xf3, 0x4d, 0x2a, 0xc5, 0x5f,
	0x0c, 0xd8, 0x78, 0xed, 0x87, 0x84, 0x37, 0x7f, 0xff, 0x37, 0x84, 0xa3, 0x1c, 0xb3, 0x92, 0x7e,
	0xcc, 0xf6, 0x65, 0xe9, 0x2e, 0xf3, 0xab, 0xb3, 0x35, 0x13, 0xc2, 0x74, 0x94, 0x32, 0xbe, 0x05,
	0x9b, 0xc5, 0x2e, 0xca, 0x3b, 0xf0, 0x5b, 0x03, 0x1a, 0x09, 0x43, 0xec, 0x78, 0x03, 0x4a, 0xd3,
	0x60, 0x1c, 0xbf, 0xbc, 0xd3, 0x60, 0x8c, 0x4c, 0xa8, 0x04, 0x64, 0x40, 0x82, 0x80, 0x04, 0x31,
	0xae, 0x8d, 0xbf, 0x59, 0x0d, 0x71, 0xf1, 0x84, 0xc8, 0x48, 0xf8, 0xef, 0xa4, 0xae, 0x94, 0x94,
	0xba, 0x72, 0x13, 0x2a, 0x13, 0xe7, 0x71, 0x6f, 0x84, 0xc3, 0x11, 0x0f, 0x61, 0xd9, 0x5e, 0x9a,
	0x38, 0x8f, 0x5f, 0xe0, 0x70, 0x64, 0x3d, 0x66, 0x17, 0x31, 0x71, 0xe2, 0xaa, 0x98, 0xc9, 0x8a,
	0xa0, 0x99, 0x88, 0x5d, 0x21, 0xf1, 0xb3, 0x33, 0xfb, 0x40, 0x66, 0x56, 0x14, 0xdf, 0xf5, 0xfc,
	0xa3, 0xa8, 0xa6, 0x74, 0x1d, 0x5a, 0x19, 0xab, 0x32, 0x97, 0x16, 0x6c, 0x7f, 0x86, 0xa3, 0xfe,
	0xe8, 0x63, 0xdc, 0x7f, 0x4b, 0x5c, 0xe7, 0xd0, 0x73, 0x07, 0x74, 0x38, 0x0d, 0x70, 0x94, 0x02,
	0x2b, 0xeb, 0x8f, 0x06, 0xdc, 0xb9, 0x84, 0x49, 0x86, 0xae, 0x78, 0x6a, 0xe8, 0x9e, 0x9e, 0x40,
	0xeb, 0x54, 0x48, 0xf6, 0xfa, 0xaa, 0xa8, 0x84, 0x44, 0xb7, 0x15, 0xd7, 0x0b, 0x2d, 0x34, 0x4f,
	0x0b, 0x56, 0xad, 0x7f, 0x1a, 0x50, 0x7b, 0x45, 0x82, 0x33, 0xda, 0x27, 0x3f, 0xf3, 0xa3, 0x10,
	0xdd, 0x86, 0x1a, 0xf6, 0x69, 0x4f, 0xf5, 0xa1, 0x64, 0x03, 0xf6, 0xe9, 0x1b, 0xe9, 0xc6, 0xbb,
	0xd0, 0x4a, 0xfb, 0xa0, 0xde, 0x88, 0x60, 0x87, 0x04, 0x3d, 0x86, 0xd6, 0xc4, 0x21, 0x40, 0x49,
	0x4b, 0xf4, 0x82, 0x93, 0x7e, 0x42, 0x2e, 0xd0, 0x1e, 0x34, 0x93, 0xde, 0x48, 0x95, 0x88, 0xfb,
	0x30, 0xd9, 0x26, 0xa5, 0x02, 0xf7, 0xa0, 0x3e, 0x8a, 0x22, 0x5f, 0xe5, 0x2d, 0x73, 0xde, 0x15,
	0xb6, 0x9c, 0xf0, 0x59, 0xdf, 0x07, 0x78, 0x91, 0x2c, 0x14, 0xa0, 0xc6, 0xa6, 0x8a, 0x1a, 0xab,
	0x12, 0x1f, 0xee, 0xff, 0x7e, 0x0d, 0x96, 0x8f, 0x59, 0xae, 0x64, 0xdc, 0xc8, 0x86, 0x15, 0x6d,
	0x30, 0x86, 0xd4, 0x5c, 0x16, 0x4d, 0xe8, 0xcc, 0xed, 0xd9, 0x0c, 0x72, 0x1f, 0xbb, 0x00, 0xe9,
	0x90, 0x0b, 0x6d, 0xe6, 0xf8, 0x95, 0xc9, 0x99, 0x79, 0x6b, 0x06, 0x35, 0x55, 0x95, 0x8e, 0xb5,
	0x34, 0x55, 0xb9, 0x81, 0x99, 0xa6, 0x2a, 0x3f, 0x0b, 0x43, 0x2f, 0xa1, 0xa6, 0x4c, 0xbd, 0xd0,
	0xad, 0xec, 0x1b, 0xac, 0xcd, 0xc8, 0xcc, 0xad, 0x59, 0x64, 0xa9, 0xed, 0x33, 0x58, 0xd1, 0x66,
	0x5a, 0x5a, 0xde, 0x8a, 0xc6, 0x68, 0x5a, 0xde, 0x0a, 0xc7, 0x61, 0x56, 0xe9, 0xeb, 0x05, 0x03,
	0x51, 0x58, 0x2b, 0x18, 0x1c, 0xa1, 0x77, 0x32, 0xd2, 0xc5, 0x53, 0x2c, 0xf3, 0xde, 0x3c, 0x36,
	0xd5, 0x94, 0x8c, 0x21, 0x99, 0x1e, 0xe5, 0x62, 0xc8, 0xce, 0x9b, 0x72, 0x31, 0xe4, 0x06, 0x4f,
	0x42, 0xf1, 0x2f, 0xa0, 0x9e, 0x19, 0x0f, 0xa1, 0x3b, 0x59, 0xc9, 0xdc, 0xac, 0xc9, 0xb4, 0x2e,
	0x63, 0x51, 0xd5, 0x7f, 0x0e, 0xd7, 0xf5, 0x59, 0x0e, 0xca, 0xfa, 0x95, 0x1b, 0x33, 0x99, 0x77,
	0x2e, 0xe1, 0x50, 0x75, 0xff, 0x1c, 0xea, 0x99, 0x29, 0x88, 0xe6, 0x7a, 0xf1, 0x68, 0x46, 0x73,
	0x7d, 0xd6, 0x10, 0x05, 0x03, 0xca, 0x8f, 0x0d, 0xd0, 0x77, 0x14, 0xc9, 0x99, 0x93, 0x08, 0xf3,
	0x9d, 0x39, 0x5c, 0xd2, 0xc4, 0x58, 0x69, 0xa3, 0x94, 0x6d, 0x47, 0xf7, 0x8a, 0x9a, 0xd2, 0xfc,
	0xd3, 0x6d, 0x7e, 0x77, 0x2e, 0x9f, 0x9a, 0xaa, 0x5f, 0x42, 0x23, 0xdb, 0xf9, 0x23, 0xab, 0x48,
	0x83, 0x3e, 0x49, 0x30, 0xef, 0x5e, 0xca, 0xa3, 0x5a, 0x18, 0xc4, 0xfd, 0x8c, 0xda, 0x43, 0x6b,
	0x29, 0x9b, 0xd9, 0xcb, 0x6b, 0x29, 0x9b, 0xdd, 0x88, 0x27, 0x17, 0x41, 0x6b, 0x63, 0xb5, 0x8b,
	0x50, 0xd4, 0x4b, 0x6b, 0x17, 0xa1, 0xb0, 0x03, 0xce, 0x2b, 0xe6, 0x3b, 0x51, 0xa8, 0x58, 0xdd,
	0x82, 0xed, 0xd9, 0x0c, 0xaa, 0xe2, 0x74, 0xa7, 0xb5, 0xce, 0xb1, 0x68, 0xa7, 0x8b, 0x1a, 0xd9,
	0xa2, 0x9d, 0x2e, 0x6c, 0x5c, 0x85, 0xb5, 0x9f, 0x02, 0xa4, 0x7d, 0xa5, 0x56, 0x85, 0x73, 0xcd,
	0xa9, 0x56, 0x85, 0xf3, 0xcd, 0xa8, 0xd0, 0x77, 0x08, 0x95, 0xb8, 0x85, 0x44, 0xda, 0x70, 0x5a,
	0xef, 0x40, 0xcd, 0x8d, 0x42, 0x9a, 0x3c, 0xec, 0xaf, 0xa1, 0xa6, 0xf4, 0x76, 0x5a, 0x3d, 0xcf,
	0xb7, 0xa2, 0x5a, 0x3d, 0x2f, 0x68, 0x09, 0xb9, 0x5f, 0x3b, 0xc6, 0x23, 0x83, 0x3d, 0x88, 0x5a,
	0xdf, 0xa4, 0x6d, 0x59, 0x51, 0x3b, 0xa8, 0x6d, 0x59, 0x61, 0xcb, 0xc5, 0x5e, 0xb1, 0x14, 0x6d,
	0x6b, 0xf9, 0xcb, 0x35, 0x28, 0x5a, 0xfe, 0x0a, 0x20, 0xfa, 0x11, 0x54, 0x13, 0x18, 0x86, 0x36,
	0x34, 0x5e, 0x1d, 0xce, 0x9a, 0x9b, 0xc5, 0x44, 0xa9, 0x67, 0xa8, 0x80, 0xc8, 0x59, 0xa5, 0xe2,
	0x12, 0x94, 0xaf, 0x1d, 0xa0, 0xcb, 0xa0, 0x36, 0xcb, 0xa7, 0x86, 0x1b, 0xb5, 0x7c, 0x16, 0xe1,
	0x58, 0x2d, 0x9f, 0x85, 0x90, 0x13, 0x7d, 0x09, 0x37, 0x67, 0xa2, 0x49, 0xf4, 0x40, 0x11, 0x9f,
	0x07, 0x4c, 0xcd, 0x87, 0x57, 0x63, 0x56, 0x0e, 0xc9, 0x23, 0xc3, 0x3c, 0xfc, 0xc3, 0x57, 0xdb,
	0x4f, 0x2b, 0x5f, 0xff, 0xed, 0xdf, 0x55, 0xd4, 0xe0, 0xe2, 0xbb, 0x0c, 0xf8, 0xed, 0x72, 0x8c,
	0x67, 0xd6, 0xc5, 0x8a, 0x4f, 0xcf, 0xc5, 0x82, 0xd5, 0x12, 0x0b, 0x0c, 0xbd, 0xed, 0x0a, 0x50,
	0xb7, 0x7b, 0x4a, 0xdd, 0x0f, 0x86, 0x80, 0x38, 0xa1, 0x17, 0x0a, 0x24, 0xd6, 0xf3, 0x38, 0x04,
	0xcd, 0xf5, 0xf7, 0x29, 0x40, 0xa5, 0x9e, 0x1b, 0xb6, 0x7f, 0xfd, 0x95, 0x68, 0x96, 0x6f, 0xa8,
	0x87, 0x2e, 0xc5, 0xb0, 0xb6, 0x70, 0x48, 0x59, 0xf9, 0x78, 0x17, 0x56, 0xbc, 0x60, 0x98, 0xb2,
	0x1f, 0x1b, 0x9f, 0xaf, 0x17, 0xfc, 0x73, 0xf6, 0x43, 0xec, 0xd3, 0xff, 0x18, 0xc6, 0xe9, 0x22,
	0xb7, 0xfc, 0xde, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x21, 0x9f, 0x64, 0x4d, 0x35, 0x1e, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PixurServiceClient is the client API for PixurService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PixurServiceClient interface {
	AddPicComment(ctx context.Context, in *AddPicCommentRequest, opts ...grpc.CallOption) (*AddPicCommentResponse, error)
	AddPicTags(ctx context.Context, in *AddPicTagsRequest, opts ...grpc.CallOption) (*AddPicTagsResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	DeleteToken(ctx context.Context, in *DeleteTokenRequest, opts ...grpc.CallOption) (*DeleteTokenResponse, error)
	FindIndexPics(ctx context.Context, in *FindIndexPicsRequest, opts ...grpc.CallOption) (*FindIndexPicsResponse, error)
	FindPicCommentVotes(ctx context.Context, in *FindPicCommentVotesRequest, opts ...grpc.CallOption) (*FindPicCommentVotesResponse, error)
	FindSchedPics(ctx context.Context, in *FindSchedPicsRequest, opts ...grpc.CallOption) (*FindSchedPicsResponse, error)
	FindSimilarPics(ctx context.Context, in *FindSimilarPicsRequest, opts ...grpc.CallOption) (*FindSimilarPicsResponse, error)
	FindUserEvents(ctx context.Context, in *FindUserEventsRequest, opts ...grpc.CallOption) (*FindUserEventsResponse, error)
	GetRefreshToken(ctx context.Context, in *GetRefreshTokenRequest, opts ...grpc.CallOption) (*GetRefreshTokenResponse, error)
	IncrementViewCount(ctx context.Context, in *IncrementViewCountRequest, opts ...grpc.CallOption) (*IncrementViewCountResponse, error)
	LookupPicCommentVote(ctx context.Context, in *LookupPicCommentVoteRequest, opts ...grpc.CallOption) (*LookupPicCommentVoteResponse, error)
	LookupPicDetails(ctx context.Context, in *LookupPicDetailsRequest, opts ...grpc.CallOption) (*LookupPicDetailsResponse, error)
	LookupPicExtension(ctx context.Context, in *LookupPicExtensionRequest, opts ...grpc.CallOption) (*LookupPicExtensionResponse, error)
	LookupPicFile(ctx context.Context, in *LookupPicFileRequest, opts ...grpc.CallOption) (*LookupPicFileResponse, error)
	LookupPicVote(ctx context.Context, in *LookupPicVoteRequest, opts ...grpc.CallOption) (*LookupPicVoteResponse, error)
	LookupPublicUserInfo(ctx context.Context, in *LookupPublicUserInfoRequest, opts ...grpc.CallOption) (*LookupPublicUserInfoResponse, error)
	LookupUser(ctx context.Context, in *LookupUserRequest, opts ...grpc.CallOption) (*LookupUserResponse, error)
	PurgePic(ctx context.Context, in *PurgePicRequest, opts ...grpc.CallOption) (*PurgePicResponse, error)
	ReadPicFile(ctx context.Context, opts ...grpc.CallOption) (PixurService_ReadPicFileClient, error)
	SoftDeletePic(ctx context.Context, in *SoftDeletePicRequest, opts ...grpc.CallOption) (*SoftDeletePicResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	UpsertPic(ctx context.Context, in *UpsertPicRequest, opts ...grpc.CallOption) (*UpsertPicResponse, error)
	UpsertPicCommentVote(ctx context.Context, in *UpsertPicCommentVoteRequest, opts ...grpc.CallOption) (*UpsertPicCommentVoteResponse, error)
	UpsertPicVote(ctx context.Context, in *UpsertPicVoteRequest, opts ...grpc.CallOption) (*UpsertPicVoteResponse, error)
	WatchBackendConfiguration(ctx context.Context, in *WatchBackendConfigurationRequest, opts ...grpc.CallOption) (PixurService_WatchBackendConfigurationClient, error)
}

type pixurServiceClient struct {
	cc *grpc.ClientConn
}

func NewPixurServiceClient(cc *grpc.ClientConn) PixurServiceClient {
	return &pixurServiceClient{cc}
}

func (c *pixurServiceClient) AddPicComment(ctx context.Context, in *AddPicCommentRequest, opts ...grpc.CallOption) (*AddPicCommentResponse, error) {
	out := new(AddPicCommentResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/AddPicComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) AddPicTags(ctx context.Context, in *AddPicTagsRequest, opts ...grpc.CallOption) (*AddPicTagsResponse, error) {
	out := new(AddPicTagsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/AddPicTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) DeleteToken(ctx context.Context, in *DeleteTokenRequest, opts ...grpc.CallOption) (*DeleteTokenResponse, error) {
	out := new(DeleteTokenResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/DeleteToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindIndexPics(ctx context.Context, in *FindIndexPicsRequest, opts ...grpc.CallOption) (*FindIndexPicsResponse, error) {
	out := new(FindIndexPicsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindIndexPics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindPicCommentVotes(ctx context.Context, in *FindPicCommentVotesRequest, opts ...grpc.CallOption) (*FindPicCommentVotesResponse, error) {
	out := new(FindPicCommentVotesResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindPicCommentVotes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindSchedPics(ctx context.Context, in *FindSchedPicsRequest, opts ...grpc.CallOption) (*FindSchedPicsResponse, error) {
	out := new(FindSchedPicsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindSchedPics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindSimilarPics(ctx context.Context, in *FindSimilarPicsRequest, opts ...grpc.CallOption) (*FindSimilarPicsResponse, error) {
	out := new(FindSimilarPicsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindSimilarPics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindUserEvents(ctx context.Context, in *FindUserEventsRequest, opts ...grpc.CallOption) (*FindUserEventsResponse, error) {
	out := new(FindUserEventsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindUserEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) GetRefreshToken(ctx context.Context, in *GetRefreshTokenRequest, opts ...grpc.CallOption) (*GetRefreshTokenResponse, error) {
	out := new(GetRefreshTokenResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/GetRefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) IncrementViewCount(ctx context.Context, in *IncrementViewCountRequest, opts ...grpc.CallOption) (*IncrementViewCountResponse, error) {
	out := new(IncrementViewCountResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/IncrementViewCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicCommentVote(ctx context.Context, in *LookupPicCommentVoteRequest, opts ...grpc.CallOption) (*LookupPicCommentVoteResponse, error) {
	out := new(LookupPicCommentVoteResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicCommentVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicDetails(ctx context.Context, in *LookupPicDetailsRequest, opts ...grpc.CallOption) (*LookupPicDetailsResponse, error) {
	out := new(LookupPicDetailsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicExtension(ctx context.Context, in *LookupPicExtensionRequest, opts ...grpc.CallOption) (*LookupPicExtensionResponse, error) {
	out := new(LookupPicExtensionResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicExtension", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicFile(ctx context.Context, in *LookupPicFileRequest, opts ...grpc.CallOption) (*LookupPicFileResponse, error) {
	out := new(LookupPicFileResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicVote(ctx context.Context, in *LookupPicVoteRequest, opts ...grpc.CallOption) (*LookupPicVoteResponse, error) {
	out := new(LookupPicVoteResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPublicUserInfo(ctx context.Context, in *LookupPublicUserInfoRequest, opts ...grpc.CallOption) (*LookupPublicUserInfoResponse, error) {
	out := new(LookupPublicUserInfoResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPublicUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupUser(ctx context.Context, in *LookupUserRequest, opts ...grpc.CallOption) (*LookupUserResponse, error) {
	out := new(LookupUserResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) PurgePic(ctx context.Context, in *PurgePicRequest, opts ...grpc.CallOption) (*PurgePicResponse, error) {
	out := new(PurgePicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/PurgePic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) ReadPicFile(ctx context.Context, opts ...grpc.CallOption) (PixurService_ReadPicFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PixurService_serviceDesc.Streams[0], "/pixur.api.PixurService/ReadPicFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &pixurServiceReadPicFileClient{stream}
	return x, nil
}

type PixurService_ReadPicFileClient interface {
	Send(*ReadPicFileRequest) error
	Recv() (*ReadPicFileResponse, error)
	grpc.ClientStream
}

type pixurServiceReadPicFileClient struct {
	grpc.ClientStream
}

func (x *pixurServiceReadPicFileClient) Send(m *ReadPicFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pixurServiceReadPicFileClient) Recv() (*ReadPicFileResponse, error) {
	m := new(ReadPicFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pixurServiceClient) SoftDeletePic(ctx context.Context, in *SoftDeletePicRequest, opts ...grpc.CallOption) (*SoftDeletePicResponse, error) {
	out := new(SoftDeletePicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/SoftDeletePic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpsertPic(ctx context.Context, in *UpsertPicRequest, opts ...grpc.CallOption) (*UpsertPicResponse, error) {
	out := new(UpsertPicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpsertPic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpsertPicCommentVote(ctx context.Context, in *UpsertPicCommentVoteRequest, opts ...grpc.CallOption) (*UpsertPicCommentVoteResponse, error) {
	out := new(UpsertPicCommentVoteResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpsertPicCommentVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpsertPicVote(ctx context.Context, in *UpsertPicVoteRequest, opts ...grpc.CallOption) (*UpsertPicVoteResponse, error) {
	out := new(UpsertPicVoteResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpsertPicVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) WatchBackendConfiguration(ctx context.Context, in *WatchBackendConfigurationRequest, opts ...grpc.CallOption) (PixurService_WatchBackendConfigurationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PixurService_serviceDesc.Streams[1], "/pixur.api.PixurService/WatchBackendConfiguration", opts...)
	if err != nil {
		return nil, err
	}
	x := &pixurServiceWatchBackendConfigurationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PixurService_WatchBackendConfigurationClient interface {
	Recv() (*WatchBackendConfigurationResponse, error)
	grpc.ClientStream
}

type pixurServiceWatchBackendConfigurationClient struct {
	grpc.ClientStream
}

func (x *pixurServiceWatchBackendConfigurationClient) Recv() (*WatchBackendConfigurationResponse, error) {
	m := new(WatchBackendConfigurationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PixurServiceServer is the server API for PixurService service.
type PixurServiceServer interface {
	AddPicComment(context.Context, *AddPicCommentRequest) (*AddPicCommentResponse, error)
	AddPicTags(context.Context, *AddPicTagsRequest) (*AddPicTagsResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	DeleteToken(context.Context, *DeleteTokenRequest) (*DeleteTokenResponse, error)
	FindIndexPics(context.Context, *FindIndexPicsRequest) (*FindIndexPicsResponse, error)
	FindPicCommentVotes(context.Context, *FindPicCommentVotesRequest) (*FindPicCommentVotesResponse, error)
	FindSchedPics(context.Context, *FindSchedPicsRequest) (*FindSchedPicsResponse, error)
	FindSimilarPics(context.Context, *FindSimilarPicsRequest) (*FindSimilarPicsResponse, error)
	FindUserEvents(context.Context, *FindUserEventsRequest) (*FindUserEventsResponse, error)
	GetRefreshToken(context.Context, *GetRefreshTokenRequest) (*GetRefreshTokenResponse, error)
	IncrementViewCount(context.Context, *IncrementViewCountRequest) (*IncrementViewCountResponse, error)
	LookupPicCommentVote(context.Context, *LookupPicCommentVoteRequest) (*LookupPicCommentVoteResponse, error)
	LookupPicDetails(context.Context, *LookupPicDetailsRequest) (*LookupPicDetailsResponse, error)
	LookupPicExtension(context.Context, *LookupPicExtensionRequest) (*LookupPicExtensionResponse, error)
	LookupPicFile(context.Context, *LookupPicFileRequest) (*LookupPicFileResponse, error)
	LookupPicVote(context.Context, *LookupPicVoteRequest) (*LookupPicVoteResponse, error)
	LookupPublicUserInfo(context.Context, *LookupPublicUserInfoRequest) (*LookupPublicUserInfoResponse, error)
	LookupUser(context.Context, *LookupUserRequest) (*LookupUserResponse, error)
	PurgePic(context.Context, *PurgePicRequest) (*PurgePicResponse, error)
	ReadPicFile(PixurService_ReadPicFileServer) error
	SoftDeletePic(context.Context, *SoftDeletePicRequest) (*SoftDeletePicResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	UpsertPic(context.Context, *UpsertPicRequest) (*UpsertPicResponse, error)
	UpsertPicCommentVote(context.Context, *UpsertPicCommentVoteRequest) (*UpsertPicCommentVoteResponse, error)
	UpsertPicVote(context.Context, *UpsertPicVoteRequest) (*UpsertPicVoteResponse, error)
	WatchBackendConfiguration(*WatchBackendConfigurationRequest, PixurService_WatchBackendConfigurationServer) error
}

func RegisterPixurServiceServer(s *grpc.Server, srv PixurServiceServer) {
	s.RegisterService(&_PixurService_serviceDesc, srv)
}

func _PixurService_AddPicComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPicCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).AddPicComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/AddPicComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).AddPicComment(ctx, req.(*AddPicCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_AddPicTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPicTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).AddPicTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/AddPicTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).AddPicTags(ctx, req.(*AddPicTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_DeleteToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).DeleteToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/DeleteToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).DeleteToken(ctx, req.(*DeleteTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindIndexPics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindIndexPicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindIndexPics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindIndexPics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindIndexPics(ctx, req.(*FindIndexPicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindPicCommentVotes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindPicCommentVotesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindPicCommentVotes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindPicCommentVotes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindPicCommentVotes(ctx, req.(*FindPicCommentVotesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindSchedPics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSchedPicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindSchedPics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindSchedPics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindSchedPics(ctx, req.(*FindSchedPicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindSimilarPics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSimilarPicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindSimilarPics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindSimilarPics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindSimilarPics(ctx, req.(*FindSimilarPicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindUserEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindUserEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindUserEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindUserEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindUserEvents(ctx, req.(*FindUserEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_GetRefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).GetRefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/GetRefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).GetRefreshToken(ctx, req.(*GetRefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_IncrementViewCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncrementViewCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).IncrementViewCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/IncrementViewCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).IncrementViewCount(ctx, req.(*IncrementViewCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicCommentVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicCommentVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicCommentVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicCommentVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicCommentVote(ctx, req.(*LookupPicCommentVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicDetails(ctx, req.(*LookupPicDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicExtension_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicExtensionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicExtension(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicExtension",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicExtension(ctx, req.(*LookupPicExtensionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicFile(ctx, req.(*LookupPicFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicVote(ctx, req.(*LookupPicVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPublicUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPublicUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPublicUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPublicUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPublicUserInfo(ctx, req.(*LookupPublicUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupUser(ctx, req.(*LookupUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_PurgePic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurgePicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).PurgePic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/PurgePic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).PurgePic(ctx, req.(*PurgePicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_ReadPicFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PixurServiceServer).ReadPicFile(&pixurServiceReadPicFileServer{stream})
}

type PixurService_ReadPicFileServer interface {
	Send(*ReadPicFileResponse) error
	Recv() (*ReadPicFileRequest, error)
	grpc.ServerStream
}

type pixurServiceReadPicFileServer struct {
	grpc.ServerStream
}

func (x *pixurServiceReadPicFileServer) Send(m *ReadPicFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pixurServiceReadPicFileServer) Recv() (*ReadPicFileRequest, error) {
	m := new(ReadPicFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PixurService_SoftDeletePic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SoftDeletePicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).SoftDeletePic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/SoftDeletePic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).SoftDeletePic(ctx, req.(*SoftDeletePicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpsertPic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpsertPic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpsertPic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpsertPic(ctx, req.(*UpsertPicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpsertPicCommentVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPicCommentVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpsertPicCommentVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpsertPicCommentVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpsertPicCommentVote(ctx, req.(*UpsertPicCommentVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpsertPicVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPicVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpsertPicVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpsertPicVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpsertPicVote(ctx, req.(*UpsertPicVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_WatchBackendConfiguration_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchBackendConfigurationRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PixurServiceServer).WatchBackendConfiguration(m, &pixurServiceWatchBackendConfigurationServer{stream})
}

type PixurService_WatchBackendConfigurationServer interface {
	Send(*WatchBackendConfigurationResponse) error
	grpc.ServerStream
}

type pixurServiceWatchBackendConfigurationServer struct {
	grpc.ServerStream
}

func (x *pixurServiceWatchBackendConfigurationServer) Send(m *WatchBackendConfigurationResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PixurService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pixur.api.PixurService",
	HandlerType: (*PixurServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPicComment",
			Handler:    _PixurService_AddPicComment_Handler,
		},
		{
			MethodName: "AddPicTags",
			Handler:    _PixurService_AddPicTags_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _PixurService_CreateUser_Handler,
		},
		{
			MethodName: "DeleteToken",
			Handler:    _PixurService_DeleteToken_Handler,
		},
		{
			MethodName: "FindIndexPics",
			Handler:    _PixurService_FindIndexPics_Handler,
		},
		{
			MethodName: "FindPicCommentVotes",
			Handler:    _PixurService_FindPicCommentVotes_Handler,
		},
		{
			MethodName: "FindSchedPics",
			Handler:    _PixurService_FindSchedPics_Handler,
		},
		{
			MethodName: "FindSimilarPics",
			Handler:    _PixurService_FindSimilarPics_Handler,
		},
		{
			MethodName: "FindUserEvents",
			Handler:    _PixurService_FindUserEvents_Handler,
		},
		{
			MethodName: "GetRefreshToken",
			Handler:    _PixurService_GetRefreshToken_Handler,
		},
		{
			MethodName: "IncrementViewCount",
			Handler:    _PixurService_IncrementViewCount_Handler,
		},
		{
			MethodName: "LookupPicCommentVote",
			Handler:    _PixurService_LookupPicCommentVote_Handler,
		},
		{
			MethodName: "LookupPicDetails",
			Handler:    _PixurService_LookupPicDetails_Handler,
		},
		{
			MethodName: "LookupPicExtension",
			Handler:    _PixurService_LookupPicExtension_Handler,
		},
		{
			MethodName: "LookupPicFile",
			Handler:    _PixurService_LookupPicFile_Handler,
		},
		{
			MethodName: "LookupPicVote",
			Handler:    _PixurService_LookupPicVote_Handler,
		},
		{
			MethodName: "LookupPublicUserInfo",
			Handler:    _PixurService_LookupPublicUserInfo_Handler,
		},
		{
			MethodName: "LookupUser",
			Handler:    _PixurService_LookupUser_Handler,
		},
		{
			MethodName: "PurgePic",
			Handler:    _PixurService_PurgePic_Handler,
		},
		{
			MethodName: "SoftDeletePic",
			Handler:    _PixurService_SoftDeletePic_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _PixurService_UpdateUser_Handler,
		},
		{
			MethodName: "UpsertPic",
			Handler:    _PixurService_UpsertPic_Handler,
		},
		{
			MethodName: "UpsertPicCommentVote",
			Handler:    _PixurService_UpsertPicCommentVote_Handler,
		},
		{
			MethodName: "UpsertPicVote",
			Handler:    _PixurService_UpsertPicVote_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadPicFile",
			Handler:       _PixurService_ReadPicFile_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "WatchBackendConfiguration",
			Handler:       _PixurService_WatchBackendConfiguration_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
