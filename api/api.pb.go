// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
import any "github.com/golang/protobuf/ptypes/any"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Copy of schema.proto
type DeletionReason int32

const (
	// The reason is not know, due to limitations of proto
	DeletionReason_UNKNOWN DeletionReason = 0
	// No specific reason.  This is a catch-all reason.
	DeletionReason_NONE DeletionReason = 1
	// The pic is in violation of the rules.
	DeletionReason_RULE_VIOLATION DeletionReason = 2
)

var DeletionReason_name = map[int32]string{
	0: "UNKNOWN",
	1: "NONE",
	2: "RULE_VIOLATION",
}
var DeletionReason_value = map[string]int32{
	"UNKNOWN":        0,
	"NONE":           1,
	"RULE_VIOLATION": 2,
}

func (x DeletionReason) String() string {
	return proto.EnumName(DeletionReason_name, int32(x))
}
func (DeletionReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{0}
}

type PicFile_Format int32

const (
	PicFile_UNKNOWN PicFile_Format = 0
	PicFile_JPEG    PicFile_Format = 1
	PicFile_GIF     PicFile_Format = 2
	PicFile_PNG     PicFile_Format = 3
	PicFile_WEBM    PicFile_Format = 4
)

var PicFile_Format_name = map[int32]string{
	0: "UNKNOWN",
	1: "JPEG",
	2: "GIF",
	3: "PNG",
	4: "WEBM",
}
var PicFile_Format_value = map[string]int32{
	"UNKNOWN": 0,
	"JPEG":    1,
	"GIF":     2,
	"PNG":     3,
	"WEBM":    4,
}

func (x PicFile_Format) String() string {
	return proto.EnumName(PicFile_Format_name, int32(x))
}
func (PicFile_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{1, 0}
}

type PicVote_Vote int32

const (
	PicVote_UNKNOWN PicVote_Vote = 0
	PicVote_UP      PicVote_Vote = 1
	PicVote_DOWN    PicVote_Vote = 2
	PicVote_NEUTRAL PicVote_Vote = 3
)

var PicVote_Vote_name = map[int32]string{
	0: "UNKNOWN",
	1: "UP",
	2: "DOWN",
	3: "NEUTRAL",
}
var PicVote_Vote_value = map[string]int32{
	"UNKNOWN": 0,
	"UP":      1,
	"DOWN":    2,
	"NEUTRAL": 3,
}

func (x PicVote_Vote) String() string {
	return proto.EnumName(PicVote_Vote_name, int32(x))
}
func (PicVote_Vote) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{4, 0}
}

type Capability_Cap int32

const (
	Capability_UNKNOWN Capability_Cap = 0
	// Can this user create and upload pictures
	Capability_PIC_CREATE Capability_Cap = 1
	// Can this user view the actual image data (grants pic token)
	Capability_PIC_READ Capability_Cap = 2
	// Can this user perform general pic index queries?
	Capability_PIC_INDEX Capability_Cap = 3
	// Can this user soft delete a pic?
	Capability_PIC_SOFT_DELETE Capability_Cap = 5
	// Can this user hard delete a pic?
	Capability_PIC_HARD_DELETE Capability_Cap = 6
	// Can this user purge a pic?
	Capability_PIC_PURGE Capability_Cap = 7
	// Can this user increment the pic view counter?
	Capability_PIC_UPDATE_VIEW_COUNTER Capability_Cap = 8
	// Can this user add tags and pic tags?
	Capability_PIC_TAG_CREATE Capability_Cap = 9
	// Can this user create comments?
	Capability_PIC_COMMENT_CREATE Capability_Cap = 10
	// Can this user vote?
	Capability_PIC_VOTE_CREATE Capability_Cap = 11
	// Can this user create other users?
	Capability_USER_CREATE Capability_Cap = 4
	// Can this user modify capabilities?
	Capability_USER_UPDATE_CAPABILITY Capability_Cap = 12
	// Can this user read information about themselves?
	Capability_USER_READ_SELF Capability_Cap = 13
	// Can this user read infortmation about others?
	Capability_USER_READ_ALL Capability_Cap = 14
)

var Capability_Cap_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "PIC_CREATE",
	2:  "PIC_READ",
	3:  "PIC_INDEX",
	5:  "PIC_SOFT_DELETE",
	6:  "PIC_HARD_DELETE",
	7:  "PIC_PURGE",
	8:  "PIC_UPDATE_VIEW_COUNTER",
	9:  "PIC_TAG_CREATE",
	10: "PIC_COMMENT_CREATE",
	11: "PIC_VOTE_CREATE",
	4:  "USER_CREATE",
	12: "USER_UPDATE_CAPABILITY",
	13: "USER_READ_SELF",
	14: "USER_READ_ALL",
}
var Capability_Cap_value = map[string]int32{
	"UNKNOWN":                 0,
	"PIC_CREATE":              1,
	"PIC_READ":                2,
	"PIC_INDEX":               3,
	"PIC_SOFT_DELETE":         5,
	"PIC_HARD_DELETE":         6,
	"PIC_PURGE":               7,
	"PIC_UPDATE_VIEW_COUNTER": 8,
	"PIC_TAG_CREATE":          9,
	"PIC_COMMENT_CREATE":      10,
	"PIC_VOTE_CREATE":         11,
	"USER_CREATE":             4,
	"USER_UPDATE_CAPABILITY":  12,
	"USER_READ_SELF":          13,
	"USER_READ_ALL":           14,
}

func (x Capability_Cap) String() string {
	return proto.EnumName(Capability_Cap_name, int32(x))
}
func (Capability_Cap) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{6, 0}
}

type PwtHeader_Algorithm int32

const (
	PwtHeader_UNKNOWN PwtHeader_Algorithm = 0
	PwtHeader_HS256   PwtHeader_Algorithm = 1
	PwtHeader_RS256   PwtHeader_Algorithm = 2
)

var PwtHeader_Algorithm_name = map[int32]string{
	0: "UNKNOWN",
	1: "HS256",
	2: "RS256",
}
var PwtHeader_Algorithm_value = map[string]int32{
	"UNKNOWN": 0,
	"HS256":   1,
	"RS256":   2,
}

func (x PwtHeader_Algorithm) String() string {
	return proto.EnumName(PwtHeader_Algorithm_name, int32(x))
}
func (PwtHeader_Algorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{36, 0}
}

type PwtPayload_Type int32

const (
	PwtPayload_UNKNOWN PwtPayload_Type = 0
	PwtPayload_REFRESH PwtPayload_Type = 1
	PwtPayload_AUTH    PwtPayload_Type = 2
	PwtPayload_PIX     PwtPayload_Type = 3
)

var PwtPayload_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "REFRESH",
	2: "AUTH",
	3: "PIX",
}
var PwtPayload_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"REFRESH": 1,
	"AUTH":    2,
	"PIX":     3,
}

func (x PwtPayload_Type) String() string {
	return proto.EnumName(PwtPayload_Type_name, int32(x))
}
func (PwtPayload_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{37, 0}
}

type Pic struct {
	// id is the unique identifier for the pic, in varint form
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// width is the width of pic
	Width int32 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	// height is the height of the pic
	Height int32 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
	// version is the version of the pic.  It is used when updating the pic.
	Version int64 `protobuf:"fixed64,4,opt,name=version,proto3" json:"version,omitempty"`
	// type is the mime type of the pic. (JPEG, GIF, PNG, or WEBM)
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"` // Deprecated: Do not use.
	// created_time is when the pic was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the pic was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,15,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// relative_url is the location of the pic file relative to the root dir.
	RelativeUrl string `protobuf:"bytes,6,opt,name=relative_url,json=relativeUrl,proto3" json:"relative_url,omitempty"` // Deprecated: Do not use.
	// thumbnail_relative_url is the location of the the pic thumbnail
	// relative to the root dir.
	ThumbnailRelativeUrl string `protobuf:"bytes,7,opt,name=thumbnail_relative_url,json=thumbnailRelativeUrl,proto3" json:"thumbnail_relative_url,omitempty"` // Deprecated: Do not use.
	// pending_deletion indicates if the pic may be deleted soon.
	PendingDeletion bool `protobuf:"varint,9,opt,name=pending_deletion,json=pendingDeletion,proto3" json:"pending_deletion,omitempty"`
	// view_count is the number of views this picture has received.
	ViewCount int64 `protobuf:"varint,10,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	// duration is present if the image is animated (GIF or WEBM).  Note that
	// GIFs duration is not well defined and is subject to reinterpretation.
	Duration *duration.Duration `protobuf:"bytes,11,opt,name=duration,proto3" json:"duration,omitempty"` // Deprecated: Do not use.
	// The estimated lower bound of the pic score
	ScoreLo float64 `protobuf:"fixed64,12,opt,name=score_lo,json=scoreLo,proto3" json:"score_lo,omitempty"`
	// The estimated upper bound of the pic score
	ScoreHi              float64  `protobuf:"fixed64,13,opt,name=score_hi,json=scoreHi,proto3" json:"score_hi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pic) Reset()         { *m = Pic{} }
func (m *Pic) String() string { return proto.CompactTextString(m) }
func (*Pic) ProtoMessage()    {}
func (*Pic) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{0}
}
func (m *Pic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pic.Unmarshal(m, b)
}
func (m *Pic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pic.Marshal(b, m, deterministic)
}
func (dst *Pic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pic.Merge(dst, src)
}
func (m *Pic) XXX_Size() int {
	return xxx_messageInfo_Pic.Size(m)
}
func (m *Pic) XXX_DiscardUnknown() {
	xxx_messageInfo_Pic.DiscardUnknown(m)
}

var xxx_messageInfo_Pic proto.InternalMessageInfo

func (m *Pic) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pic) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Pic) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Pic) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

// Deprecated: Do not use.
func (m *Pic) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Pic) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *Pic) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

// Deprecated: Do not use.
func (m *Pic) GetRelativeUrl() string {
	if m != nil {
		return m.RelativeUrl
	}
	return ""
}

// Deprecated: Do not use.
func (m *Pic) GetThumbnailRelativeUrl() string {
	if m != nil {
		return m.ThumbnailRelativeUrl
	}
	return ""
}

func (m *Pic) GetPendingDeletion() bool {
	if m != nil {
		return m.PendingDeletion
	}
	return false
}

func (m *Pic) GetViewCount() int64 {
	if m != nil {
		return m.ViewCount
	}
	return 0
}

// Deprecated: Do not use.
func (m *Pic) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Pic) GetScoreLo() float64 {
	if m != nil {
		return m.ScoreLo
	}
	return 0
}

func (m *Pic) GetScoreHi() float64 {
	if m != nil {
		return m.ScoreHi
	}
	return 0
}

type PicFile struct {
	// The fully qualified picfile id.  The first component is always the pic id.
	Id     string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Format PicFile_Format `protobuf:"varint,2,opt,name=format,proto3,enum=pixur.api.PicFile_Format" json:"format,omitempty"`
	Width  int32          `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height int32          `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// duration is present if the image is animated (GIF or WEBM).  Note that
	// GIFs duration is not well defined and is subject to reinterpretation.
	Duration *duration.Duration `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// Is this pic considered a thumbnail
	Thumbnail bool `protobuf:"varint,6,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	// created_time is when the PicFile was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the PicFile was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// the size in bytes of the file
	Size                 int64    `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PicFile) Reset()         { *m = PicFile{} }
func (m *PicFile) String() string { return proto.CompactTextString(m) }
func (*PicFile) ProtoMessage()    {}
func (*PicFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{1}
}
func (m *PicFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicFile.Unmarshal(m, b)
}
func (m *PicFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicFile.Marshal(b, m, deterministic)
}
func (dst *PicFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicFile.Merge(dst, src)
}
func (m *PicFile) XXX_Size() int {
	return xxx_messageInfo_PicFile.Size(m)
}
func (m *PicFile) XXX_DiscardUnknown() {
	xxx_messageInfo_PicFile.DiscardUnknown(m)
}

var xxx_messageInfo_PicFile proto.InternalMessageInfo

func (m *PicFile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PicFile) GetFormat() PicFile_Format {
	if m != nil {
		return m.Format
	}
	return PicFile_UNKNOWN
}

func (m *PicFile) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *PicFile) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PicFile) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *PicFile) GetThumbnail() bool {
	if m != nil {
		return m.Thumbnail
	}
	return false
}

func (m *PicFile) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *PicFile) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

func (m *PicFile) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type PicTag struct {
	// pic_id is the unique identifier for the pic, in varint form
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// tag_id is the unique identifier for the tag, in varint form
	TagId string `protobuf:"bytes,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	// name is the tag name in utf8 form
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// created_time is when the tag was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the tag was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// version is the version of the tag.  It is used when updating the tag.
	Version              int64    `protobuf:"fixed64,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PicTag) Reset()         { *m = PicTag{} }
func (m *PicTag) String() string { return proto.CompactTextString(m) }
func (*PicTag) ProtoMessage()    {}
func (*PicTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{2}
}
func (m *PicTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicTag.Unmarshal(m, b)
}
func (m *PicTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicTag.Marshal(b, m, deterministic)
}
func (dst *PicTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicTag.Merge(dst, src)
}
func (m *PicTag) XXX_Size() int {
	return xxx_messageInfo_PicTag.Size(m)
}
func (m *PicTag) XXX_DiscardUnknown() {
	xxx_messageInfo_PicTag.DiscardUnknown(m)
}

var xxx_messageInfo_PicTag proto.InternalMessageInfo

func (m *PicTag) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *PicTag) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

func (m *PicTag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PicTag) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *PicTag) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

func (m *PicTag) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type PicComment struct {
	// pic_id is the unique identifier for the pic, in varint form
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// comment_id is the unique identifier for the comment, in varint form
	CommentId string `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	// comment_parent_id is the unique identifier for the parent comment, in varint form
	CommentParentId string `protobuf:"bytes,3,opt,name=comment_parent_id,json=commentParentId,proto3" json:"comment_parent_id,omitempty"`
	Text            string `protobuf:"bytes,7,opt,name=text,proto3" json:"text,omitempty"`
	// created_time is when the tag was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the tag was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// version is the version of the tag.  It is used when updating the tag.
	Version              int64    `protobuf:"fixed64,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PicComment) Reset()         { *m = PicComment{} }
func (m *PicComment) String() string { return proto.CompactTextString(m) }
func (*PicComment) ProtoMessage()    {}
func (*PicComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{3}
}
func (m *PicComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicComment.Unmarshal(m, b)
}
func (m *PicComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicComment.Marshal(b, m, deterministic)
}
func (dst *PicComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicComment.Merge(dst, src)
}
func (m *PicComment) XXX_Size() int {
	return xxx_messageInfo_PicComment.Size(m)
}
func (m *PicComment) XXX_DiscardUnknown() {
	xxx_messageInfo_PicComment.DiscardUnknown(m)
}

var xxx_messageInfo_PicComment proto.InternalMessageInfo

func (m *PicComment) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *PicComment) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *PicComment) GetCommentParentId() string {
	if m != nil {
		return m.CommentParentId
	}
	return ""
}

func (m *PicComment) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *PicComment) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *PicComment) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

func (m *PicComment) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type PicVote struct {
	PicId                string               `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	UserId               string               `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Vote                 PicVote_Vote         `protobuf:"varint,3,opt,name=vote,proto3,enum=pixur.api.PicVote_Vote" json:"vote,omitempty"`
	Version              int64                `protobuf:"fixed64,4,opt,name=version,proto3" json:"version,omitempty"`
	CreatedTime          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	ModifiedTime         *timestamp.Timestamp `protobuf:"bytes,6,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PicVote) Reset()         { *m = PicVote{} }
func (m *PicVote) String() string { return proto.CompactTextString(m) }
func (*PicVote) ProtoMessage()    {}
func (*PicVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{4}
}
func (m *PicVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicVote.Unmarshal(m, b)
}
func (m *PicVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicVote.Marshal(b, m, deterministic)
}
func (dst *PicVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicVote.Merge(dst, src)
}
func (m *PicVote) XXX_Size() int {
	return xxx_messageInfo_PicVote.Size(m)
}
func (m *PicVote) XXX_DiscardUnknown() {
	xxx_messageInfo_PicVote.DiscardUnknown(m)
}

var xxx_messageInfo_PicVote proto.InternalMessageInfo

func (m *PicVote) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *PicVote) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PicVote) GetVote() PicVote_Vote {
	if m != nil {
		return m.Vote
	}
	return PicVote_UNKNOWN
}

func (m *PicVote) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *PicVote) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *PicVote) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

type User struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ident  string `protobuf:"bytes,2,opt,name=ident,proto3" json:"ident,omitempty"`
	// created_time is when the user was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the user was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// modified_time is when the user was last modified.
	LastSeenTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_seen_time,json=lastSeenTime,proto3" json:"last_seen_time,omitempty"`
	// version is the version of the user.  It is used when updating the user.
	Version              int64            `protobuf:"fixed64,6,opt,name=version,proto3" json:"version,omitempty"`
	Capability           []Capability_Cap `protobuf:"varint,7,rep,packed,name=capability,proto3,enum=pixur.api.Capability_Cap" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{5}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *User) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *User) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *User) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

func (m *User) GetLastSeenTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenTime
	}
	return nil
}

func (m *User) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *User) GetCapability() []Capability_Cap {
	if m != nil {
		return m.Capability
	}
	return nil
}

type Capability struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Capability) Reset()         { *m = Capability{} }
func (m *Capability) String() string { return proto.CompactTextString(m) }
func (*Capability) ProtoMessage()    {}
func (*Capability) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{6}
}
func (m *Capability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Capability.Unmarshal(m, b)
}
func (m *Capability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Capability.Marshal(b, m, deterministic)
}
func (dst *Capability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Capability.Merge(dst, src)
}
func (m *Capability) XXX_Size() int {
	return xxx_messageInfo_Capability.Size(m)
}
func (m *Capability) XXX_DiscardUnknown() {
	xxx_messageInfo_Capability.DiscardUnknown(m)
}

var xxx_messageInfo_Capability proto.InternalMessageInfo

type LookupUserRequest struct {
	// if absent, assumed to come from auth token
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupUserRequest) Reset()         { *m = LookupUserRequest{} }
func (m *LookupUserRequest) String() string { return proto.CompactTextString(m) }
func (*LookupUserRequest) ProtoMessage()    {}
func (*LookupUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{7}
}
func (m *LookupUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupUserRequest.Unmarshal(m, b)
}
func (m *LookupUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupUserRequest.Marshal(b, m, deterministic)
}
func (dst *LookupUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupUserRequest.Merge(dst, src)
}
func (m *LookupUserRequest) XXX_Size() int {
	return xxx_messageInfo_LookupUserRequest.Size(m)
}
func (m *LookupUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupUserRequest proto.InternalMessageInfo

func (m *LookupUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LookupUserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupUserResponse) Reset()         { *m = LookupUserResponse{} }
func (m *LookupUserResponse) String() string { return proto.CompactTextString(m) }
func (*LookupUserResponse) ProtoMessage()    {}
func (*LookupUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{8}
}
func (m *LookupUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupUserResponse.Unmarshal(m, b)
}
func (m *LookupUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupUserResponse.Marshal(b, m, deterministic)
}
func (dst *LookupUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupUserResponse.Merge(dst, src)
}
func (m *LookupUserResponse) XXX_Size() int {
	return xxx_messageInfo_LookupUserResponse.Size(m)
}
func (m *LookupUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupUserResponse proto.InternalMessageInfo

func (m *LookupUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateUserRequest struct {
	UserId               string                              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Version              int64                               `protobuf:"fixed64,2,opt,name=version,proto3" json:"version,omitempty"`
	Ident                *UpdateUserRequest_ChangeIdent      `protobuf:"bytes,3,opt,name=ident,proto3" json:"ident,omitempty"`
	Secret               *UpdateUserRequest_ChangeSecret     `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	Capability           *UpdateUserRequest_ChangeCapability `protobuf:"bytes,5,opt,name=capability,proto3" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{9}
}
func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(dst, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateUserRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UpdateUserRequest) GetIdent() *UpdateUserRequest_ChangeIdent {
	if m != nil {
		return m.Ident
	}
	return nil
}

func (m *UpdateUserRequest) GetSecret() *UpdateUserRequest_ChangeSecret {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *UpdateUserRequest) GetCapability() *UpdateUserRequest_ChangeCapability {
	if m != nil {
		return m.Capability
	}
	return nil
}

type UpdateUserRequest_ChangeIdent struct {
	Ident                string   `protobuf:"bytes,1,opt,name=ident,proto3" json:"ident,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest_ChangeIdent) Reset()         { *m = UpdateUserRequest_ChangeIdent{} }
func (m *UpdateUserRequest_ChangeIdent) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_ChangeIdent) ProtoMessage()    {}
func (*UpdateUserRequest_ChangeIdent) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{9, 0}
}
func (m *UpdateUserRequest_ChangeIdent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_ChangeIdent.Unmarshal(m, b)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_ChangeIdent.Marshal(b, m, deterministic)
}
func (dst *UpdateUserRequest_ChangeIdent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_ChangeIdent.Merge(dst, src)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_ChangeIdent.Size(m)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_ChangeIdent.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_ChangeIdent proto.InternalMessageInfo

func (m *UpdateUserRequest_ChangeIdent) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

type UpdateUserRequest_ChangeSecret struct {
	Secret               string   `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest_ChangeSecret) Reset()         { *m = UpdateUserRequest_ChangeSecret{} }
func (m *UpdateUserRequest_ChangeSecret) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_ChangeSecret) ProtoMessage()    {}
func (*UpdateUserRequest_ChangeSecret) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{9, 1}
}
func (m *UpdateUserRequest_ChangeSecret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_ChangeSecret.Unmarshal(m, b)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_ChangeSecret.Marshal(b, m, deterministic)
}
func (dst *UpdateUserRequest_ChangeSecret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_ChangeSecret.Merge(dst, src)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_ChangeSecret.Size(m)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_ChangeSecret.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_ChangeSecret proto.InternalMessageInfo

func (m *UpdateUserRequest_ChangeSecret) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type UpdateUserRequest_ChangeCapability struct {
	SetCapability        []Capability_Cap `protobuf:"varint,1,rep,packed,name=set_capability,json=setCapability,proto3,enum=pixur.api.Capability_Cap" json:"set_capability,omitempty"`
	ClearCapability      []Capability_Cap `protobuf:"varint,2,rep,packed,name=clear_capability,json=clearCapability,proto3,enum=pixur.api.Capability_Cap" json:"clear_capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateUserRequest_ChangeCapability) Reset()         { *m = UpdateUserRequest_ChangeCapability{} }
func (m *UpdateUserRequest_ChangeCapability) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_ChangeCapability) ProtoMessage()    {}
func (*UpdateUserRequest_ChangeCapability) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{9, 2}
}
func (m *UpdateUserRequest_ChangeCapability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_ChangeCapability.Unmarshal(m, b)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_ChangeCapability.Marshal(b, m, deterministic)
}
func (dst *UpdateUserRequest_ChangeCapability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_ChangeCapability.Merge(dst, src)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_ChangeCapability.Size(m)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_ChangeCapability.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_ChangeCapability proto.InternalMessageInfo

func (m *UpdateUserRequest_ChangeCapability) GetSetCapability() []Capability_Cap {
	if m != nil {
		return m.SetCapability
	}
	return nil
}

func (m *UpdateUserRequest_ChangeCapability) GetClearCapability() []Capability_Cap {
	if m != nil {
		return m.ClearCapability
	}
	return nil
}

type UpdateUserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserResponse) Reset()         { *m = UpdateUserResponse{} }
func (m *UpdateUserResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateUserResponse) ProtoMessage()    {}
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{10}
}
func (m *UpdateUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserResponse.Unmarshal(m, b)
}
func (m *UpdateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserResponse.Merge(dst, src)
}
func (m *UpdateUserResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateUserResponse.Size(m)
}
func (m *UpdateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserResponse proto.InternalMessageInfo

func (m *UpdateUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type PicCommentTree struct {
	// All comments, ordered by a post order traversal.  Protobuf does not handle deeply nested
	// messages well.
	Comment              []*PicComment `protobuf:"bytes,1,rep,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PicCommentTree) Reset()         { *m = PicCommentTree{} }
func (m *PicCommentTree) String() string { return proto.CompactTextString(m) }
func (*PicCommentTree) ProtoMessage()    {}
func (*PicCommentTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{11}
}
func (m *PicCommentTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicCommentTree.Unmarshal(m, b)
}
func (m *PicCommentTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicCommentTree.Marshal(b, m, deterministic)
}
func (dst *PicCommentTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicCommentTree.Merge(dst, src)
}
func (m *PicCommentTree) XXX_Size() int {
	return xxx_messageInfo_PicCommentTree.Size(m)
}
func (m *PicCommentTree) XXX_DiscardUnknown() {
	xxx_messageInfo_PicCommentTree.DiscardUnknown(m)
}

var xxx_messageInfo_PicCommentTree proto.InternalMessageInfo

func (m *PicCommentTree) GetComment() []*PicComment {
	if m != nil {
		return m.Comment
	}
	return nil
}

type LookupPicDetailsRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicDetailsRequest) Reset()         { *m = LookupPicDetailsRequest{} }
func (m *LookupPicDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicDetailsRequest) ProtoMessage()    {}
func (*LookupPicDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{12}
}
func (m *LookupPicDetailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicDetailsRequest.Unmarshal(m, b)
}
func (m *LookupPicDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicDetailsRequest.Marshal(b, m, deterministic)
}
func (dst *LookupPicDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicDetailsRequest.Merge(dst, src)
}
func (m *LookupPicDetailsRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicDetailsRequest.Size(m)
}
func (m *LookupPicDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicDetailsRequest proto.InternalMessageInfo

func (m *LookupPicDetailsRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type LookupPicDetailsResponse struct {
	Pic                  *Pic            `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	PicTag               []*PicTag       `protobuf:"bytes,2,rep,name=pic_tag,json=picTag,proto3" json:"pic_tag,omitempty"`
	PicCommentTree       *PicCommentTree `protobuf:"bytes,3,opt,name=pic_comment_tree,json=picCommentTree,proto3" json:"pic_comment_tree,omitempty"`
	PicFile              []*PicFile      `protobuf:"bytes,4,rep,name=pic_file,json=picFile,proto3" json:"pic_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LookupPicDetailsResponse) Reset()         { *m = LookupPicDetailsResponse{} }
func (m *LookupPicDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicDetailsResponse) ProtoMessage()    {}
func (*LookupPicDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{13}
}
func (m *LookupPicDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicDetailsResponse.Unmarshal(m, b)
}
func (m *LookupPicDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicDetailsResponse.Marshal(b, m, deterministic)
}
func (dst *LookupPicDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicDetailsResponse.Merge(dst, src)
}
func (m *LookupPicDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicDetailsResponse.Size(m)
}
func (m *LookupPicDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicDetailsResponse proto.InternalMessageInfo

func (m *LookupPicDetailsResponse) GetPic() *Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

func (m *LookupPicDetailsResponse) GetPicTag() []*PicTag {
	if m != nil {
		return m.PicTag
	}
	return nil
}

func (m *LookupPicDetailsResponse) GetPicCommentTree() *PicCommentTree {
	if m != nil {
		return m.PicCommentTree
	}
	return nil
}

func (m *LookupPicDetailsResponse) GetPicFile() []*PicFile {
	if m != nil {
		return m.PicFile
	}
	return nil
}

type FindIndexPicsRequest struct {
	StartPicId           string   `protobuf:"bytes,1,opt,name=start_pic_id,json=startPicId,proto3" json:"start_pic_id,omitempty"`
	Ascending            bool     `protobuf:"varint,2,opt,name=ascending,proto3" json:"ascending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindIndexPicsRequest) Reset()         { *m = FindIndexPicsRequest{} }
func (m *FindIndexPicsRequest) String() string { return proto.CompactTextString(m) }
func (*FindIndexPicsRequest) ProtoMessage()    {}
func (*FindIndexPicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{14}
}
func (m *FindIndexPicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindIndexPicsRequest.Unmarshal(m, b)
}
func (m *FindIndexPicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindIndexPicsRequest.Marshal(b, m, deterministic)
}
func (dst *FindIndexPicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindIndexPicsRequest.Merge(dst, src)
}
func (m *FindIndexPicsRequest) XXX_Size() int {
	return xxx_messageInfo_FindIndexPicsRequest.Size(m)
}
func (m *FindIndexPicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindIndexPicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindIndexPicsRequest proto.InternalMessageInfo

func (m *FindIndexPicsRequest) GetStartPicId() string {
	if m != nil {
		return m.StartPicId
	}
	return ""
}

func (m *FindIndexPicsRequest) GetAscending() bool {
	if m != nil {
		return m.Ascending
	}
	return false
}

type FindIndexPicsResponse struct {
	Pic                  []*Pic   `protobuf:"bytes,1,rep,name=pic,proto3" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindIndexPicsResponse) Reset()         { *m = FindIndexPicsResponse{} }
func (m *FindIndexPicsResponse) String() string { return proto.CompactTextString(m) }
func (*FindIndexPicsResponse) ProtoMessage()    {}
func (*FindIndexPicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{15}
}
func (m *FindIndexPicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindIndexPicsResponse.Unmarshal(m, b)
}
func (m *FindIndexPicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindIndexPicsResponse.Marshal(b, m, deterministic)
}
func (dst *FindIndexPicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindIndexPicsResponse.Merge(dst, src)
}
func (m *FindIndexPicsResponse) XXX_Size() int {
	return xxx_messageInfo_FindIndexPicsResponse.Size(m)
}
func (m *FindIndexPicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindIndexPicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindIndexPicsResponse proto.InternalMessageInfo

func (m *FindIndexPicsResponse) GetPic() []*Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type FindSchedPicsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSchedPicsRequest) Reset()         { *m = FindSchedPicsRequest{} }
func (m *FindSchedPicsRequest) String() string { return proto.CompactTextString(m) }
func (*FindSchedPicsRequest) ProtoMessage()    {}
func (*FindSchedPicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{16}
}
func (m *FindSchedPicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSchedPicsRequest.Unmarshal(m, b)
}
func (m *FindSchedPicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSchedPicsRequest.Marshal(b, m, deterministic)
}
func (dst *FindSchedPicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSchedPicsRequest.Merge(dst, src)
}
func (m *FindSchedPicsRequest) XXX_Size() int {
	return xxx_messageInfo_FindSchedPicsRequest.Size(m)
}
func (m *FindSchedPicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSchedPicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindSchedPicsRequest proto.InternalMessageInfo

type FindSchedPicsResponse struct {
	Pic                  []*Pic   `protobuf:"bytes,1,rep,name=pic,proto3" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSchedPicsResponse) Reset()         { *m = FindSchedPicsResponse{} }
func (m *FindSchedPicsResponse) String() string { return proto.CompactTextString(m) }
func (*FindSchedPicsResponse) ProtoMessage()    {}
func (*FindSchedPicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{17}
}
func (m *FindSchedPicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSchedPicsResponse.Unmarshal(m, b)
}
func (m *FindSchedPicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSchedPicsResponse.Marshal(b, m, deterministic)
}
func (dst *FindSchedPicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSchedPicsResponse.Merge(dst, src)
}
func (m *FindSchedPicsResponse) XXX_Size() int {
	return xxx_messageInfo_FindSchedPicsResponse.Size(m)
}
func (m *FindSchedPicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSchedPicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindSchedPicsResponse proto.InternalMessageInfo

func (m *FindSchedPicsResponse) GetPic() []*Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type AddPicTagsRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	Tag                  []string `protobuf:"bytes,2,rep,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPicTagsRequest) Reset()         { *m = AddPicTagsRequest{} }
func (m *AddPicTagsRequest) String() string { return proto.CompactTextString(m) }
func (*AddPicTagsRequest) ProtoMessage()    {}
func (*AddPicTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{18}
}
func (m *AddPicTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicTagsRequest.Unmarshal(m, b)
}
func (m *AddPicTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicTagsRequest.Marshal(b, m, deterministic)
}
func (dst *AddPicTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicTagsRequest.Merge(dst, src)
}
func (m *AddPicTagsRequest) XXX_Size() int {
	return xxx_messageInfo_AddPicTagsRequest.Size(m)
}
func (m *AddPicTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicTagsRequest proto.InternalMessageInfo

func (m *AddPicTagsRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *AddPicTagsRequest) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

type AddPicTagsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPicTagsResponse) Reset()         { *m = AddPicTagsResponse{} }
func (m *AddPicTagsResponse) String() string { return proto.CompactTextString(m) }
func (*AddPicTagsResponse) ProtoMessage()    {}
func (*AddPicTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{19}
}
func (m *AddPicTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicTagsResponse.Unmarshal(m, b)
}
func (m *AddPicTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicTagsResponse.Marshal(b, m, deterministic)
}
func (dst *AddPicTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicTagsResponse.Merge(dst, src)
}
func (m *AddPicTagsResponse) XXX_Size() int {
	return xxx_messageInfo_AddPicTagsResponse.Size(m)
}
func (m *AddPicTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicTagsResponse proto.InternalMessageInfo

type CreatePicRequest struct {
	// file_data is the contents of the pic.  Either file_data or file_url must be present.
	// If sent as part of a stream, this field will be the only one read after the first message.
	FileData []byte `protobuf:"bytes,1,opt,name=file_data,json=fileData,proto3" json:"file_data,omitempty"`
	// optional, only used if file_data is present.
	FileName string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	// URL to get the pic from.  Either file_data or file_url must be present.
	FileUrl              string   `protobuf:"bytes,3,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	Tag                  []string `protobuf:"bytes,4,rep,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePicRequest) Reset()         { *m = CreatePicRequest{} }
func (m *CreatePicRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePicRequest) ProtoMessage()    {}
func (*CreatePicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{20}
}
func (m *CreatePicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePicRequest.Unmarshal(m, b)
}
func (m *CreatePicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePicRequest.Marshal(b, m, deterministic)
}
func (dst *CreatePicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePicRequest.Merge(dst, src)
}
func (m *CreatePicRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePicRequest.Size(m)
}
func (m *CreatePicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePicRequest proto.InternalMessageInfo

func (m *CreatePicRequest) GetFileData() []byte {
	if m != nil {
		return m.FileData
	}
	return nil
}

func (m *CreatePicRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *CreatePicRequest) GetFileUrl() string {
	if m != nil {
		return m.FileUrl
	}
	return ""
}

func (m *CreatePicRequest) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

type CreatePicResponse struct {
	Pic                  *Pic     `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePicResponse) Reset()         { *m = CreatePicResponse{} }
func (m *CreatePicResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePicResponse) ProtoMessage()    {}
func (*CreatePicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{21}
}
func (m *CreatePicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePicResponse.Unmarshal(m, b)
}
func (m *CreatePicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePicResponse.Marshal(b, m, deterministic)
}
func (dst *CreatePicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePicResponse.Merge(dst, src)
}
func (m *CreatePicResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePicResponse.Size(m)
}
func (m *CreatePicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePicResponse proto.InternalMessageInfo

func (m *CreatePicResponse) GetPic() *Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type FindSimilarPicsRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSimilarPicsRequest) Reset()         { *m = FindSimilarPicsRequest{} }
func (m *FindSimilarPicsRequest) String() string { return proto.CompactTextString(m) }
func (*FindSimilarPicsRequest) ProtoMessage()    {}
func (*FindSimilarPicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{22}
}
func (m *FindSimilarPicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSimilarPicsRequest.Unmarshal(m, b)
}
func (m *FindSimilarPicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSimilarPicsRequest.Marshal(b, m, deterministic)
}
func (dst *FindSimilarPicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSimilarPicsRequest.Merge(dst, src)
}
func (m *FindSimilarPicsRequest) XXX_Size() int {
	return xxx_messageInfo_FindSimilarPicsRequest.Size(m)
}
func (m *FindSimilarPicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSimilarPicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindSimilarPicsRequest proto.InternalMessageInfo

func (m *FindSimilarPicsRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type FindSimilarPicsResponse struct {
	PicId                []string `protobuf:"bytes,1,rep,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSimilarPicsResponse) Reset()         { *m = FindSimilarPicsResponse{} }
func (m *FindSimilarPicsResponse) String() string { return proto.CompactTextString(m) }
func (*FindSimilarPicsResponse) ProtoMessage()    {}
func (*FindSimilarPicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{23}
}
func (m *FindSimilarPicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSimilarPicsResponse.Unmarshal(m, b)
}
func (m *FindSimilarPicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSimilarPicsResponse.Marshal(b, m, deterministic)
}
func (dst *FindSimilarPicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSimilarPicsResponse.Merge(dst, src)
}
func (m *FindSimilarPicsResponse) XXX_Size() int {
	return xxx_messageInfo_FindSimilarPicsResponse.Size(m)
}
func (m *FindSimilarPicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSimilarPicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindSimilarPicsResponse proto.InternalMessageInfo

func (m *FindSimilarPicsResponse) GetPicId() []string {
	if m != nil {
		return m.PicId
	}
	return nil
}

type IncrementViewCountRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrementViewCountRequest) Reset()         { *m = IncrementViewCountRequest{} }
func (m *IncrementViewCountRequest) String() string { return proto.CompactTextString(m) }
func (*IncrementViewCountRequest) ProtoMessage()    {}
func (*IncrementViewCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{24}
}
func (m *IncrementViewCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementViewCountRequest.Unmarshal(m, b)
}
func (m *IncrementViewCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementViewCountRequest.Marshal(b, m, deterministic)
}
func (dst *IncrementViewCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementViewCountRequest.Merge(dst, src)
}
func (m *IncrementViewCountRequest) XXX_Size() int {
	return xxx_messageInfo_IncrementViewCountRequest.Size(m)
}
func (m *IncrementViewCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementViewCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementViewCountRequest proto.InternalMessageInfo

func (m *IncrementViewCountRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type IncrementViewCountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrementViewCountResponse) Reset()         { *m = IncrementViewCountResponse{} }
func (m *IncrementViewCountResponse) String() string { return proto.CompactTextString(m) }
func (*IncrementViewCountResponse) ProtoMessage()    {}
func (*IncrementViewCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{25}
}
func (m *IncrementViewCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementViewCountResponse.Unmarshal(m, b)
}
func (m *IncrementViewCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementViewCountResponse.Marshal(b, m, deterministic)
}
func (dst *IncrementViewCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementViewCountResponse.Merge(dst, src)
}
func (m *IncrementViewCountResponse) XXX_Size() int {
	return xxx_messageInfo_IncrementViewCountResponse.Size(m)
}
func (m *IncrementViewCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementViewCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementViewCountResponse proto.InternalMessageInfo

type PurgePicRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgePicRequest) Reset()         { *m = PurgePicRequest{} }
func (m *PurgePicRequest) String() string { return proto.CompactTextString(m) }
func (*PurgePicRequest) ProtoMessage()    {}
func (*PurgePicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{26}
}
func (m *PurgePicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgePicRequest.Unmarshal(m, b)
}
func (m *PurgePicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgePicRequest.Marshal(b, m, deterministic)
}
func (dst *PurgePicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgePicRequest.Merge(dst, src)
}
func (m *PurgePicRequest) XXX_Size() int {
	return xxx_messageInfo_PurgePicRequest.Size(m)
}
func (m *PurgePicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgePicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PurgePicRequest proto.InternalMessageInfo

func (m *PurgePicRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type PurgePicResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgePicResponse) Reset()         { *m = PurgePicResponse{} }
func (m *PurgePicResponse) String() string { return proto.CompactTextString(m) }
func (*PurgePicResponse) ProtoMessage()    {}
func (*PurgePicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{27}
}
func (m *PurgePicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgePicResponse.Unmarshal(m, b)
}
func (m *PurgePicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgePicResponse.Marshal(b, m, deterministic)
}
func (dst *PurgePicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgePicResponse.Merge(dst, src)
}
func (m *PurgePicResponse) XXX_Size() int {
	return xxx_messageInfo_PurgePicResponse.Size(m)
}
func (m *PurgePicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgePicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PurgePicResponse proto.InternalMessageInfo

type SoftDeletePicRequest struct {
	PicId                string               `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	Details              string               `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Reason               DeletionReason       `protobuf:"varint,3,opt,name=reason,proto3,enum=pixur.api.DeletionReason" json:"reason,omitempty"`
	DeletionTime         *timestamp.Timestamp `protobuf:"bytes,4,opt,name=deletion_time,json=deletionTime,proto3" json:"deletion_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SoftDeletePicRequest) Reset()         { *m = SoftDeletePicRequest{} }
func (m *SoftDeletePicRequest) String() string { return proto.CompactTextString(m) }
func (*SoftDeletePicRequest) ProtoMessage()    {}
func (*SoftDeletePicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{28}
}
func (m *SoftDeletePicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoftDeletePicRequest.Unmarshal(m, b)
}
func (m *SoftDeletePicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoftDeletePicRequest.Marshal(b, m, deterministic)
}
func (dst *SoftDeletePicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoftDeletePicRequest.Merge(dst, src)
}
func (m *SoftDeletePicRequest) XXX_Size() int {
	return xxx_messageInfo_SoftDeletePicRequest.Size(m)
}
func (m *SoftDeletePicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SoftDeletePicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SoftDeletePicRequest proto.InternalMessageInfo

func (m *SoftDeletePicRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *SoftDeletePicRequest) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *SoftDeletePicRequest) GetReason() DeletionReason {
	if m != nil {
		return m.Reason
	}
	return DeletionReason_UNKNOWN
}

func (m *SoftDeletePicRequest) GetDeletionTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeletionTime
	}
	return nil
}

type SoftDeletePicResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SoftDeletePicResponse) Reset()         { *m = SoftDeletePicResponse{} }
func (m *SoftDeletePicResponse) String() string { return proto.CompactTextString(m) }
func (*SoftDeletePicResponse) ProtoMessage()    {}
func (*SoftDeletePicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{29}
}
func (m *SoftDeletePicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoftDeletePicResponse.Unmarshal(m, b)
}
func (m *SoftDeletePicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoftDeletePicResponse.Marshal(b, m, deterministic)
}
func (dst *SoftDeletePicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoftDeletePicResponse.Merge(dst, src)
}
func (m *SoftDeletePicResponse) XXX_Size() int {
	return xxx_messageInfo_SoftDeletePicResponse.Size(m)
}
func (m *SoftDeletePicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SoftDeletePicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SoftDeletePicResponse proto.InternalMessageInfo

type UpsertPicRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Md5Hash              []byte   `protobuf:"bytes,4,opt,name=md5_hash,json=md5Hash,proto3" json:"md5_hash,omitempty"`
	Tag                  []string `protobuf:"bytes,5,rep,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicRequest) Reset()         { *m = UpsertPicRequest{} }
func (m *UpsertPicRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPicRequest) ProtoMessage()    {}
func (*UpsertPicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{30}
}
func (m *UpsertPicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicRequest.Unmarshal(m, b)
}
func (m *UpsertPicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicRequest.Marshal(b, m, deterministic)
}
func (dst *UpsertPicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicRequest.Merge(dst, src)
}
func (m *UpsertPicRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPicRequest.Size(m)
}
func (m *UpsertPicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicRequest proto.InternalMessageInfo

func (m *UpsertPicRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *UpsertPicRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpsertPicRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpsertPicRequest) GetMd5Hash() []byte {
	if m != nil {
		return m.Md5Hash
	}
	return nil
}

func (m *UpsertPicRequest) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

type UpsertPicResponse struct {
	Pic                  *Pic     `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicResponse) Reset()         { *m = UpsertPicResponse{} }
func (m *UpsertPicResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPicResponse) ProtoMessage()    {}
func (*UpsertPicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{31}
}
func (m *UpsertPicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicResponse.Unmarshal(m, b)
}
func (m *UpsertPicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicResponse.Marshal(b, m, deterministic)
}
func (dst *UpsertPicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicResponse.Merge(dst, src)
}
func (m *UpsertPicResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPicResponse.Size(m)
}
func (m *UpsertPicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicResponse proto.InternalMessageInfo

func (m *UpsertPicResponse) GetPic() *Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type CreateUserRequest struct {
	// ident is the unique identity of the user being created, usually an email address
	Ident string `protobuf:"bytes,1,opt,name=ident,proto3" json:"ident,omitempty"`
	// secret is the secret string used to authenticate the user, usually a password
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{32}
}
func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (dst *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(dst, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *CreateUserRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type CreateUserResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserResponse) Reset()         { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()    {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{33}
}
func (m *CreateUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserResponse.Unmarshal(m, b)
}
func (m *CreateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserResponse.Marshal(b, m, deterministic)
}
func (dst *CreateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserResponse.Merge(dst, src)
}
func (m *CreateUserResponse) XXX_Size() int {
	return xxx_messageInfo_CreateUserResponse.Size(m)
}
func (m *CreateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserResponse proto.InternalMessageInfo

type GetRefreshTokenRequest struct {
	// ident is the unique identity of the user being created, usually an email address
	Ident string `protobuf:"bytes,1,opt,name=ident,proto3" json:"ident,omitempty"`
	// secret is the secret string used to authenticate the user, usually a password
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	RefreshToken         string   `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRefreshTokenRequest) Reset()         { *m = GetRefreshTokenRequest{} }
func (m *GetRefreshTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetRefreshTokenRequest) ProtoMessage()    {}
func (*GetRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{34}
}
func (m *GetRefreshTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRefreshTokenRequest.Unmarshal(m, b)
}
func (m *GetRefreshTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRefreshTokenRequest.Marshal(b, m, deterministic)
}
func (dst *GetRefreshTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRefreshTokenRequest.Merge(dst, src)
}
func (m *GetRefreshTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetRefreshTokenRequest.Size(m)
}
func (m *GetRefreshTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRefreshTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRefreshTokenRequest proto.InternalMessageInfo

func (m *GetRefreshTokenRequest) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *GetRefreshTokenRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *GetRefreshTokenRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type GetRefreshTokenResponse struct {
	RefreshToken         string      `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	AuthToken            string      `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	PixToken             string      `protobuf:"bytes,5,opt,name=pix_token,json=pixToken,proto3" json:"pix_token,omitempty"`
	RefreshPayload       *PwtPayload `protobuf:"bytes,3,opt,name=refresh_payload,json=refreshPayload,proto3" json:"refresh_payload,omitempty"`
	AuthPayload          *PwtPayload `protobuf:"bytes,4,opt,name=auth_payload,json=authPayload,proto3" json:"auth_payload,omitempty"`
	PixPayload           *PwtPayload `protobuf:"bytes,6,opt,name=pix_payload,json=pixPayload,proto3" json:"pix_payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRefreshTokenResponse) Reset()         { *m = GetRefreshTokenResponse{} }
func (m *GetRefreshTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GetRefreshTokenResponse) ProtoMessage()    {}
func (*GetRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{35}
}
func (m *GetRefreshTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRefreshTokenResponse.Unmarshal(m, b)
}
func (m *GetRefreshTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRefreshTokenResponse.Marshal(b, m, deterministic)
}
func (dst *GetRefreshTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRefreshTokenResponse.Merge(dst, src)
}
func (m *GetRefreshTokenResponse) XXX_Size() int {
	return xxx_messageInfo_GetRefreshTokenResponse.Size(m)
}
func (m *GetRefreshTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRefreshTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRefreshTokenResponse proto.InternalMessageInfo

func (m *GetRefreshTokenResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *GetRefreshTokenResponse) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *GetRefreshTokenResponse) GetPixToken() string {
	if m != nil {
		return m.PixToken
	}
	return ""
}

func (m *GetRefreshTokenResponse) GetRefreshPayload() *PwtPayload {
	if m != nil {
		return m.RefreshPayload
	}
	return nil
}

func (m *GetRefreshTokenResponse) GetAuthPayload() *PwtPayload {
	if m != nil {
		return m.AuthPayload
	}
	return nil
}

func (m *GetRefreshTokenResponse) GetPixPayload() *PwtPayload {
	if m != nil {
		return m.PixPayload
	}
	return nil
}

type PwtHeader struct {
	Algorithm            PwtHeader_Algorithm `protobuf:"varint,1,opt,name=algorithm,proto3,enum=pixur.api.PwtHeader_Algorithm" json:"algorithm,omitempty"`
	Version              int64               `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PwtHeader) Reset()         { *m = PwtHeader{} }
func (m *PwtHeader) String() string { return proto.CompactTextString(m) }
func (*PwtHeader) ProtoMessage()    {}
func (*PwtHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{36}
}
func (m *PwtHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PwtHeader.Unmarshal(m, b)
}
func (m *PwtHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PwtHeader.Marshal(b, m, deterministic)
}
func (dst *PwtHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PwtHeader.Merge(dst, src)
}
func (m *PwtHeader) XXX_Size() int {
	return xxx_messageInfo_PwtHeader.Size(m)
}
func (m *PwtHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PwtHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PwtHeader proto.InternalMessageInfo

func (m *PwtHeader) GetAlgorithm() PwtHeader_Algorithm {
	if m != nil {
		return m.Algorithm
	}
	return PwtHeader_UNKNOWN
}

func (m *PwtHeader) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type PwtPayload struct {
	Subject   string               `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	NotBefore *timestamp.Timestamp `protobuf:"bytes,2,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
	// represents when this token should be reverified.  Optional.
	SoftNotAfter         *timestamp.Timestamp `protobuf:"bytes,6,opt,name=soft_not_after,json=softNotAfter,proto3" json:"soft_not_after,omitempty"`
	Issuer               string               `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	TokenId              int64                `protobuf:"varint,5,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	TokenParentId        int64                `protobuf:"varint,8,opt,name=token_parent_id,json=tokenParentId,proto3" json:"token_parent_id,omitempty"`
	Type                 PwtPayload_Type      `protobuf:"varint,7,opt,name=type,proto3,enum=pixur.api.PwtPayload_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PwtPayload) Reset()         { *m = PwtPayload{} }
func (m *PwtPayload) String() string { return proto.CompactTextString(m) }
func (*PwtPayload) ProtoMessage()    {}
func (*PwtPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{37}
}
func (m *PwtPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PwtPayload.Unmarshal(m, b)
}
func (m *PwtPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PwtPayload.Marshal(b, m, deterministic)
}
func (dst *PwtPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PwtPayload.Merge(dst, src)
}
func (m *PwtPayload) XXX_Size() int {
	return xxx_messageInfo_PwtPayload.Size(m)
}
func (m *PwtPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_PwtPayload.DiscardUnknown(m)
}

var xxx_messageInfo_PwtPayload proto.InternalMessageInfo

func (m *PwtPayload) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *PwtPayload) GetNotBefore() *timestamp.Timestamp {
	if m != nil {
		return m.NotBefore
	}
	return nil
}

func (m *PwtPayload) GetNotAfter() *timestamp.Timestamp {
	if m != nil {
		return m.NotAfter
	}
	return nil
}

func (m *PwtPayload) GetSoftNotAfter() *timestamp.Timestamp {
	if m != nil {
		return m.SoftNotAfter
	}
	return nil
}

func (m *PwtPayload) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *PwtPayload) GetTokenId() int64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *PwtPayload) GetTokenParentId() int64 {
	if m != nil {
		return m.TokenParentId
	}
	return 0
}

func (m *PwtPayload) GetType() PwtPayload_Type {
	if m != nil {
		return m.Type
	}
	return PwtPayload_UNKNOWN
}

type AddPicCommentRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	CommentParentId      string   `protobuf:"bytes,2,opt,name=comment_parent_id,json=commentParentId,proto3" json:"comment_parent_id,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPicCommentRequest) Reset()         { *m = AddPicCommentRequest{} }
func (m *AddPicCommentRequest) String() string { return proto.CompactTextString(m) }
func (*AddPicCommentRequest) ProtoMessage()    {}
func (*AddPicCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{38}
}
func (m *AddPicCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicCommentRequest.Unmarshal(m, b)
}
func (m *AddPicCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicCommentRequest.Marshal(b, m, deterministic)
}
func (dst *AddPicCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicCommentRequest.Merge(dst, src)
}
func (m *AddPicCommentRequest) XXX_Size() int {
	return xxx_messageInfo_AddPicCommentRequest.Size(m)
}
func (m *AddPicCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicCommentRequest proto.InternalMessageInfo

func (m *AddPicCommentRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *AddPicCommentRequest) GetCommentParentId() string {
	if m != nil {
		return m.CommentParentId
	}
	return ""
}

func (m *AddPicCommentRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type AddPicCommentResponse struct {
	Comment              *PicComment `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddPicCommentResponse) Reset()         { *m = AddPicCommentResponse{} }
func (m *AddPicCommentResponse) String() string { return proto.CompactTextString(m) }
func (*AddPicCommentResponse) ProtoMessage()    {}
func (*AddPicCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{39}
}
func (m *AddPicCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicCommentResponse.Unmarshal(m, b)
}
func (m *AddPicCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicCommentResponse.Marshal(b, m, deterministic)
}
func (dst *AddPicCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicCommentResponse.Merge(dst, src)
}
func (m *AddPicCommentResponse) XXX_Size() int {
	return xxx_messageInfo_AddPicCommentResponse.Size(m)
}
func (m *AddPicCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicCommentResponse proto.InternalMessageInfo

func (m *AddPicCommentResponse) GetComment() *PicComment {
	if m != nil {
		return m.Comment
	}
	return nil
}

type DeleteTokenRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTokenRequest) Reset()         { *m = DeleteTokenRequest{} }
func (m *DeleteTokenRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTokenRequest) ProtoMessage()    {}
func (*DeleteTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{40}
}
func (m *DeleteTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTokenRequest.Unmarshal(m, b)
}
func (m *DeleteTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTokenRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTokenRequest.Merge(dst, src)
}
func (m *DeleteTokenRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTokenRequest.Size(m)
}
func (m *DeleteTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTokenRequest proto.InternalMessageInfo

type DeleteTokenResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTokenResponse) Reset()         { *m = DeleteTokenResponse{} }
func (m *DeleteTokenResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTokenResponse) ProtoMessage()    {}
func (*DeleteTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{41}
}
func (m *DeleteTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTokenResponse.Unmarshal(m, b)
}
func (m *DeleteTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTokenResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTokenResponse.Merge(dst, src)
}
func (m *DeleteTokenResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTokenResponse.Size(m)
}
func (m *DeleteTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTokenResponse proto.InternalMessageInfo

type UpsertPicVoteRequest struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// Optional.   Not necessary when creating for the first time.
	Version              int64        `protobuf:"fixed64,3,opt,name=version,proto3" json:"version,omitempty"`
	Vote                 PicVote_Vote `protobuf:"varint,2,opt,name=vote,proto3,enum=pixur.api.PicVote_Vote" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpsertPicVoteRequest) Reset()         { *m = UpsertPicVoteRequest{} }
func (m *UpsertPicVoteRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPicVoteRequest) ProtoMessage()    {}
func (*UpsertPicVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{42}
}
func (m *UpsertPicVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicVoteRequest.Unmarshal(m, b)
}
func (m *UpsertPicVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicVoteRequest.Marshal(b, m, deterministic)
}
func (dst *UpsertPicVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicVoteRequest.Merge(dst, src)
}
func (m *UpsertPicVoteRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPicVoteRequest.Size(m)
}
func (m *UpsertPicVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicVoteRequest proto.InternalMessageInfo

func (m *UpsertPicVoteRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *UpsertPicVoteRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UpsertPicVoteRequest) GetVote() PicVote_Vote {
	if m != nil {
		return m.Vote
	}
	return PicVote_UNKNOWN
}

type UpsertPicVoteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicVoteResponse) Reset()         { *m = UpsertPicVoteResponse{} }
func (m *UpsertPicVoteResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPicVoteResponse) ProtoMessage()    {}
func (*UpsertPicVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{43}
}
func (m *UpsertPicVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicVoteResponse.Unmarshal(m, b)
}
func (m *UpsertPicVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicVoteResponse.Marshal(b, m, deterministic)
}
func (dst *UpsertPicVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicVoteResponse.Merge(dst, src)
}
func (m *UpsertPicVoteResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPicVoteResponse.Size(m)
}
func (m *UpsertPicVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicVoteResponse proto.InternalMessageInfo

type LookupPicVoteRequest struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// Optional.  Uses auth token if not specified.
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicVoteRequest) Reset()         { *m = LookupPicVoteRequest{} }
func (m *LookupPicVoteRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicVoteRequest) ProtoMessage()    {}
func (*LookupPicVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{44}
}
func (m *LookupPicVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicVoteRequest.Unmarshal(m, b)
}
func (m *LookupPicVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicVoteRequest.Marshal(b, m, deterministic)
}
func (dst *LookupPicVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicVoteRequest.Merge(dst, src)
}
func (m *LookupPicVoteRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicVoteRequest.Size(m)
}
func (m *LookupPicVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicVoteRequest proto.InternalMessageInfo

func (m *LookupPicVoteRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *LookupPicVoteRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LookupPicVoteResponse struct {
	Vote                 *PicVote `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicVoteResponse) Reset()         { *m = LookupPicVoteResponse{} }
func (m *LookupPicVoteResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicVoteResponse) ProtoMessage()    {}
func (*LookupPicVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{45}
}
func (m *LookupPicVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicVoteResponse.Unmarshal(m, b)
}
func (m *LookupPicVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicVoteResponse.Marshal(b, m, deterministic)
}
func (dst *LookupPicVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicVoteResponse.Merge(dst, src)
}
func (m *LookupPicVoteResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicVoteResponse.Size(m)
}
func (m *LookupPicVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicVoteResponse proto.InternalMessageInfo

func (m *LookupPicVoteResponse) GetVote() *PicVote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type LookupPicFileRequest struct {
	PicFileId            string         `protobuf:"bytes,1,opt,name=pic_file_id,json=picFileId,proto3" json:"pic_file_id,omitempty"`
	Format               PicFile_Format `protobuf:"varint,2,opt,name=format,proto3,enum=pixur.api.PicFile_Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LookupPicFileRequest) Reset()         { *m = LookupPicFileRequest{} }
func (m *LookupPicFileRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicFileRequest) ProtoMessage()    {}
func (*LookupPicFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{46}
}
func (m *LookupPicFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicFileRequest.Unmarshal(m, b)
}
func (m *LookupPicFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicFileRequest.Marshal(b, m, deterministic)
}
func (dst *LookupPicFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicFileRequest.Merge(dst, src)
}
func (m *LookupPicFileRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicFileRequest.Size(m)
}
func (m *LookupPicFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicFileRequest proto.InternalMessageInfo

func (m *LookupPicFileRequest) GetPicFileId() string {
	if m != nil {
		return m.PicFileId
	}
	return ""
}

func (m *LookupPicFileRequest) GetFormat() PicFile_Format {
	if m != nil {
		return m.Format
	}
	return PicFile_UNKNOWN
}

type LookupPicFileResponse struct {
	PicFile              *PicFile `protobuf:"bytes,1,opt,name=pic_file,json=picFile,proto3" json:"pic_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicFileResponse) Reset()         { *m = LookupPicFileResponse{} }
func (m *LookupPicFileResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicFileResponse) ProtoMessage()    {}
func (*LookupPicFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{47}
}
func (m *LookupPicFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicFileResponse.Unmarshal(m, b)
}
func (m *LookupPicFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicFileResponse.Marshal(b, m, deterministic)
}
func (dst *LookupPicFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicFileResponse.Merge(dst, src)
}
func (m *LookupPicFileResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicFileResponse.Size(m)
}
func (m *LookupPicFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicFileResponse proto.InternalMessageInfo

func (m *LookupPicFileResponse) GetPicFile() *PicFile {
	if m != nil {
		return m.PicFile
	}
	return nil
}

type ReadPicFileRequest struct {
	PicFileId string         `protobuf:"bytes,1,opt,name=pic_file_id,json=picFileId,proto3" json:"pic_file_id,omitempty"`
	Format    PicFile_Format `protobuf:"varint,2,opt,name=format,proto3,enum=pixur.api.PicFile_Format" json:"format,omitempty"`
	// The offset into the file to start reading at.  Required
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The maximum number of bytes to read.   Maybe be 0.
	Limit                int64    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPicFileRequest) Reset()         { *m = ReadPicFileRequest{} }
func (m *ReadPicFileRequest) String() string { return proto.CompactTextString(m) }
func (*ReadPicFileRequest) ProtoMessage()    {}
func (*ReadPicFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{48}
}
func (m *ReadPicFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPicFileRequest.Unmarshal(m, b)
}
func (m *ReadPicFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPicFileRequest.Marshal(b, m, deterministic)
}
func (dst *ReadPicFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPicFileRequest.Merge(dst, src)
}
func (m *ReadPicFileRequest) XXX_Size() int {
	return xxx_messageInfo_ReadPicFileRequest.Size(m)
}
func (m *ReadPicFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPicFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPicFileRequest proto.InternalMessageInfo

func (m *ReadPicFileRequest) GetPicFileId() string {
	if m != nil {
		return m.PicFileId
	}
	return ""
}

func (m *ReadPicFileRequest) GetFormat() PicFile_Format {
	if m != nil {
		return m.Format
	}
	return PicFile_UNKNOWN
}

func (m *ReadPicFileRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadPicFileRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadPicFileResponse struct {
	// may be empty
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// indicates that the end of the pic has been reached.
	Eof                  bool     `protobuf:"varint,2,opt,name=eof,proto3" json:"eof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPicFileResponse) Reset()         { *m = ReadPicFileResponse{} }
func (m *ReadPicFileResponse) String() string { return proto.CompactTextString(m) }
func (*ReadPicFileResponse) ProtoMessage()    {}
func (*ReadPicFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{49}
}
func (m *ReadPicFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPicFileResponse.Unmarshal(m, b)
}
func (m *ReadPicFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPicFileResponse.Marshal(b, m, deterministic)
}
func (dst *ReadPicFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPicFileResponse.Merge(dst, src)
}
func (m *ReadPicFileResponse) XXX_Size() int {
	return xxx_messageInfo_ReadPicFileResponse.Size(m)
}
func (m *ReadPicFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPicFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPicFileResponse proto.InternalMessageInfo

func (m *ReadPicFileResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadPicFileResponse) GetEof() bool {
	if m != nil {
		return m.Eof
	}
	return false
}

type LookupPicExtensionRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicExtensionRequest) Reset()         { *m = LookupPicExtensionRequest{} }
func (m *LookupPicExtensionRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicExtensionRequest) ProtoMessage()    {}
func (*LookupPicExtensionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{50}
}
func (m *LookupPicExtensionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicExtensionRequest.Unmarshal(m, b)
}
func (m *LookupPicExtensionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicExtensionRequest.Marshal(b, m, deterministic)
}
func (dst *LookupPicExtensionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicExtensionRequest.Merge(dst, src)
}
func (m *LookupPicExtensionRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicExtensionRequest.Size(m)
}
func (m *LookupPicExtensionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicExtensionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicExtensionRequest proto.InternalMessageInfo

func (m *LookupPicExtensionRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type LookupPicExtensionResponse struct {
	Ext                  map[string]*any.Any `protobuf:"bytes,1,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LookupPicExtensionResponse) Reset()         { *m = LookupPicExtensionResponse{} }
func (m *LookupPicExtensionResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicExtensionResponse) ProtoMessage()    {}
func (*LookupPicExtensionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{51}
}
func (m *LookupPicExtensionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicExtensionResponse.Unmarshal(m, b)
}
func (m *LookupPicExtensionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicExtensionResponse.Marshal(b, m, deterministic)
}
func (dst *LookupPicExtensionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicExtensionResponse.Merge(dst, src)
}
func (m *LookupPicExtensionResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicExtensionResponse.Size(m)
}
func (m *LookupPicExtensionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicExtensionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicExtensionResponse proto.InternalMessageInfo

func (m *LookupPicExtensionResponse) GetExt() map[string]*any.Any {
	if m != nil {
		return m.Ext
	}
	return nil
}

type ServiceOpts struct {
	// a vaguely defined, but monotonically increasing "version".
	ApiVersion int64 `protobuf:"varint,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// The header key used to when using an auth token.
	AuthTokenHeaderKey string `protobuf:"bytes,2,opt,name=auth_token_header_key,json=authTokenHeaderKey,proto3" json:"auth_token_header_key,omitempty"`
	// The header key used to when using a pix token.
	PixTokenHeaderKey string `protobuf:"bytes,3,opt,name=pix_token_header_key,json=pixTokenHeaderKey,proto3" json:"pix_token_header_key,omitempty"`
	// Used in responses (e.g. ReadPicFile) to indicate suggested http headers.
	// See pixur.api.HttpHeader
	HttpHeaderKey        string   `protobuf:"bytes,4,opt,name=http_header_key,json=httpHeaderKey,proto3" json:"http_header_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceOpts) Reset()         { *m = ServiceOpts{} }
func (m *ServiceOpts) String() string { return proto.CompactTextString(m) }
func (*ServiceOpts) ProtoMessage()    {}
func (*ServiceOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{52}
}
func (m *ServiceOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceOpts.Unmarshal(m, b)
}
func (m *ServiceOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceOpts.Marshal(b, m, deterministic)
}
func (dst *ServiceOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceOpts.Merge(dst, src)
}
func (m *ServiceOpts) XXX_Size() int {
	return xxx_messageInfo_ServiceOpts.Size(m)
}
func (m *ServiceOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceOpts.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceOpts proto.InternalMessageInfo

func (m *ServiceOpts) GetApiVersion() int64 {
	if m != nil {
		return m.ApiVersion
	}
	return 0
}

func (m *ServiceOpts) GetAuthTokenHeaderKey() string {
	if m != nil {
		return m.AuthTokenHeaderKey
	}
	return ""
}

func (m *ServiceOpts) GetPixTokenHeaderKey() string {
	if m != nil {
		return m.PixTokenHeaderKey
	}
	return ""
}

func (m *ServiceOpts) GetHttpHeaderKey() string {
	if m != nil {
		return m.HttpHeaderKey
	}
	return ""
}

// HttpHeader is a message included as a header on some responses.  It is only a suggestion.
// See pixur.api.ServiceOpts.http_header_key
type HttpHeader struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpHeader) Reset()         { *m = HttpHeader{} }
func (m *HttpHeader) String() string { return proto.CompactTextString(m) }
func (*HttpHeader) ProtoMessage()    {}
func (*HttpHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_d8439553f3ff8f4f, []int{53}
}
func (m *HttpHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpHeader.Unmarshal(m, b)
}
func (m *HttpHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpHeader.Marshal(b, m, deterministic)
}
func (dst *HttpHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpHeader.Merge(dst, src)
}
func (m *HttpHeader) XXX_Size() int {
	return xxx_messageInfo_HttpHeader.Size(m)
}
func (m *HttpHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpHeader.DiscardUnknown(m)
}

var xxx_messageInfo_HttpHeader proto.InternalMessageInfo

func (m *HttpHeader) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HttpHeader) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

var E_PixurServiceOpts = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.ServiceOptions)(nil),
	ExtensionType: (*ServiceOpts)(nil),
	Field:         65537,
	Name:          "pixur.api.pixur_service_opts",
	Tag:           "bytes,65537,opt,name=pixur_service_opts,json=pixurServiceOpts",
	Filename:      "api.proto",
}

func init() {
	proto.RegisterType((*Pic)(nil), "pixur.api.Pic")
	proto.RegisterType((*PicFile)(nil), "pixur.api.PicFile")
	proto.RegisterType((*PicTag)(nil), "pixur.api.PicTag")
	proto.RegisterType((*PicComment)(nil), "pixur.api.PicComment")
	proto.RegisterType((*PicVote)(nil), "pixur.api.PicVote")
	proto.RegisterType((*User)(nil), "pixur.api.User")
	proto.RegisterType((*Capability)(nil), "pixur.api.Capability")
	proto.RegisterType((*LookupUserRequest)(nil), "pixur.api.LookupUserRequest")
	proto.RegisterType((*LookupUserResponse)(nil), "pixur.api.LookupUserResponse")
	proto.RegisterType((*UpdateUserRequest)(nil), "pixur.api.UpdateUserRequest")
	proto.RegisterType((*UpdateUserRequest_ChangeIdent)(nil), "pixur.api.UpdateUserRequest.ChangeIdent")
	proto.RegisterType((*UpdateUserRequest_ChangeSecret)(nil), "pixur.api.UpdateUserRequest.ChangeSecret")
	proto.RegisterType((*UpdateUserRequest_ChangeCapability)(nil), "pixur.api.UpdateUserRequest.ChangeCapability")
	proto.RegisterType((*UpdateUserResponse)(nil), "pixur.api.UpdateUserResponse")
	proto.RegisterType((*PicCommentTree)(nil), "pixur.api.PicCommentTree")
	proto.RegisterType((*LookupPicDetailsRequest)(nil), "pixur.api.LookupPicDetailsRequest")
	proto.RegisterType((*LookupPicDetailsResponse)(nil), "pixur.api.LookupPicDetailsResponse")
	proto.RegisterType((*FindIndexPicsRequest)(nil), "pixur.api.FindIndexPicsRequest")
	proto.RegisterType((*FindIndexPicsResponse)(nil), "pixur.api.FindIndexPicsResponse")
	proto.RegisterType((*FindSchedPicsRequest)(nil), "pixur.api.FindSchedPicsRequest")
	proto.RegisterType((*FindSchedPicsResponse)(nil), "pixur.api.FindSchedPicsResponse")
	proto.RegisterType((*AddPicTagsRequest)(nil), "pixur.api.AddPicTagsRequest")
	proto.RegisterType((*AddPicTagsResponse)(nil), "pixur.api.AddPicTagsResponse")
	proto.RegisterType((*CreatePicRequest)(nil), "pixur.api.CreatePicRequest")
	proto.RegisterType((*CreatePicResponse)(nil), "pixur.api.CreatePicResponse")
	proto.RegisterType((*FindSimilarPicsRequest)(nil), "pixur.api.FindSimilarPicsRequest")
	proto.RegisterType((*FindSimilarPicsResponse)(nil), "pixur.api.FindSimilarPicsResponse")
	proto.RegisterType((*IncrementViewCountRequest)(nil), "pixur.api.IncrementViewCountRequest")
	proto.RegisterType((*IncrementViewCountResponse)(nil), "pixur.api.IncrementViewCountResponse")
	proto.RegisterType((*PurgePicRequest)(nil), "pixur.api.PurgePicRequest")
	proto.RegisterType((*PurgePicResponse)(nil), "pixur.api.PurgePicResponse")
	proto.RegisterType((*SoftDeletePicRequest)(nil), "pixur.api.SoftDeletePicRequest")
	proto.RegisterType((*SoftDeletePicResponse)(nil), "pixur.api.SoftDeletePicResponse")
	proto.RegisterType((*UpsertPicRequest)(nil), "pixur.api.UpsertPicRequest")
	proto.RegisterType((*UpsertPicResponse)(nil), "pixur.api.UpsertPicResponse")
	proto.RegisterType((*CreateUserRequest)(nil), "pixur.api.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "pixur.api.CreateUserResponse")
	proto.RegisterType((*GetRefreshTokenRequest)(nil), "pixur.api.GetRefreshTokenRequest")
	proto.RegisterType((*GetRefreshTokenResponse)(nil), "pixur.api.GetRefreshTokenResponse")
	proto.RegisterType((*PwtHeader)(nil), "pixur.api.PwtHeader")
	proto.RegisterType((*PwtPayload)(nil), "pixur.api.PwtPayload")
	proto.RegisterType((*AddPicCommentRequest)(nil), "pixur.api.AddPicCommentRequest")
	proto.RegisterType((*AddPicCommentResponse)(nil), "pixur.api.AddPicCommentResponse")
	proto.RegisterType((*DeleteTokenRequest)(nil), "pixur.api.DeleteTokenRequest")
	proto.RegisterType((*DeleteTokenResponse)(nil), "pixur.api.DeleteTokenResponse")
	proto.RegisterType((*UpsertPicVoteRequest)(nil), "pixur.api.UpsertPicVoteRequest")
	proto.RegisterType((*UpsertPicVoteResponse)(nil), "pixur.api.UpsertPicVoteResponse")
	proto.RegisterType((*LookupPicVoteRequest)(nil), "pixur.api.LookupPicVoteRequest")
	proto.RegisterType((*LookupPicVoteResponse)(nil), "pixur.api.LookupPicVoteResponse")
	proto.RegisterType((*LookupPicFileRequest)(nil), "pixur.api.LookupPicFileRequest")
	proto.RegisterType((*LookupPicFileResponse)(nil), "pixur.api.LookupPicFileResponse")
	proto.RegisterType((*ReadPicFileRequest)(nil), "pixur.api.ReadPicFileRequest")
	proto.RegisterType((*ReadPicFileResponse)(nil), "pixur.api.ReadPicFileResponse")
	proto.RegisterType((*LookupPicExtensionRequest)(nil), "pixur.api.LookupPicExtensionRequest")
	proto.RegisterType((*LookupPicExtensionResponse)(nil), "pixur.api.LookupPicExtensionResponse")
	proto.RegisterMapType((map[string]*any.Any)(nil), "pixur.api.LookupPicExtensionResponse.ExtEntry")
	proto.RegisterType((*ServiceOpts)(nil), "pixur.api.ServiceOpts")
	proto.RegisterType((*HttpHeader)(nil), "pixur.api.HttpHeader")
	proto.RegisterEnum("pixur.api.DeletionReason", DeletionReason_name, DeletionReason_value)
	proto.RegisterEnum("pixur.api.PicFile_Format", PicFile_Format_name, PicFile_Format_value)
	proto.RegisterEnum("pixur.api.PicVote_Vote", PicVote_Vote_name, PicVote_Vote_value)
	proto.RegisterEnum("pixur.api.Capability_Cap", Capability_Cap_name, Capability_Cap_value)
	proto.RegisterEnum("pixur.api.PwtHeader_Algorithm", PwtHeader_Algorithm_name, PwtHeader_Algorithm_value)
	proto.RegisterEnum("pixur.api.PwtPayload_Type", PwtPayload_Type_name, PwtPayload_Type_value)
	proto.RegisterExtension(E_PixurServiceOpts)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PixurServiceClient is the client API for PixurService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PixurServiceClient interface {
	AddPicComment(ctx context.Context, in *AddPicCommentRequest, opts ...grpc.CallOption) (*AddPicCommentResponse, error)
	AddPicTags(ctx context.Context, in *AddPicTagsRequest, opts ...grpc.CallOption) (*AddPicTagsResponse, error)
	CreatePic(ctx context.Context, in *CreatePicRequest, opts ...grpc.CallOption) (*CreatePicResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	DeleteToken(ctx context.Context, in *DeleteTokenRequest, opts ...grpc.CallOption) (*DeleteTokenResponse, error)
	FindIndexPics(ctx context.Context, in *FindIndexPicsRequest, opts ...grpc.CallOption) (*FindIndexPicsResponse, error)
	FindSchedPics(ctx context.Context, in *FindSchedPicsRequest, opts ...grpc.CallOption) (*FindSchedPicsResponse, error)
	FindSimilarPics(ctx context.Context, in *FindSimilarPicsRequest, opts ...grpc.CallOption) (*FindSimilarPicsResponse, error)
	GetRefreshToken(ctx context.Context, in *GetRefreshTokenRequest, opts ...grpc.CallOption) (*GetRefreshTokenResponse, error)
	IncrementViewCount(ctx context.Context, in *IncrementViewCountRequest, opts ...grpc.CallOption) (*IncrementViewCountResponse, error)
	LookupPicDetails(ctx context.Context, in *LookupPicDetailsRequest, opts ...grpc.CallOption) (*LookupPicDetailsResponse, error)
	LookupPicExtension(ctx context.Context, in *LookupPicExtensionRequest, opts ...grpc.CallOption) (*LookupPicExtensionResponse, error)
	LookupPicFile(ctx context.Context, in *LookupPicFileRequest, opts ...grpc.CallOption) (*LookupPicFileResponse, error)
	ReadPicFile(ctx context.Context, opts ...grpc.CallOption) (PixurService_ReadPicFileClient, error)
	LookupPicVote(ctx context.Context, in *LookupPicVoteRequest, opts ...grpc.CallOption) (*LookupPicVoteResponse, error)
	LookupUser(ctx context.Context, in *LookupUserRequest, opts ...grpc.CallOption) (*LookupUserResponse, error)
	PurgePic(ctx context.Context, in *PurgePicRequest, opts ...grpc.CallOption) (*PurgePicResponse, error)
	SoftDeletePic(ctx context.Context, in *SoftDeletePicRequest, opts ...grpc.CallOption) (*SoftDeletePicResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	UpsertPic(ctx context.Context, in *UpsertPicRequest, opts ...grpc.CallOption) (*UpsertPicResponse, error)
	UpsertPicVote(ctx context.Context, in *UpsertPicVoteRequest, opts ...grpc.CallOption) (*UpsertPicVoteResponse, error)
}

type pixurServiceClient struct {
	cc *grpc.ClientConn
}

func NewPixurServiceClient(cc *grpc.ClientConn) PixurServiceClient {
	return &pixurServiceClient{cc}
}

func (c *pixurServiceClient) AddPicComment(ctx context.Context, in *AddPicCommentRequest, opts ...grpc.CallOption) (*AddPicCommentResponse, error) {
	out := new(AddPicCommentResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/AddPicComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) AddPicTags(ctx context.Context, in *AddPicTagsRequest, opts ...grpc.CallOption) (*AddPicTagsResponse, error) {
	out := new(AddPicTagsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/AddPicTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) CreatePic(ctx context.Context, in *CreatePicRequest, opts ...grpc.CallOption) (*CreatePicResponse, error) {
	out := new(CreatePicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/CreatePic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) DeleteToken(ctx context.Context, in *DeleteTokenRequest, opts ...grpc.CallOption) (*DeleteTokenResponse, error) {
	out := new(DeleteTokenResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/DeleteToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindIndexPics(ctx context.Context, in *FindIndexPicsRequest, opts ...grpc.CallOption) (*FindIndexPicsResponse, error) {
	out := new(FindIndexPicsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindIndexPics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindSchedPics(ctx context.Context, in *FindSchedPicsRequest, opts ...grpc.CallOption) (*FindSchedPicsResponse, error) {
	out := new(FindSchedPicsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindSchedPics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindSimilarPics(ctx context.Context, in *FindSimilarPicsRequest, opts ...grpc.CallOption) (*FindSimilarPicsResponse, error) {
	out := new(FindSimilarPicsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindSimilarPics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) GetRefreshToken(ctx context.Context, in *GetRefreshTokenRequest, opts ...grpc.CallOption) (*GetRefreshTokenResponse, error) {
	out := new(GetRefreshTokenResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/GetRefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) IncrementViewCount(ctx context.Context, in *IncrementViewCountRequest, opts ...grpc.CallOption) (*IncrementViewCountResponse, error) {
	out := new(IncrementViewCountResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/IncrementViewCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicDetails(ctx context.Context, in *LookupPicDetailsRequest, opts ...grpc.CallOption) (*LookupPicDetailsResponse, error) {
	out := new(LookupPicDetailsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicExtension(ctx context.Context, in *LookupPicExtensionRequest, opts ...grpc.CallOption) (*LookupPicExtensionResponse, error) {
	out := new(LookupPicExtensionResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicExtension", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicFile(ctx context.Context, in *LookupPicFileRequest, opts ...grpc.CallOption) (*LookupPicFileResponse, error) {
	out := new(LookupPicFileResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) ReadPicFile(ctx context.Context, opts ...grpc.CallOption) (PixurService_ReadPicFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PixurService_serviceDesc.Streams[0], "/pixur.api.PixurService/ReadPicFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &pixurServiceReadPicFileClient{stream}
	return x, nil
}

type PixurService_ReadPicFileClient interface {
	Send(*ReadPicFileRequest) error
	Recv() (*ReadPicFileResponse, error)
	grpc.ClientStream
}

type pixurServiceReadPicFileClient struct {
	grpc.ClientStream
}

func (x *pixurServiceReadPicFileClient) Send(m *ReadPicFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pixurServiceReadPicFileClient) Recv() (*ReadPicFileResponse, error) {
	m := new(ReadPicFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pixurServiceClient) LookupPicVote(ctx context.Context, in *LookupPicVoteRequest, opts ...grpc.CallOption) (*LookupPicVoteResponse, error) {
	out := new(LookupPicVoteResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupUser(ctx context.Context, in *LookupUserRequest, opts ...grpc.CallOption) (*LookupUserResponse, error) {
	out := new(LookupUserResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) PurgePic(ctx context.Context, in *PurgePicRequest, opts ...grpc.CallOption) (*PurgePicResponse, error) {
	out := new(PurgePicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/PurgePic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) SoftDeletePic(ctx context.Context, in *SoftDeletePicRequest, opts ...grpc.CallOption) (*SoftDeletePicResponse, error) {
	out := new(SoftDeletePicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/SoftDeletePic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpsertPic(ctx context.Context, in *UpsertPicRequest, opts ...grpc.CallOption) (*UpsertPicResponse, error) {
	out := new(UpsertPicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpsertPic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpsertPicVote(ctx context.Context, in *UpsertPicVoteRequest, opts ...grpc.CallOption) (*UpsertPicVoteResponse, error) {
	out := new(UpsertPicVoteResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpsertPicVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PixurServiceServer is the server API for PixurService service.
type PixurServiceServer interface {
	AddPicComment(context.Context, *AddPicCommentRequest) (*AddPicCommentResponse, error)
	AddPicTags(context.Context, *AddPicTagsRequest) (*AddPicTagsResponse, error)
	CreatePic(context.Context, *CreatePicRequest) (*CreatePicResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	DeleteToken(context.Context, *DeleteTokenRequest) (*DeleteTokenResponse, error)
	FindIndexPics(context.Context, *FindIndexPicsRequest) (*FindIndexPicsResponse, error)
	FindSchedPics(context.Context, *FindSchedPicsRequest) (*FindSchedPicsResponse, error)
	FindSimilarPics(context.Context, *FindSimilarPicsRequest) (*FindSimilarPicsResponse, error)
	GetRefreshToken(context.Context, *GetRefreshTokenRequest) (*GetRefreshTokenResponse, error)
	IncrementViewCount(context.Context, *IncrementViewCountRequest) (*IncrementViewCountResponse, error)
	LookupPicDetails(context.Context, *LookupPicDetailsRequest) (*LookupPicDetailsResponse, error)
	LookupPicExtension(context.Context, *LookupPicExtensionRequest) (*LookupPicExtensionResponse, error)
	LookupPicFile(context.Context, *LookupPicFileRequest) (*LookupPicFileResponse, error)
	ReadPicFile(PixurService_ReadPicFileServer) error
	LookupPicVote(context.Context, *LookupPicVoteRequest) (*LookupPicVoteResponse, error)
	LookupUser(context.Context, *LookupUserRequest) (*LookupUserResponse, error)
	PurgePic(context.Context, *PurgePicRequest) (*PurgePicResponse, error)
	SoftDeletePic(context.Context, *SoftDeletePicRequest) (*SoftDeletePicResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	UpsertPic(context.Context, *UpsertPicRequest) (*UpsertPicResponse, error)
	UpsertPicVote(context.Context, *UpsertPicVoteRequest) (*UpsertPicVoteResponse, error)
}

func RegisterPixurServiceServer(s *grpc.Server, srv PixurServiceServer) {
	s.RegisterService(&_PixurService_serviceDesc, srv)
}

func _PixurService_AddPicComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPicCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).AddPicComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/AddPicComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).AddPicComment(ctx, req.(*AddPicCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_AddPicTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPicTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).AddPicTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/AddPicTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).AddPicTags(ctx, req.(*AddPicTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_CreatePic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).CreatePic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/CreatePic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).CreatePic(ctx, req.(*CreatePicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_DeleteToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).DeleteToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/DeleteToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).DeleteToken(ctx, req.(*DeleteTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindIndexPics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindIndexPicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindIndexPics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindIndexPics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindIndexPics(ctx, req.(*FindIndexPicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindSchedPics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSchedPicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindSchedPics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindSchedPics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindSchedPics(ctx, req.(*FindSchedPicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindSimilarPics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSimilarPicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindSimilarPics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindSimilarPics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindSimilarPics(ctx, req.(*FindSimilarPicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_GetRefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).GetRefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/GetRefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).GetRefreshToken(ctx, req.(*GetRefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_IncrementViewCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncrementViewCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).IncrementViewCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/IncrementViewCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).IncrementViewCount(ctx, req.(*IncrementViewCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicDetails(ctx, req.(*LookupPicDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicExtension_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicExtensionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicExtension(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicExtension",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicExtension(ctx, req.(*LookupPicExtensionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicFile(ctx, req.(*LookupPicFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_ReadPicFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PixurServiceServer).ReadPicFile(&pixurServiceReadPicFileServer{stream})
}

type PixurService_ReadPicFileServer interface {
	Send(*ReadPicFileResponse) error
	Recv() (*ReadPicFileRequest, error)
	grpc.ServerStream
}

type pixurServiceReadPicFileServer struct {
	grpc.ServerStream
}

func (x *pixurServiceReadPicFileServer) Send(m *ReadPicFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pixurServiceReadPicFileServer) Recv() (*ReadPicFileRequest, error) {
	m := new(ReadPicFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PixurService_LookupPicVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicVote(ctx, req.(*LookupPicVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupUser(ctx, req.(*LookupUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_PurgePic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurgePicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).PurgePic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/PurgePic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).PurgePic(ctx, req.(*PurgePicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_SoftDeletePic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SoftDeletePicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).SoftDeletePic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/SoftDeletePic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).SoftDeletePic(ctx, req.(*SoftDeletePicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpsertPic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpsertPic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpsertPic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpsertPic(ctx, req.(*UpsertPicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpsertPicVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPicVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpsertPicVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpsertPicVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpsertPicVote(ctx, req.(*UpsertPicVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PixurService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pixur.api.PixurService",
	HandlerType: (*PixurServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPicComment",
			Handler:    _PixurService_AddPicComment_Handler,
		},
		{
			MethodName: "AddPicTags",
			Handler:    _PixurService_AddPicTags_Handler,
		},
		{
			MethodName: "CreatePic",
			Handler:    _PixurService_CreatePic_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _PixurService_CreateUser_Handler,
		},
		{
			MethodName: "DeleteToken",
			Handler:    _PixurService_DeleteToken_Handler,
		},
		{
			MethodName: "FindIndexPics",
			Handler:    _PixurService_FindIndexPics_Handler,
		},
		{
			MethodName: "FindSchedPics",
			Handler:    _PixurService_FindSchedPics_Handler,
		},
		{
			MethodName: "FindSimilarPics",
			Handler:    _PixurService_FindSimilarPics_Handler,
		},
		{
			MethodName: "GetRefreshToken",
			Handler:    _PixurService_GetRefreshToken_Handler,
		},
		{
			MethodName: "IncrementViewCount",
			Handler:    _PixurService_IncrementViewCount_Handler,
		},
		{
			MethodName: "LookupPicDetails",
			Handler:    _PixurService_LookupPicDetails_Handler,
		},
		{
			MethodName: "LookupPicExtension",
			Handler:    _PixurService_LookupPicExtension_Handler,
		},
		{
			MethodName: "LookupPicFile",
			Handler:    _PixurService_LookupPicFile_Handler,
		},
		{
			MethodName: "LookupPicVote",
			Handler:    _PixurService_LookupPicVote_Handler,
		},
		{
			MethodName: "LookupUser",
			Handler:    _PixurService_LookupUser_Handler,
		},
		{
			MethodName: "PurgePic",
			Handler:    _PixurService_PurgePic_Handler,
		},
		{
			MethodName: "SoftDeletePic",
			Handler:    _PixurService_SoftDeletePic_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _PixurService_UpdateUser_Handler,
		},
		{
			MethodName: "UpsertPic",
			Handler:    _PixurService_UpsertPic_Handler,
		},
		{
			MethodName: "UpsertPicVote",
			Handler:    _PixurService_UpsertPicVote_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadPicFile",
			Handler:       _PixurService_ReadPicFile_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_d8439553f3ff8f4f) }

var fileDescriptor_api_d8439553f3ff8f4f = []byte{
	// 2918 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x19, 0x4d, 0x73, 0x23, 0x47,
	0x95, 0xd1, 0xe8, 0xf3, 0xc9, 0x96, 0xc6, 0x1d, 0xdb, 0x2b, 0x6b, 0x3f, 0x62, 0x66, 0xc9, 0x96,
	0xb3, 0xb0, 0xda, 0xc4, 0x61, 0x43, 0x36, 0x09, 0x49, 0xb4, 0xb6, 0xbc, 0x56, 0xe2, 0x95, 0x55,
	0x63, 0xc9, 0x1b, 0xa8, 0xa2, 0xc4, 0x58, 0x6a, 0x4b, 0xc3, 0x4a, 0x9a, 0x61, 0x66, 0xb4, 0x6b,
	0x73, 0x0a, 0x1c, 0x39, 0x51, 0x50, 0x14, 0x55, 0x54, 0x0e, 0x9c, 0xa9, 0x1c, 0xb9, 0x00, 0x57,
	0x8e, 0x54, 0x71, 0xe5, 0x00, 0x37, 0x7e, 0x08, 0xd5, 0x5f, 0x9a, 0x6e, 0x69, 0x64, 0x7b, 0xb3,
	0x45, 0x15, 0x17, 0xd5, 0xf4, 0xfb, 0xea, 0xd7, 0xaf, 0xdf, 0xeb, 0xf7, 0x21, 0xc8, 0xd9, 0x9e,
	0x53, 0xf1, 0x7c, 0x37, 0x74, 0x51, 0xce, 0x73, 0xce, 0x26, 0x7e, 0xc5, 0xf6, 0x9c, 0xf2, 0x46,
	0xdf, 0x75, 0xfb, 0x43, 0x7c, 0x9f, 0x22, 0x4e, 0x26, 0xa7, 0xf7, 0xed, 0xf1, 0x39, 0xa3, 0x2a,
	0x6f, 0xce, 0xa2, 0x7a, 0x38, 0xe8, 0xfa, 0x8e, 0x17, 0xba, 0x3e, 0xa7, 0xb8, 0x35, 0x47, 0x31,
	0xf1, 0xed, 0xd0, 0x71, 0xc7, 0x1c, 0xff, 0xfa, 0x2c, 0x3e, 0x74, 0x46, 0x38, 0x08, 0xed, 0x91,
	0xc7, 0x08, 0xcc, 0xdf, 0x25, 0x41, 0x6f, 0x3a, 0x5d, 0x54, 0x80, 0x84, 0xd3, 0x2b, 0x69, 0x9b,
	0xda, 0x56, 0xce, 0x4a, 0x38, 0x3d, 0xb4, 0x0a, 0xa9, 0x17, 0x4e, 0x2f, 0x1c, 0x94, 0x12, 0x9b,
	0xda, 0x56, 0xca, 0x62, 0x0b, 0xb4, 0x0e, 0xe9, 0x01, 0x76, 0xfa, 0x83, 0xb0, 0xa4, 0x53, 0x30,
	0x5f, 0xa1, 0x12, 0x64, 0x9e, 0x63, 0x3f, 0x70, 0xdc, 0x71, 0x29, 0xb9, 0xa9, 0x6d, 0x19, 0x96,
	0x58, 0xa2, 0x75, 0x48, 0x86, 0xe7, 0x1e, 0x2e, 0xa5, 0x88, 0xe4, 0x47, 0x89, 0x92, 0x66, 0xd1,
	0x35, 0xfa, 0x3e, 0x2c, 0x75, 0x7d, 0x6c, 0x87, 0xb8, 0xd7, 0x21, 0x2a, 0x95, 0x0a, 0x9b, 0xda,
	0x56, 0x7e, 0xbb, 0x5c, 0x61, 0xfa, 0x56, 0x84, 0xbe, 0x95, 0x96, 0xd0, 0xd7, 0xca, 0x73, 0x7a,
	0x02, 0x41, 0x1f, 0xc3, 0xf2, 0xc8, 0xed, 0x39, 0xa7, 0x8e, 0xe0, 0x2f, 0x5e, 0xca, 0xbf, 0x24,
	0x18, 0xa8, 0x80, 0x37, 0x60, 0xc9, 0xc7, 0x43, 0x3b, 0x74, 0x9e, 0xe3, 0xce, 0xc4, 0x1f, 0x96,
	0xd2, 0x53, 0xfd, 0xf2, 0x02, 0xde, 0xf6, 0x87, 0xe8, 0x3d, 0x58, 0x0f, 0x07, 0x93, 0xd1, 0xc9,
	0xd8, 0x76, 0x86, 0x1d, 0x85, 0x21, 0x33, 0x65, 0x58, 0x9d, 0x52, 0x58, 0x12, 0xe7, 0x9b, 0x60,
	0x78, 0x78, 0xdc, 0x73, 0xc6, 0xfd, 0x4e, 0x0f, 0x0f, 0x31, 0xb9, 0x93, 0x52, 0x6e, 0x53, 0xdb,
	0xca, 0x5a, 0x45, 0x0e, 0xdf, 0xe5, 0x60, 0x74, 0x13, 0xe0, 0xb9, 0x83, 0x5f, 0x74, 0xba, 0xee,
	0x64, 0x1c, 0x96, 0x60, 0x53, 0xdb, 0xd2, 0xad, 0x1c, 0x81, 0xec, 0x10, 0x00, 0x7a, 0x08, 0x59,
	0x71, 0xab, 0xa5, 0x3c, 0x3d, 0xe6, 0xc6, 0xdc, 0x31, 0x77, 0x39, 0x01, 0x55, 0x68, 0x4a, 0x8e,
	0x36, 0x20, 0x1b, 0x74, 0x5d, 0x1f, 0x77, 0x86, 0x6e, 0x69, 0x69, 0x53, 0xdb, 0xd2, 0xac, 0x0c,
	0x5d, 0x1f, 0xb8, 0x11, 0x6a, 0xe0, 0x94, 0x96, 0x25, 0xd4, 0xbe, 0xf3, 0x69, 0x32, 0x9b, 0x35,
	0x72, 0xe6, 0x1f, 0x74, 0xc8, 0x34, 0x9d, 0xee, 0x9e, 0x33, 0xc4, 0x73, 0xde, 0xf1, 0x36, 0xa4,
	0x4f, 0x5d, 0x7f, 0x64, 0x87, 0xd4, 0x3d, 0x0a, 0xdb, 0x1b, 0x95, 0xa9, 0x3f, 0x57, 0x38, 0x4f,
	0x65, 0x8f, 0x12, 0x58, 0x9c, 0x30, 0x72, 0x28, 0x3d, 0xde, 0xa1, 0x92, 0x8a, 0x43, 0x3d, 0x90,
	0xce, 0x9c, 0xba, 0xe4, 0xcc, 0xd2, 0x79, 0x6f, 0x40, 0x6e, 0x7a, 0x19, 0xf4, 0x4a, 0xb3, 0x56,
	0x04, 0x98, 0xf3, 0xb9, 0xcc, 0x2b, 0xfa, 0x5c, 0xf6, 0x25, 0x7d, 0x0e, 0x41, 0x32, 0x70, 0x7e,
	0x86, 0xa9, 0x1b, 0xe8, 0x16, 0xfd, 0x36, 0x3f, 0x80, 0x34, 0x33, 0x14, 0xca, 0x43, 0xa6, 0xdd,
	0xf8, 0xac, 0x71, 0xf8, 0xb4, 0x61, 0x7c, 0x03, 0x65, 0x21, 0xf9, 0x69, 0xb3, 0xf6, 0xd8, 0xd0,
	0x50, 0x06, 0xf4, 0xc7, 0xf5, 0x3d, 0x23, 0x41, 0x3e, 0x9a, 0x8d, 0xc7, 0x86, 0x4e, 0x70, 0x4f,
	0x6b, 0x8f, 0x9e, 0x18, 0x49, 0xf3, 0x3f, 0x1a, 0xa4, 0x9b, 0x4e, 0xb7, 0x65, 0xf7, 0xd1, 0x1a,
	0xa4, 0x3d, 0xa7, 0xdb, 0x99, 0xde, 0x52, 0xca, 0x73, 0xba, 0xf5, 0x1e, 0x01, 0x87, 0x76, 0x9f,
	0x80, 0x13, 0x0c, 0x1c, 0xda, 0xfd, 0x7a, 0x8f, 0x68, 0x32, 0xb6, 0x47, 0x98, 0xde, 0x45, 0xce,
	0xa2, 0xdf, 0x73, 0xd6, 0x49, 0xbe, 0xa2, 0x75, 0x52, 0x2f, 0x69, 0x1d, 0xe9, 0x0d, 0x49, 0x2b,
	0x6f, 0x88, 0xf9, 0x65, 0x02, 0xa0, 0xe9, 0x74, 0x77, 0xdc, 0xd1, 0x08, 0x8f, 0xc3, 0x45, 0x47,
	0xbd, 0x09, 0xd0, 0x65, 0x14, 0xd1, 0x71, 0x73, 0x1c, 0x52, 0xef, 0xa1, 0xbb, 0xb0, 0x22, 0xd0,
	0x9e, 0xed, 0x73, 0x2a, 0x76, 0xfe, 0x22, 0x47, 0x34, 0x29, 0x9c, 0x99, 0x27, 0xc4, 0x67, 0x21,
	0x8b, 0x71, 0x8b, 0x7e, 0xff, 0x1f, 0x9b, 0xe7, 0x4f, 0x09, 0x1a, 0xa8, 0xc7, 0x6e, 0x88, 0x17,
	0xd9, 0xe6, 0x1a, 0x64, 0x26, 0x01, 0xf6, 0x23, 0xc3, 0xa4, 0xc9, 0xb2, 0xde, 0x43, 0xdf, 0x86,
	0xe4, 0x73, 0x37, 0x64, 0x8e, 0x50, 0xd8, 0xbe, 0xa6, 0x86, 0x31, 0x91, 0x58, 0x21, 0x3f, 0x16,
	0x25, 0xba, 0xe0, 0x95, 0x9f, 0x35, 0x4e, 0xea, 0x15, 0x8d, 0x93, 0x7e, 0x39, 0xe3, 0x98, 0xdb,
	0x90, 0xa4, 0xc7, 0x57, 0x62, 0x28, 0x0d, 0x89, 0x76, 0xd3, 0xd0, 0x48, 0xbc, 0xec, 0x12, 0x48,
	0x82, 0xa0, 0x1b, 0xb5, 0x76, 0xcb, 0xaa, 0x1e, 0x18, 0xba, 0xf9, 0xf7, 0x04, 0x24, 0xdb, 0x01,
	0xf6, 0x65, 0xe3, 0x68, 0x8a, 0x71, 0x56, 0x21, 0xe5, 0xf4, 0xf0, 0x38, 0x14, 0xb1, 0x43, 0x17,
	0x73, 0x67, 0xd5, 0x5f, 0xf1, 0xac, 0xc9, 0x97, 0x74, 0x84, 0x4f, 0xa0, 0x30, 0xb4, 0x83, 0xb0,
	0x13, 0x60, 0x3c, 0xbe, 0xb2, 0x2b, 0x11, 0x8e, 0x23, 0x8c, 0xc7, 0x17, 0xbb, 0x12, 0x7a, 0x08,
	0xd0, 0xb5, 0x3d, 0xfb, 0xc4, 0x19, 0x3a, 0xe1, 0x79, 0x29, 0xb3, 0xa9, 0xcf, 0xbc, 0xed, 0x3b,
	0x53, 0x24, 0xf9, 0xb4, 0x24, 0x62, 0xf3, 0xcf, 0x09, 0x80, 0x08, 0x6d, 0xfe, 0x31, 0x01, 0xfa,
	0x8e, 0xed, 0xa9, 0x37, 0x52, 0x00, 0x68, 0xd6, 0x77, 0x3a, 0x3b, 0x56, 0xad, 0xda, 0xaa, 0x19,
	0x1a, 0x5a, 0x82, 0x2c, 0x59, 0x5b, 0xb5, 0xea, 0xae, 0x91, 0x40, 0xcb, 0x90, 0x23, 0xab, 0x7a,
	0x63, 0xb7, 0xf6, 0xb9, 0xa1, 0xa3, 0xd7, 0xa0, 0x48, 0x96, 0x47, 0x87, 0x7b, 0xad, 0xce, 0x6e,
	0xed, 0xa0, 0xd6, 0xaa, 0x19, 0x29, 0x01, 0xdc, 0xaf, 0x5a, 0xbb, 0x02, 0x98, 0x16, 0x8c, 0xcd,
	0xb6, 0xf5, 0xb8, 0x66, 0x64, 0xd0, 0x75, 0xb8, 0x46, 0x96, 0xed, 0xe6, 0x6e, 0xb5, 0x55, 0xeb,
	0x1c, 0xd7, 0x6b, 0x4f, 0x3b, 0x3b, 0x87, 0xed, 0x46, 0xab, 0x66, 0x19, 0x59, 0x84, 0xa0, 0x40,
	0x90, 0xad, 0xea, 0x63, 0xa1, 0x46, 0x0e, 0xad, 0x03, 0xa2, 0x6a, 0x1d, 0x3e, 0x79, 0x52, 0x6b,
	0xb4, 0x04, 0x1c, 0xc4, 0x66, 0xc7, 0x87, 0xad, 0x9a, 0x00, 0xe6, 0x51, 0x11, 0xf2, 0xed, 0xa3,
	0x9a, 0x25, 0x00, 0x49, 0x54, 0x86, 0x75, 0x0a, 0xe0, 0xfb, 0xed, 0x54, 0x9b, 0xd5, 0x47, 0xf5,
	0x83, 0x7a, 0xeb, 0x07, 0xc6, 0x12, 0xd9, 0x8d, 0xe2, 0xc8, 0x09, 0x3b, 0x47, 0xb5, 0x83, 0x3d,
	0x63, 0x19, 0xad, 0xc0, 0x72, 0x04, 0xab, 0x1e, 0x1c, 0x18, 0x05, 0xf3, 0x3b, 0xb0, 0x72, 0xe0,
	0xba, 0xcf, 0x26, 0x1e, 0xf1, 0x47, 0x0b, 0xff, 0x74, 0x82, 0x83, 0x70, 0xa1, 0x5b, 0x9a, 0x0f,
	0x01, 0xc9, 0xd4, 0x81, 0xe7, 0x8e, 0x03, 0x8c, 0x6e, 0x43, 0x92, 0xe0, 0x29, 0x6d, 0x7e, 0xbb,
	0x28, 0x5d, 0x1a, 0x25, 0xa3, 0x48, 0xf3, 0x17, 0x49, 0x58, 0x69, 0x7b, 0x3d, 0x3b, 0xc4, 0x57,
	0xd9, 0x49, 0x76, 0x94, 0x84, 0xea, 0x28, 0x1f, 0x89, 0xd0, 0x60, 0xde, 0xbf, 0x25, 0x6f, 0x37,
	0x2b, 0xbf, 0xb2, 0x33, 0xb0, 0xc7, 0x7d, 0x5c, 0x27, 0xf4, 0x22, 0x88, 0xaa, 0x90, 0x0e, 0x70,
	0xd7, 0xc7, 0x21, 0x77, 0xff, 0x37, 0xaf, 0x20, 0xe0, 0x88, 0x32, 0x58, 0x9c, 0x11, 0x3d, 0x51,
	0x7c, 0x95, 0xc5, 0xc0, 0xbd, 0x2b, 0x88, 0x89, 0x9c, 0x54, 0xf6, 0xdf, 0xf2, 0x6d, 0xc8, 0x4b,
	0x7a, 0x46, 0xb1, 0xaf, 0x49, 0xb1, 0x5f, 0xbe, 0x03, 0x4b, 0xb2, 0x2e, 0xa4, 0x7c, 0xe1, 0xc7,
	0xe0, 0x86, 0x63, 0xab, 0xf2, 0xef, 0x35, 0x30, 0x66, 0x77, 0x23, 0x81, 0x1b, 0xe0, 0xb0, 0x23,
	0x29, 0xad, 0x5d, 0x16, 0x60, 0xcb, 0x01, 0x0e, 0x25, 0x09, 0xbb, 0x60, 0x74, 0x87, 0xd8, 0xf6,
	0x65, 0x19, 0x89, 0xcb, 0x64, 0x14, 0x29, 0x8b, 0x14, 0x9a, 0x0f, 0x01, 0xc9, 0xb6, 0x79, 0x19,
	0xff, 0xa9, 0x42, 0x21, 0x4a, 0xc4, 0x2d, 0x1f, 0x63, 0x74, 0x1f, 0x32, 0x3c, 0x7b, 0xd2, 0xd3,
	0xe4, 0xb7, 0xd7, 0xd4, 0x1c, 0xc2, 0x69, 0x2d, 0x41, 0x65, 0xbe, 0x05, 0xd7, 0x98, 0xf7, 0x36,
	0x9d, 0xee, 0x2e, 0x0e, 0x6d, 0x67, 0x18, 0x08, 0x3f, 0x8c, 0x4f, 0x5e, 0xe6, 0xbf, 0x34, 0x28,
	0xcd, 0xb3, 0x70, 0xb5, 0x37, 0x41, 0xf7, 0x9c, 0x2e, 0xd7, 0xba, 0xa0, 0xee, 0x6d, 0x11, 0x14,
	0xba, 0x0b, 0x19, 0x22, 0x35, 0xb4, 0xfb, 0xd4, 0x56, 0xf9, 0xed, 0x15, 0x95, 0xaa, 0x65, 0xf7,
	0x2d, 0xb2, 0x2f, 0xa9, 0xa2, 0x76, 0xc0, 0x20, 0xb4, 0xa2, 0x50, 0x08, 0x7d, 0x2c, 0xde, 0xf7,
	0x8d, 0xd8, 0x63, 0x11, 0x13, 0x58, 0x05, 0x4f, 0x35, 0xc9, 0x3d, 0xc8, 0x12, 0x21, 0xa7, 0xce,
	0x90, 0x3c, 0xee, 0x64, 0x47, 0x34, 0x5f, 0x1e, 0x5b, 0x44, 0x29, 0xf2, 0x61, 0x1e, 0xc3, 0xea,
	0x9e, 0x33, 0xee, 0xd5, 0xc7, 0x3d, 0x7c, 0xd6, 0x74, 0xba, 0x53, 0x6b, 0x6c, 0xc2, 0x52, 0x10,
	0xda, 0x7e, 0xd8, 0x51, 0x6c, 0x02, 0x14, 0xd6, 0xa4, 0x59, 0xfd, 0x06, 0xe4, 0xec, 0xa0, 0xcb,
	0x9a, 0x09, 0x1a, 0xa0, 0x59, 0x2b, 0x02, 0x98, 0x0f, 0x61, 0x6d, 0x46, 0xee, 0xac, 0xc9, 0xf4,
	0x05, 0x26, 0x33, 0xd7, 0x99, 0x4a, 0x47, 0xdd, 0x01, 0xee, 0x49, 0x2a, 0x09, 0x91, 0x12, 0xfc,
	0xca, 0x22, 0x3f, 0x84, 0x95, 0x6a, 0xaf, 0xc7, 0xcc, 0x7d, 0xc9, 0x85, 0x23, 0x03, 0x74, 0x71,
	0x5b, 0x39, 0x8b, 0x7c, 0x9a, 0xab, 0x80, 0x64, 0x6e, 0xb6, 0xab, 0x79, 0x0e, 0xc6, 0x0e, 0xcd,
	0xac, 0x64, 0x17, 0x2e, 0xf2, 0x3a, 0xe4, 0x88, 0xe1, 0x3b, 0x3d, 0x3b, 0xb4, 0xa9, 0xd4, 0x25,
	0x2b, 0x4b, 0x00, 0xbb, 0x76, 0x68, 0x4f, 0x91, 0xb4, 0xf6, 0x65, 0x49, 0x9d, 0x22, 0x1b, 0xa4,
	0xfe, 0xdd, 0x00, 0xfa, 0x4d, 0x9b, 0x3b, 0x56, 0x17, 0x66, 0xc8, 0x9a, 0xf4, 0x72, 0x5c, 0xa1,
	0x64, 0xa4, 0xd0, 0x03, 0x58, 0x91, 0xb6, 0xbe, 0xaa, 0x2f, 0x9a, 0xf7, 0x61, 0x9d, 0x1a, 0xd0,
	0x19, 0x39, 0x43, 0xdb, 0x97, 0x6f, 0x7b, 0x81, 0xef, 0xbf, 0x05, 0xd7, 0xe6, 0x18, 0xf8, 0x6e,
	0x32, 0x87, 0x1e, 0x71, 0x6c, 0xc3, 0x46, 0x7d, 0xdc, 0xf5, 0x31, 0x71, 0xc7, 0x63, 0xd1, 0x43,
	0x5e, 0xb2, 0xcb, 0x0d, 0x28, 0xc7, 0xf1, 0x70, 0x33, 0x6f, 0x41, 0xb1, 0x39, 0xf1, 0xfb, 0xb2,
	0x95, 0x17, 0xc8, 0x41, 0x60, 0x44, 0x94, 0x9c, 0xfb, 0xaf, 0x1a, 0xac, 0x1e, 0xb9, 0xa7, 0x21,
	0xed, 0x76, 0x2f, 0x97, 0x41, 0x72, 0x4e, 0x8f, 0xc5, 0x38, 0xbf, 0x21, 0xb1, 0x24, 0x4d, 0xa7,
	0x8f, 0xed, 0xc0, 0x1d, 0xf3, 0x6a, 0x55, 0x0e, 0x49, 0xd1, 0x4b, 0x5b, 0x94, 0xc0, 0xe2, 0x84,
	0xa4, 0xd8, 0x12, 0xcd, 0xf7, 0x95, 0x8b, 0x2d, 0xc1, 0x40, 0x0b, 0xcb, 0x6b, 0xb0, 0x36, 0xa3,
	0x7c, 0xe4, 0x7b, 0x6d, 0x2f, 0xc0, 0x34, 0x14, 0xc5, 0x89, 0x0c, 0xd0, 0x89, 0xf3, 0xb0, 0xe3,
	0x90, 0xcf, 0x69, 0x9f, 0x95, 0x90, 0xfa, 0x2c, 0x04, 0x49, 0xea, 0x9c, 0x3a, 0x75, 0x4e, 0xfa,
	0x4d, 0x7c, 0x6f, 0xd4, 0x7b, 0xd0, 0x19, 0xd8, 0xc1, 0x80, 0xaa, 0xb8, 0x64, 0x65, 0x46, 0xbd,
	0x07, 0xfb, 0x76, 0x30, 0x10, 0xbe, 0x97, 0x52, 0x7c, 0x4f, 0xda, 0xfa, 0xca, 0xbe, 0x57, 0x15,
	0x2e, 0x2b, 0xa7, 0xfe, 0xd8, 0x34, 0x27, 0xa5, 0xb5, 0x84, 0x9c, 0xd6, 0x48, 0x18, 0xca, 0x22,
	0xb8, 0x29, 0x9e, 0xc1, 0xfa, 0x63, 0x1c, 0x5a, 0xf8, 0xd4, 0xc7, 0xc1, 0xa0, 0xe5, 0x3e, 0xc3,
	0xe3, 0xaf, 0x25, 0x1d, 0xdd, 0x86, 0x65, 0x9f, 0x09, 0xe9, 0x84, 0x44, 0x0a, 0x8f, 0xc2, 0x25,
	0x5f, 0x92, 0x6c, 0x7e, 0x95, 0x80, 0x6b, 0x73, 0xbb, 0x4d, 0x53, 0xd8, 0x8c, 0x00, 0x6d, 0x5e,
	0x00, 0x69, 0x13, 0xed, 0x49, 0x28, 0x28, 0x78, 0x9b, 0x48, 0x20, 0x0c, 0x7d, 0x1d, 0x72, 0x9e,
	0x73, 0xc6, 0xb1, 0x29, 0xf6, 0x44, 0x78, 0xce, 0x19, 0x43, 0x7e, 0x04, 0x45, 0xb1, 0x81, 0x67,
	0x9f, 0x0f, 0x5d, 0xbb, 0xc7, 0xb3, 0x83, 0x92, 0xf4, 0x5e, 0x84, 0x4d, 0x86, 0xb4, 0x0a, 0x9c,
	0x9a, 0xaf, 0xd1, 0x7b, 0xb0, 0x44, 0xf7, 0x16, 0xcc, 0xc9, 0x8b, 0x98, 0xf3, 0x84, 0x54, 0x70,
	0xbe, 0x0b, 0x79, 0xa2, 0x96, 0x60, 0x4c, 0x5f, 0xc4, 0x08, 0x9e, 0x73, 0xc6, 0xbf, 0xcd, 0xdf,
	0x68, 0x90, 0x6b, 0xbe, 0x08, 0xf7, 0xb1, 0xdd, 0xc3, 0x3e, 0xfa, 0x10, 0x72, 0xf6, 0xb0, 0xef,
	0xfa, 0x4e, 0x38, 0x18, 0x51, 0xe3, 0x14, 0xb6, 0x6f, 0xa9, 0x32, 0x18, 0x61, 0xa5, 0x2a, 0xa8,
	0xac, 0x88, 0x61, 0xb6, 0x1a, 0xd4, 0xa3, 0x0e, 0xb4, 0x02, 0xb9, 0x29, 0x87, 0x5a, 0xf1, 0xe7,
	0x20, 0xb5, 0x7f, 0xb4, 0xfd, 0xe0, 0x5d, 0x43, 0x23, 0x9f, 0x16, 0xfd, 0x4c, 0x98, 0x5f, 0xea,
	0x00, 0x91, 0xc2, 0x44, 0x70, 0x30, 0x39, 0xf9, 0x09, 0xee, 0x0a, 0x47, 0x11, 0x4b, 0xd2, 0x8f,
	0x8c, 0xdd, 0xb0, 0x73, 0x82, 0x4f, 0x5d, 0x9f, 0x45, 0xd1, 0xc5, 0xc1, 0x9b, 0x1b, 0xbb, 0xe1,
	0x23, 0x4a, 0x8c, 0xbe, 0x07, 0x64, 0xd1, 0xb1, 0x4f, 0x43, 0xec, 0x5f, 0xa1, 0x47, 0xcb, 0x8e,
	0xdd, 0xb0, 0x4a, 0x68, 0x69, 0x99, 0xe6, 0x9e, 0x86, 0x9d, 0x88, 0xfb, 0x0a, 0xdd, 0x28, 0xe1,
	0x68, 0x08, 0x09, 0xeb, 0x90, 0x76, 0x82, 0x60, 0x82, 0x7d, 0x7a, 0xc1, 0x39, 0x8b, 0xaf, 0x48,
	0x94, 0x53, 0xbf, 0x22, 0x6f, 0x5e, 0x8a, 0x59, 0x90, 0xae, 0xeb, 0x3d, 0x74, 0x07, 0x8a, 0x0c,
	0x15, 0xcd, 0x26, 0xb2, 0x94, 0x62, 0x99, 0x82, 0xa7, 0x93, 0x89, 0x0a, 0x1f, 0xa7, 0x66, 0xe8,
	0xe5, 0x95, 0x63, 0x1d, 0xa0, 0xd2, 0x3a, 0xf7, 0x30, 0x1b, 0xb3, 0x9a, 0xef, 0x40, 0x92, 0xac,
	0xd4, 0x4b, 0xc9, 0x43, 0xc6, 0xaa, 0xed, 0x59, 0xb5, 0xa3, 0x7d, 0xd6, 0x1d, 0x57, 0xdb, 0xad,
	0x7d, 0x3e, 0x60, 0xaa, 0x7f, 0x6e, 0xe8, 0xe6, 0x08, 0x56, 0x59, 0xb6, 0x15, 0xc5, 0xdb, 0xc5,
	0x2f, 0x76, 0xec, 0x64, 0x25, 0x71, 0xf1, 0x64, 0x45, 0x8f, 0x26, 0x2b, 0xe6, 0x3e, 0xac, 0xcd,
	0x6c, 0xc7, 0xe3, 0x59, 0xa9, 0x2d, 0xb5, 0x2b, 0xd4, 0x96, 0xab, 0x80, 0xd8, 0x4b, 0x2d, 0xbf,
	0x42, 0xe6, 0x1a, 0xbc, 0xa6, 0x40, 0xf9, 0xb3, 0x15, 0xc2, 0xea, 0xf4, 0x19, 0xa5, 0x43, 0x8e,
	0x4b, 0xf3, 0x92, 0xf0, 0x7e, 0x5d, 0xed, 0x85, 0xc4, 0x0c, 0x25, 0x71, 0x85, 0x19, 0x0a, 0x49,
	0x28, 0x33, 0xbb, 0x72, 0x75, 0xf6, 0x60, 0x75, 0x5a, 0xe4, 0x5e, 0x41, 0x9d, 0x45, 0x13, 0x1d,
	0xf3, 0x63, 0x58, 0x9b, 0x91, 0xc3, 0xad, 0x79, 0x87, 0xab, 0xc9, 0x4c, 0x89, 0xe6, 0xd5, 0xe4,
	0x1a, 0x3a, 0x92, 0x22, 0xb4, 0x52, 0xe5, 0x8a, 0xdc, 0x22, 0x4f, 0x10, 0x2b, 0x6b, 0x23, 0x6d,
	0x72, 0xbc, 0x8a, 0xad, 0x7f, 0x9d, 0x99, 0xb0, 0xb9, 0x27, 0xe9, 0xca, 0xb6, 0xe2, 0xba, 0xca,
	0x25, 0x74, 0xac, 0xbe, 0x6a, 0x09, 0xfd, 0x5b, 0x0d, 0x90, 0x85, 0xed, 0xde, 0xff, 0x5c, 0x63,
	0x12, 0xda, 0xee, 0xe9, 0x69, 0x80, 0x99, 0x07, 0xeb, 0x16, 0x5f, 0x91, 0x4c, 0x37, 0x74, 0x46,
	0x0e, 0x6b, 0x67, 0x75, 0x8b, 0x2d, 0xcc, 0x0f, 0xe0, 0x35, 0x45, 0x2d, 0x7e, 0x3a, 0x51, 0x01,
	0x68, 0x52, 0x05, 0x60, 0x80, 0x8e, 0xdd, 0x53, 0x5e, 0xc5, 0x93, 0x4f, 0x52, 0xc8, 0x4d, 0x8d,
	0x53, 0x3b, 0x0b, 0xf1, 0x38, 0xa0, 0xf5, 0xcd, 0x85, 0x05, 0xd8, 0x57, 0x1a, 0x94, 0xe3, 0x98,
	0xf8, 0xc6, 0x9f, 0x80, 0x4e, 0x82, 0x8f, 0x95, 0xe9, 0x15, 0xe9, 0xb4, 0x8b, 0x79, 0x2a, 0xb5,
	0xb3, 0xb0, 0x36, 0x0e, 0xfd, 0x73, 0x8b, 0xb0, 0x96, 0x0f, 0x20, 0x2b, 0x00, 0x44, 0xe5, 0x67,
	0xf8, 0x5c, 0x94, 0x3b, 0xcf, 0xf0, 0x39, 0xba, 0x0b, 0xa9, 0xe7, 0xf6, 0x70, 0x22, 0x5e, 0xea,
	0xd5, 0xb9, 0x17, 0xb3, 0x3a, 0x3e, 0xb7, 0x18, 0xc9, 0xfb, 0x89, 0xf7, 0x34, 0xf3, 0x2f, 0x1a,
	0xe4, 0x8f, 0xb0, 0xff, 0xdc, 0xe9, 0xe2, 0x43, 0x2f, 0x0c, 0xd0, 0xeb, 0x90, 0xb7, 0x3d, 0xa7,
	0x23, 0xe2, 0x4c, 0xa3, 0xb6, 0x04, 0xdb, 0x73, 0x8e, 0x79, 0xa8, 0xbd, 0x0d, 0x6b, 0x51, 0xf2,
	0xee, 0x0c, 0x68, 0xb2, 0xea, 0x10, 0x25, 0x58, 0x0c, 0xa0, 0x69, 0x1e, 0x67, 0x79, 0xec, 0x33,
	0x7c, 0x8e, 0xee, 0xc3, 0xea, 0x34, 0xa1, 0xcb, 0x1c, 0xec, 0x05, 0x5a, 0x11, 0xb9, 0x3d, 0x62,
	0xb8, 0x03, 0xc5, 0x41, 0x18, 0x7a, 0x32, 0x2d, 0x7b, 0xc6, 0x97, 0x09, 0x78, 0x4a, 0x67, 0x7e,
	0x17, 0x60, 0x7f, 0x0a, 0x88, 0x31, 0xc6, 0xaa, 0x6c, 0x8c, 0x1c, 0x3f, 0xf6, 0xdd, 0x0f, 0xa0,
	0xa0, 0xd6, 0xaa, 0x73, 0x73, 0xff, 0xc6, 0x61, 0xa3, 0x66, 0x68, 0x08, 0x41, 0xc1, 0x6a, 0x1f,
	0xd4, 0x3a, 0xc7, 0xf5, 0xc3, 0x83, 0x6a, 0xab, 0x7e, 0xd8, 0x30, 0x12, 0xdb, 0x7f, 0x2b, 0xc0,
	0x52, 0x93, 0x5c, 0x1a, 0x37, 0x1a, 0xb2, 0x60, 0x59, 0x79, 0x3a, 0xd1, 0xeb, 0xd2, 0xa5, 0xc6,
	0xbd, 0xe1, 0xe5, 0xcd, 0xc5, 0x04, 0xdc, 0x49, 0xea, 0x00, 0x51, 0xaf, 0x85, 0x6e, 0xcc, 0xd1,
	0x4b, 0x0d, 0x5c, 0xf9, 0xe6, 0x02, 0x2c, 0x17, 0xb5, 0x07, 0xb9, 0x69, 0x97, 0x84, 0xae, 0xcb,
	0x23, 0x8a, 0x99, 0xb6, 0xad, 0x7c, 0x23, 0x1e, 0x19, 0xa9, 0x14, 0xd5, 0x9d, 0x68, 0x9e, 0x56,
	0xaa, 0x68, 0x15, 0x95, 0xe6, 0x8b, 0x55, 0x74, 0x00, 0x79, 0x29, 0x19, 0xa0, 0x9b, 0xb3, 0x3d,
	0x84, 0x92, 0x3a, 0xca, 0xb7, 0x16, 0xa1, 0xb9, 0xb4, 0xa7, 0xb0, 0xac, 0xf4, 0xd8, 0x8a, 0xfd,
	0xe3, 0xba, 0x7a, 0xc5, 0xfe, 0xb1, 0xed, 0xb9, 0xa9, 0xff, 0x2a, 0xa1, 0x09, 0xc1, 0xd3, 0x4e,
	0x7b, 0x4e, 0xf0, 0x6c, 0x6f, 0x3e, 0x27, 0x78, 0xae, 0x49, 0x67, 0x82, 0x7f, 0x04, 0xc5, 0x99,
	0x86, 0x12, 0x7d, 0x73, 0x96, 0x73, 0xae, 0x3b, 0x2d, 0x9b, 0x17, 0x91, 0xc8, 0xe2, 0x3f, 0x87,
	0xe2, 0x4c, 0x75, 0xae, 0x88, 0x8f, 0xef, 0x13, 0x14, 0xf1, 0x8b, 0x8a, 0x7b, 0x1b, 0xd0, 0x7c,
	0x8f, 0x8a, 0xbe, 0x25, 0x71, 0x2e, 0x6c, 0x7b, 0xcb, 0x6f, 0x5c, 0x42, 0xc5, 0xb7, 0xf8, 0x31,
	0x18, 0xb3, 0x73, 0x26, 0x64, 0xc6, 0xbd, 0x92, 0xea, 0xdc, 0xaa, 0x7c, 0xfb, 0x42, 0x1a, 0xd9,
	0x3c, 0xa7, 0x62, 0x74, 0x2b, 0x3f, 0xb5, 0xca, 0x21, 0x16, 0x3e, 0xf9, 0xca, 0x21, 0x16, 0xbf,
	0xd7, 0x53, 0xf7, 0x51, 0x12, 0xab, 0xe2, 0x3e, 0x71, 0xd9, 0x5d, 0x71, 0x9f, 0xd8, 0x9c, 0xcc,
	0x04, 0xb7, 0x21, 0x2f, 0x65, 0x34, 0x25, 0x7c, 0xe6, 0x13, 0xb0, 0x12, 0x3e, 0x31, 0x89, 0x90,
	0x8a, 0xdc, 0xd2, 0xde, 0x52, 0xf5, 0xa5, 0x7f, 0xe4, 0xc4, 0xea, 0x2b, 0x95, 0x45, 0xf1, 0xfa,
	0x2a, 0x05, 0x15, 0xd5, 0xb7, 0x01, 0x10, 0xcd, 0xca, 0x95, 0x97, 0x63, 0x6e, 0xe0, 0xae, 0xbc,
	0x1c, 0xf3, 0x03, 0x76, 0x26, 0x6f, 0x07, 0xb2, 0x62, 0xc2, 0x81, 0x94, 0xea, 0x5b, 0x1d, 0x90,
	0x94, 0xaf, 0xc7, 0xe2, 0xb8, 0x9f, 0x59, 0xb0, 0xac, 0x0c, 0x15, 0x94, 0xd3, 0xc6, 0xcd, 0x4a,
	0x94, 0xd3, 0xc6, 0xce, 0x23, 0xc8, 0x13, 0x19, 0x0d, 0x75, 0x95, 0x83, 0xce, 0xcd, 0xc1, 0x95,
	0x83, 0xc6, 0x4c, 0x82, 0xf7, 0x20, 0x37, 0x2d, 0x51, 0x95, 0x57, 0x7b, 0x76, 0xe0, 0x51, 0xbe,
	0x11, 0x8f, 0x8c, 0x8e, 0xa9, 0x94, 0xba, 0xca, 0x31, 0xe3, 0x4a, 0x6f, 0xe5, 0x98, 0xb1, 0x55,
	0x72, 0x79, 0xe7, 0x97, 0x5f, 0x6c, 0x7e, 0x9c, 0xfd, 0xf5, 0xbf, 0xff, 0x91, 0x43, 0x06, 0xa5,
	0xbd, 0x47, 0x52, 0xfe, 0x3d, 0x9a, 0xdd, 0xcb, 0x45, 0x06, 0xf1, 0x9c, 0x33, 0x06, 0x30, 0xd7,
	0x18, 0x80, 0xe4, 0xed, 0x7b, 0x2c, 0x9d, 0xdf, 0x3b, 0x71, 0xc6, 0xef, 0xf7, 0x01, 0x51, 0x44,
	0x27, 0x60, 0x69, 0xb4, 0xe3, 0xd2, 0xe2, 0x63, 0xae, 0x5a, 0x89, 0x4a, 0x13, 0xc7, 0x1d, 0x07,
	0xa5, 0x9f, 0x7f, 0xc1, 0xfa, 0xf5, 0x75, 0xf9, 0x32, 0xa2, 0xea, 0xc5, 0x62, 0x0a, 0x49, 0x90,
	0x47, 0xd7, 0x61, 0xd9, 0xf5, 0xfb, 0x11, 0xf9, 0x7e, 0xa2, 0xa9, 0xfd, 0x50, 0xb7, 0x3d, 0xe7,
	0x9f, 0x9a, 0x76, 0x92, 0xa6, 0xfb, 0xbc, 0xf3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x77,
	0xe4, 0x8b, 0x16, 0x24, 0x00, 0x00,
}
