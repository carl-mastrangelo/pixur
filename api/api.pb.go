// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	any "github.com/golang/protobuf/ptypes/any"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Copy of schema.proto
type DeletionReason int32

const (
	// The reason is not know, due to limitations of proto
	DeletionReason_UNKNOWN DeletionReason = 0
	// No specific reason.  This is a catch-all reason.
	DeletionReason_NONE DeletionReason = 1
	// The pic is in violation of the rules.
	DeletionReason_RULE_VIOLATION DeletionReason = 2
)

var DeletionReason_name = map[int32]string{
	0: "UNKNOWN",
	1: "NONE",
	2: "RULE_VIOLATION",
}

var DeletionReason_value = map[string]int32{
	"UNKNOWN":        0,
	"NONE":           1,
	"RULE_VIOLATION": 2,
}

func (x DeletionReason) String() string {
	return proto.EnumName(DeletionReason_name, int32(x))
}

func (DeletionReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type PicFile_Format int32

const (
	PicFile_UNKNOWN PicFile_Format = 0
	PicFile_JPEG    PicFile_Format = 1
	PicFile_GIF     PicFile_Format = 2
	PicFile_PNG     PicFile_Format = 3
	PicFile_WEBM    PicFile_Format = 4
)

var PicFile_Format_name = map[int32]string{
	0: "UNKNOWN",
	1: "JPEG",
	2: "GIF",
	3: "PNG",
	4: "WEBM",
}

var PicFile_Format_value = map[string]int32{
	"UNKNOWN": 0,
	"JPEG":    1,
	"GIF":     2,
	"PNG":     3,
	"WEBM":    4,
}

func (x PicFile_Format) String() string {
	return proto.EnumName(PicFile_Format_name, int32(x))
}

func (PicFile_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1, 0}
}

type PicVote_Vote int32

const (
	PicVote_UNKNOWN PicVote_Vote = 0
	PicVote_UP      PicVote_Vote = 1
	PicVote_DOWN    PicVote_Vote = 2
	PicVote_NEUTRAL PicVote_Vote = 3
)

var PicVote_Vote_name = map[int32]string{
	0: "UNKNOWN",
	1: "UP",
	2: "DOWN",
	3: "NEUTRAL",
}

var PicVote_Vote_value = map[string]int32{
	"UNKNOWN": 0,
	"UP":      1,
	"DOWN":    2,
	"NEUTRAL": 3,
}

func (x PicVote_Vote) String() string {
	return proto.EnumName(PicVote_Vote_name, int32(x))
}

func (PicVote_Vote) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5, 0}
}

type Capability_Cap int32

const (
	Capability_UNKNOWN Capability_Cap = 0
	// Can this user create and upload pictures
	Capability_PIC_CREATE Capability_Cap = 1
	// Can this user view the actual image data (grants pic token)
	Capability_PIC_READ Capability_Cap = 2
	// Can this user perform general pic index queries?
	Capability_PIC_INDEX Capability_Cap = 3
	// Can this user soft delete a pic?
	Capability_PIC_SOFT_DELETE Capability_Cap = 5
	// Can this user hard delete a pic?
	Capability_PIC_HARD_DELETE Capability_Cap = 6
	// Can this user purge a pic?
	Capability_PIC_PURGE Capability_Cap = 7
	// Can this user increment the pic view counter?
	Capability_PIC_UPDATE_VIEW_COUNTER Capability_Cap = 8
	// Can this user add tags and pic tags?
	Capability_PIC_TAG_CREATE Capability_Cap = 9
	// Can this user create comments?
	Capability_PIC_COMMENT_CREATE Capability_Cap = 10
	// Can this user vote?
	Capability_PIC_VOTE_CREATE Capability_Cap = 11
	// Can this user create other users?
	Capability_USER_CREATE Capability_Cap = 4
	// Can this user modify capabilities?
	Capability_USER_UPDATE_CAPABILITY Capability_Cap = 12
	// Can this user read information about themselves?
	Capability_USER_READ_SELF Capability_Cap = 13
	// Can this user read infortmation about others?
	Capability_USER_READ_ALL Capability_Cap = 14
	// Can this user create arbitrary extension data on a pic?
	Capability_PIC_EXTENSION_CREATE Capability_Cap = 15
	// Can this user read arbitrary extension data on a pic?
	Capability_PIC_EXTENSION_READ Capability_Cap = 16
	// Can this user create arbitrary extension data on a comment?
	Capability_PIC_COMMENT_EXTENSION_CREATE Capability_Cap = 17
	// Can this user read arbitrary extension data on a comment?
	Capability_PIC_COMMENT_EXTENSION_READ Capability_Cap = 18
	// Can this user create arbitrary extension data on a pic tag?
	Capability_PIC_TAG_EXTENSION_CREATE Capability_Cap = 19
	// Can this user read arbitrary extension data on a pic tag?
	Capability_PIC_TAG_EXTENSION_READ Capability_Cap = 20
	// Can this user create arbitrary extension data on a pic vote?
	Capability_PIC_VOTE_EXTENSION_CREATE Capability_Cap = 21
	// Can this user read arbitrary extension data on a pic vote?
	Capability_PIC_VOTE_EXTENSION_READ Capability_Cap = 22
)

var Capability_Cap_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "PIC_CREATE",
	2:  "PIC_READ",
	3:  "PIC_INDEX",
	5:  "PIC_SOFT_DELETE",
	6:  "PIC_HARD_DELETE",
	7:  "PIC_PURGE",
	8:  "PIC_UPDATE_VIEW_COUNTER",
	9:  "PIC_TAG_CREATE",
	10: "PIC_COMMENT_CREATE",
	11: "PIC_VOTE_CREATE",
	4:  "USER_CREATE",
	12: "USER_UPDATE_CAPABILITY",
	13: "USER_READ_SELF",
	14: "USER_READ_ALL",
	15: "PIC_EXTENSION_CREATE",
	16: "PIC_EXTENSION_READ",
	17: "PIC_COMMENT_EXTENSION_CREATE",
	18: "PIC_COMMENT_EXTENSION_READ",
	19: "PIC_TAG_EXTENSION_CREATE",
	20: "PIC_TAG_EXTENSION_READ",
	21: "PIC_VOTE_EXTENSION_CREATE",
	22: "PIC_VOTE_EXTENSION_READ",
}

var Capability_Cap_value = map[string]int32{
	"UNKNOWN":                      0,
	"PIC_CREATE":                   1,
	"PIC_READ":                     2,
	"PIC_INDEX":                    3,
	"PIC_SOFT_DELETE":              5,
	"PIC_HARD_DELETE":              6,
	"PIC_PURGE":                    7,
	"PIC_UPDATE_VIEW_COUNTER":      8,
	"PIC_TAG_CREATE":               9,
	"PIC_COMMENT_CREATE":           10,
	"PIC_VOTE_CREATE":              11,
	"USER_CREATE":                  4,
	"USER_UPDATE_CAPABILITY":       12,
	"USER_READ_SELF":               13,
	"USER_READ_ALL":                14,
	"PIC_EXTENSION_CREATE":         15,
	"PIC_EXTENSION_READ":           16,
	"PIC_COMMENT_EXTENSION_CREATE": 17,
	"PIC_COMMENT_EXTENSION_READ":   18,
	"PIC_TAG_EXTENSION_CREATE":     19,
	"PIC_TAG_EXTENSION_READ":       20,
	"PIC_VOTE_EXTENSION_CREATE":    21,
	"PIC_VOTE_EXTENSION_READ":      22,
}

func (x Capability_Cap) String() string {
	return proto.EnumName(Capability_Cap_name, int32(x))
}

func (Capability_Cap) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7, 0}
}

type PwtHeader_Algorithm int32

const (
	PwtHeader_UNKNOWN   PwtHeader_Algorithm = 0
	PwtHeader_HS256     PwtHeader_Algorithm = 1
	PwtHeader_RS256     PwtHeader_Algorithm = 2
	PwtHeader_HS512_256 PwtHeader_Algorithm = 3
)

var PwtHeader_Algorithm_name = map[int32]string{
	0: "UNKNOWN",
	1: "HS256",
	2: "RS256",
	3: "HS512_256",
}

var PwtHeader_Algorithm_value = map[string]int32{
	"UNKNOWN":   0,
	"HS256":     1,
	"RS256":     2,
	"HS512_256": 3,
}

func (x PwtHeader_Algorithm) String() string {
	return proto.EnumName(PwtHeader_Algorithm_name, int32(x))
}

func (PwtHeader_Algorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{37, 0}
}

type PwtPayload_Type int32

const (
	PwtPayload_UNKNOWN PwtPayload_Type = 0
	PwtPayload_REFRESH PwtPayload_Type = 1
	PwtPayload_AUTH    PwtPayload_Type = 2
	PwtPayload_PIX     PwtPayload_Type = 3
)

var PwtPayload_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "REFRESH",
	2: "AUTH",
	3: "PIX",
}

var PwtPayload_Type_value = map[string]int32{
	"UNKNOWN": 0,
	"REFRESH": 1,
	"AUTH":    2,
	"PIX":     3,
}

func (x PwtPayload_Type) String() string {
	return proto.EnumName(PwtPayload_Type_name, int32(x))
}

func (PwtPayload_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{38, 0}
}

type Pic struct {
	// id is the unique identifier for the pic, in varint form
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// version is the version of the pic.  It is used when updating the pic.
	Version int64 `protobuf:"fixed64,4,opt,name=version,proto3" json:"version,omitempty"`
	// created_time is when the pic was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,14,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the pic was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,15,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// pending_deletion indicates if the pic may be deleted soon.
	PendingDeletion bool `protobuf:"varint,9,opt,name=pending_deletion,json=pendingDeletion,proto3" json:"pending_deletion,omitempty"`
	// view_count is the number of views this picture has received.
	ViewCount int64 `protobuf:"varint,10,opt,name=view_count,json=viewCount,proto3" json:"view_count,omitempty"`
	// The estimated lower bound of the pic score
	ScoreLo float64 `protobuf:"fixed64,12,opt,name=score_lo,json=scoreLo,proto3" json:"score_lo,omitempty"`
	// The estimated upper bound of the pic score
	ScoreHi   float64      `protobuf:"fixed64,13,opt,name=score_hi,json=scoreHi,proto3" json:"score_hi,omitempty"`
	File      *PicFile     `protobuf:"bytes,16,opt,name=file,proto3" json:"file,omitempty"`
	Source    []*PicSource `protobuf:"bytes,18,rep,name=source,proto3" json:"source,omitempty"`
	Thumbnail []*PicFile   `protobuf:"bytes,17,rep,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	// The user id of the first user who uploading this pic.  May be absent.
	FirstUserId          *wrappers.StringValue `protobuf:"bytes,19,opt,name=first_user_id,json=firstUserId,proto3" json:"first_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Pic) Reset()         { *m = Pic{} }
func (m *Pic) String() string { return proto.CompactTextString(m) }
func (*Pic) ProtoMessage()    {}
func (*Pic) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Pic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pic.Unmarshal(m, b)
}
func (m *Pic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pic.Marshal(b, m, deterministic)
}
func (m *Pic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pic.Merge(m, src)
}
func (m *Pic) XXX_Size() int {
	return xxx_messageInfo_Pic.Size(m)
}
func (m *Pic) XXX_DiscardUnknown() {
	xxx_messageInfo_Pic.DiscardUnknown(m)
}

var xxx_messageInfo_Pic proto.InternalMessageInfo

func (m *Pic) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Pic) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Pic) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *Pic) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

func (m *Pic) GetPendingDeletion() bool {
	if m != nil {
		return m.PendingDeletion
	}
	return false
}

func (m *Pic) GetViewCount() int64 {
	if m != nil {
		return m.ViewCount
	}
	return 0
}

func (m *Pic) GetScoreLo() float64 {
	if m != nil {
		return m.ScoreLo
	}
	return 0
}

func (m *Pic) GetScoreHi() float64 {
	if m != nil {
		return m.ScoreHi
	}
	return 0
}

func (m *Pic) GetFile() *PicFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *Pic) GetSource() []*PicSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Pic) GetThumbnail() []*PicFile {
	if m != nil {
		return m.Thumbnail
	}
	return nil
}

func (m *Pic) GetFirstUserId() *wrappers.StringValue {
	if m != nil {
		return m.FirstUserId
	}
	return nil
}

type PicFile struct {
	// The fully qualified picfile id.  The first component is always the pic id.
	Id     string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Format PicFile_Format `protobuf:"varint,2,opt,name=format,proto3,enum=pixur.api.PicFile_Format" json:"format,omitempty"`
	// width is the width of pic file
	Width int32 `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	// height is the height of the pic file
	Height int32 `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	// duration is present if the image is animated (GIF or WEBM).  Note that
	// GIFs duration is not well defined and is subject to reinterpretation.
	Duration *duration.Duration `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// Is this pic considered a thumbnail
	Thumbnail bool `protobuf:"varint,6,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	// created_time is when the PicFile was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the PicFile was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// the size in bytes of the file
	Size                 int64    `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PicFile) Reset()         { *m = PicFile{} }
func (m *PicFile) String() string { return proto.CompactTextString(m) }
func (*PicFile) ProtoMessage()    {}
func (*PicFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *PicFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicFile.Unmarshal(m, b)
}
func (m *PicFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicFile.Marshal(b, m, deterministic)
}
func (m *PicFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicFile.Merge(m, src)
}
func (m *PicFile) XXX_Size() int {
	return xxx_messageInfo_PicFile.Size(m)
}
func (m *PicFile) XXX_DiscardUnknown() {
	xxx_messageInfo_PicFile.DiscardUnknown(m)
}

var xxx_messageInfo_PicFile proto.InternalMessageInfo

func (m *PicFile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PicFile) GetFormat() PicFile_Format {
	if m != nil {
		return m.Format
	}
	return PicFile_UNKNOWN
}

func (m *PicFile) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *PicFile) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PicFile) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *PicFile) GetThumbnail() bool {
	if m != nil {
		return m.Thumbnail
	}
	return false
}

func (m *PicFile) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *PicFile) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

func (m *PicFile) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type PicSource struct {
	// url is optional and is the location the pic came from.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// referrer is optional and is the location the pic was referred from.
	Referrer string `protobuf:"bytes,3,opt,name=referrer,proto3" json:"referrer,omitempty"`
	// name is optional and the file name for this source.  It may be derived
	// from the url, from the content-disposition, or from the user who
	// upload the file.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PicSource) Reset()         { *m = PicSource{} }
func (m *PicSource) String() string { return proto.CompactTextString(m) }
func (*PicSource) ProtoMessage()    {}
func (*PicSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *PicSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicSource.Unmarshal(m, b)
}
func (m *PicSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicSource.Marshal(b, m, deterministic)
}
func (m *PicSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicSource.Merge(m, src)
}
func (m *PicSource) XXX_Size() int {
	return xxx_messageInfo_PicSource.Size(m)
}
func (m *PicSource) XXX_DiscardUnknown() {
	xxx_messageInfo_PicSource.DiscardUnknown(m)
}

var xxx_messageInfo_PicSource proto.InternalMessageInfo

func (m *PicSource) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *PicSource) GetReferrer() string {
	if m != nil {
		return m.Referrer
	}
	return ""
}

func (m *PicSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PicTag struct {
	// pic_id is the unique identifier for the pic, in varint form
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// tag_id is the unique identifier for the tag, in varint form
	TagId string `protobuf:"bytes,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	// name is the tag name in utf8 form
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// created_time is when the tag was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the tag was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// version is the version of the tag.  It is used when updating the tag.
	Version              int64    `protobuf:"fixed64,6,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PicTag) Reset()         { *m = PicTag{} }
func (m *PicTag) String() string { return proto.CompactTextString(m) }
func (*PicTag) ProtoMessage()    {}
func (*PicTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *PicTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicTag.Unmarshal(m, b)
}
func (m *PicTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicTag.Marshal(b, m, deterministic)
}
func (m *PicTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicTag.Merge(m, src)
}
func (m *PicTag) XXX_Size() int {
	return xxx_messageInfo_PicTag.Size(m)
}
func (m *PicTag) XXX_DiscardUnknown() {
	xxx_messageInfo_PicTag.DiscardUnknown(m)
}

var xxx_messageInfo_PicTag proto.InternalMessageInfo

func (m *PicTag) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *PicTag) GetTagId() string {
	if m != nil {
		return m.TagId
	}
	return ""
}

func (m *PicTag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PicTag) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *PicTag) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

func (m *PicTag) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type PicComment struct {
	// pic_id is the unique identifier for the pic, in varint form
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// comment_id is the unique identifier for the comment, in varint form
	CommentId string `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	// comment_parent_id is the unique identifier for the parent comment, in varint form
	CommentParentId string `protobuf:"bytes,3,opt,name=comment_parent_id,json=commentParentId,proto3" json:"comment_parent_id,omitempty"`
	Text            string `protobuf:"bytes,7,opt,name=text,proto3" json:"text,omitempty"`
	// created_time is when the tag was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the tag was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// version is the version of the tag.  It is used when updating the tag.
	Version int64 `protobuf:"fixed64,6,opt,name=version,proto3" json:"version,omitempty"`
	// The user id of comment author.  May be absent.
	UserId               *wrappers.StringValue `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PicComment) Reset()         { *m = PicComment{} }
func (m *PicComment) String() string { return proto.CompactTextString(m) }
func (*PicComment) ProtoMessage()    {}
func (*PicComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *PicComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicComment.Unmarshal(m, b)
}
func (m *PicComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicComment.Marshal(b, m, deterministic)
}
func (m *PicComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicComment.Merge(m, src)
}
func (m *PicComment) XXX_Size() int {
	return xxx_messageInfo_PicComment.Size(m)
}
func (m *PicComment) XXX_DiscardUnknown() {
	xxx_messageInfo_PicComment.DiscardUnknown(m)
}

var xxx_messageInfo_PicComment proto.InternalMessageInfo

func (m *PicComment) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *PicComment) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *PicComment) GetCommentParentId() string {
	if m != nil {
		return m.CommentParentId
	}
	return ""
}

func (m *PicComment) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *PicComment) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *PicComment) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

func (m *PicComment) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *PicComment) GetUserId() *wrappers.StringValue {
	if m != nil {
		return m.UserId
	}
	return nil
}

type PicVote struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// user_id is the user who created this vote.  May be absent if unknown or due to lack of access.
	UserId               *wrappers.StringValue `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Vote                 PicVote_Vote          `protobuf:"varint,3,opt,name=vote,proto3,enum=pixur.api.PicVote_Vote" json:"vote,omitempty"`
	Version              int64                 `protobuf:"fixed64,4,opt,name=version,proto3" json:"version,omitempty"`
	CreatedTime          *timestamp.Timestamp  `protobuf:"bytes,5,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	ModifiedTime         *timestamp.Timestamp  `protobuf:"bytes,6,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PicVote) Reset()         { *m = PicVote{} }
func (m *PicVote) String() string { return proto.CompactTextString(m) }
func (*PicVote) ProtoMessage()    {}
func (*PicVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *PicVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicVote.Unmarshal(m, b)
}
func (m *PicVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicVote.Marshal(b, m, deterministic)
}
func (m *PicVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicVote.Merge(m, src)
}
func (m *PicVote) XXX_Size() int {
	return xxx_messageInfo_PicVote.Size(m)
}
func (m *PicVote) XXX_DiscardUnknown() {
	xxx_messageInfo_PicVote.DiscardUnknown(m)
}

var xxx_messageInfo_PicVote proto.InternalMessageInfo

func (m *PicVote) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *PicVote) GetUserId() *wrappers.StringValue {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *PicVote) GetVote() PicVote_Vote {
	if m != nil {
		return m.Vote
	}
	return PicVote_UNKNOWN
}

func (m *PicVote) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *PicVote) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *PicVote) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

type User struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Ident  string `protobuf:"bytes,2,opt,name=ident,proto3" json:"ident,omitempty"`
	// created_time is when the user was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// modified_time is when the user was last modified.
	ModifiedTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
	// modified_time is when the user was last modified.
	LastSeenTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=last_seen_time,json=lastSeenTime,proto3" json:"last_seen_time,omitempty"`
	// version is the version of the user.  It is used when updating the user.
	Version              int64            `protobuf:"fixed64,6,opt,name=version,proto3" json:"version,omitempty"`
	Capability           []Capability_Cap `protobuf:"varint,7,rep,packed,name=capability,proto3,enum=pixur.api.Capability_Cap" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *User) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *User) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *User) GetModifiedTime() *timestamp.Timestamp {
	if m != nil {
		return m.ModifiedTime
	}
	return nil
}

func (m *User) GetLastSeenTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastSeenTime
	}
	return nil
}

func (m *User) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *User) GetCapability() []Capability_Cap {
	if m != nil {
		return m.Capability
	}
	return nil
}

type Capability struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Capability) Reset()         { *m = Capability{} }
func (m *Capability) String() string { return proto.CompactTextString(m) }
func (*Capability) ProtoMessage()    {}
func (*Capability) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *Capability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Capability.Unmarshal(m, b)
}
func (m *Capability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Capability.Marshal(b, m, deterministic)
}
func (m *Capability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Capability.Merge(m, src)
}
func (m *Capability) XXX_Size() int {
	return xxx_messageInfo_Capability.Size(m)
}
func (m *Capability) XXX_DiscardUnknown() {
	xxx_messageInfo_Capability.DiscardUnknown(m)
}

var xxx_messageInfo_Capability proto.InternalMessageInfo

// BackendConfiguration is the backend configuration used by Pixur.  All fields are optional
// unless explicitly called out.
type BackendConfiguration struct {
	// the minimum comment length in bytes.
	MinCommentLength *wrappers.Int64Value `protobuf:"bytes,1,opt,name=min_comment_length,json=minCommentLength,proto3" json:"min_comment_length,omitempty"`
	// the maximum comment length in bytes.
	MaxCommentLength *wrappers.Int64Value `protobuf:"bytes,2,opt,name=max_comment_length,json=maxCommentLength,proto3" json:"max_comment_length,omitempty"`
	// the minimum ident length for a user in bytes.
	MinIdentLength *wrappers.Int64Value `protobuf:"bytes,3,opt,name=min_ident_length,json=minIdentLength,proto3" json:"min_ident_length,omitempty"`
	// the maximum ident length for a user in bytes.
	MaxIdentLength *wrappers.Int64Value `protobuf:"bytes,4,opt,name=max_ident_length,json=maxIdentLength,proto3" json:"max_ident_length,omitempty"`
	// the minimum file name length in bytes.
	MinFileNameLength *wrappers.Int64Value `protobuf:"bytes,5,opt,name=min_file_name_length,json=minFileNameLength,proto3" json:"min_file_name_length,omitempty"`
	// the maximum file name length in bytes.
	MaxFileNameLength *wrappers.Int64Value `protobuf:"bytes,6,opt,name=max_file_name_length,json=maxFileNameLength,proto3" json:"max_file_name_length,omitempty"`
	// the minimum url length for pic upsert in bytes.
	MinUrlLength *wrappers.Int64Value `protobuf:"bytes,7,opt,name=min_url_length,json=minUrlLength,proto3" json:"min_url_length,omitempty"`
	// the maximum url length for pic upsert in bytes.
	MaxUrlLength *wrappers.Int64Value `protobuf:"bytes,8,opt,name=max_url_length,json=maxUrlLength,proto3" json:"max_url_length,omitempty"`
	// the minimum tag length in bytes.
	MinTagLength *wrappers.Int64Value `protobuf:"bytes,9,opt,name=min_tag_length,json=minTagLength,proto3" json:"min_tag_length,omitempty"`
	// the maximum tag length in bytes.
	MaxTagLength *wrappers.Int64Value `protobuf:"bytes,10,opt,name=max_tag_length,json=maxTagLength,proto3" json:"max_tag_length,omitempty"`
	// the capabilities of the anonymous user.
	AnonymousCapability *BackendConfiguration_CapabilitySet `protobuf:"bytes,11,opt,name=anonymous_capability,json=anonymousCapability,proto3" json:"anonymous_capability,omitempty"`
	// the capabilities of a newly created user.
	NewUserCapability *BackendConfiguration_CapabilitySet `protobuf:"bytes,12,opt,name=new_user_capability,json=newUserCapability,proto3" json:"new_user_capability,omitempty"`
	// the default number of index pics to return
	DefaultFindIndexPics *wrappers.Int64Value `protobuf:"bytes,13,opt,name=default_find_index_pics,json=defaultFindIndexPics,proto3" json:"default_find_index_pics,omitempty"`
	// the max number of index pics to return
	MaxFindIndexPics *wrappers.Int64Value `protobuf:"bytes,14,opt,name=max_find_index_pics,json=maxFindIndexPics,proto3" json:"max_find_index_pics,omitempty"`
	// the max duration a WEBM pic can be
	MaxWebmDuration *duration.Duration `protobuf:"bytes,15,opt,name=max_webm_duration,json=maxWebmDuration,proto3" json:"max_webm_duration,omitempty"`
	// allows users to reply to their own comments
	EnablePicCommentSelfReply *wrappers.BoolValue `protobuf:"bytes,16,opt,name=enable_pic_comment_self_reply,json=enablePicCommentSelfReply,proto3" json:"enable_pic_comment_self_reply,omitempty"`
	// allows a single user to reply multiple times to one comment
	EnablePicCommentSiblingReply *wrappers.BoolValue `protobuf:"bytes,17,opt,name=enable_pic_comment_sibling_reply,json=enablePicCommentSiblingReply,proto3" json:"enable_pic_comment_sibling_reply,omitempty"`
	// the default number of user events to return
	DefaultFindUserEvents *wrappers.Int64Value `protobuf:"bytes,18,opt,name=default_find_user_events,json=defaultFindUserEvents,proto3" json:"default_find_user_events,omitempty"`
	// the max number of user events to return
	MaxFindUserEvents    *wrappers.Int64Value `protobuf:"bytes,19,opt,name=max_find_user_events,json=maxFindUserEvents,proto3" json:"max_find_user_events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BackendConfiguration) Reset()         { *m = BackendConfiguration{} }
func (m *BackendConfiguration) String() string { return proto.CompactTextString(m) }
func (*BackendConfiguration) ProtoMessage()    {}
func (*BackendConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *BackendConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendConfiguration.Unmarshal(m, b)
}
func (m *BackendConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendConfiguration.Marshal(b, m, deterministic)
}
func (m *BackendConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendConfiguration.Merge(m, src)
}
func (m *BackendConfiguration) XXX_Size() int {
	return xxx_messageInfo_BackendConfiguration.Size(m)
}
func (m *BackendConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_BackendConfiguration proto.InternalMessageInfo

func (m *BackendConfiguration) GetMinCommentLength() *wrappers.Int64Value {
	if m != nil {
		return m.MinCommentLength
	}
	return nil
}

func (m *BackendConfiguration) GetMaxCommentLength() *wrappers.Int64Value {
	if m != nil {
		return m.MaxCommentLength
	}
	return nil
}

func (m *BackendConfiguration) GetMinIdentLength() *wrappers.Int64Value {
	if m != nil {
		return m.MinIdentLength
	}
	return nil
}

func (m *BackendConfiguration) GetMaxIdentLength() *wrappers.Int64Value {
	if m != nil {
		return m.MaxIdentLength
	}
	return nil
}

func (m *BackendConfiguration) GetMinFileNameLength() *wrappers.Int64Value {
	if m != nil {
		return m.MinFileNameLength
	}
	return nil
}

func (m *BackendConfiguration) GetMaxFileNameLength() *wrappers.Int64Value {
	if m != nil {
		return m.MaxFileNameLength
	}
	return nil
}

func (m *BackendConfiguration) GetMinUrlLength() *wrappers.Int64Value {
	if m != nil {
		return m.MinUrlLength
	}
	return nil
}

func (m *BackendConfiguration) GetMaxUrlLength() *wrappers.Int64Value {
	if m != nil {
		return m.MaxUrlLength
	}
	return nil
}

func (m *BackendConfiguration) GetMinTagLength() *wrappers.Int64Value {
	if m != nil {
		return m.MinTagLength
	}
	return nil
}

func (m *BackendConfiguration) GetMaxTagLength() *wrappers.Int64Value {
	if m != nil {
		return m.MaxTagLength
	}
	return nil
}

func (m *BackendConfiguration) GetAnonymousCapability() *BackendConfiguration_CapabilitySet {
	if m != nil {
		return m.AnonymousCapability
	}
	return nil
}

func (m *BackendConfiguration) GetNewUserCapability() *BackendConfiguration_CapabilitySet {
	if m != nil {
		return m.NewUserCapability
	}
	return nil
}

func (m *BackendConfiguration) GetDefaultFindIndexPics() *wrappers.Int64Value {
	if m != nil {
		return m.DefaultFindIndexPics
	}
	return nil
}

func (m *BackendConfiguration) GetMaxFindIndexPics() *wrappers.Int64Value {
	if m != nil {
		return m.MaxFindIndexPics
	}
	return nil
}

func (m *BackendConfiguration) GetMaxWebmDuration() *duration.Duration {
	if m != nil {
		return m.MaxWebmDuration
	}
	return nil
}

func (m *BackendConfiguration) GetEnablePicCommentSelfReply() *wrappers.BoolValue {
	if m != nil {
		return m.EnablePicCommentSelfReply
	}
	return nil
}

func (m *BackendConfiguration) GetEnablePicCommentSiblingReply() *wrappers.BoolValue {
	if m != nil {
		return m.EnablePicCommentSiblingReply
	}
	return nil
}

func (m *BackendConfiguration) GetDefaultFindUserEvents() *wrappers.Int64Value {
	if m != nil {
		return m.DefaultFindUserEvents
	}
	return nil
}

func (m *BackendConfiguration) GetMaxFindUserEvents() *wrappers.Int64Value {
	if m != nil {
		return m.MaxFindUserEvents
	}
	return nil
}

type BackendConfiguration_CapabilitySet struct {
	Capability           []Capability_Cap `protobuf:"varint,1,rep,packed,name=capability,proto3,enum=pixur.api.Capability_Cap" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *BackendConfiguration_CapabilitySet) Reset()         { *m = BackendConfiguration_CapabilitySet{} }
func (m *BackendConfiguration_CapabilitySet) String() string { return proto.CompactTextString(m) }
func (*BackendConfiguration_CapabilitySet) ProtoMessage()    {}
func (*BackendConfiguration_CapabilitySet) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8, 0}
}

func (m *BackendConfiguration_CapabilitySet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackendConfiguration_CapabilitySet.Unmarshal(m, b)
}
func (m *BackendConfiguration_CapabilitySet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackendConfiguration_CapabilitySet.Marshal(b, m, deterministic)
}
func (m *BackendConfiguration_CapabilitySet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackendConfiguration_CapabilitySet.Merge(m, src)
}
func (m *BackendConfiguration_CapabilitySet) XXX_Size() int {
	return xxx_messageInfo_BackendConfiguration_CapabilitySet.Size(m)
}
func (m *BackendConfiguration_CapabilitySet) XXX_DiscardUnknown() {
	xxx_messageInfo_BackendConfiguration_CapabilitySet.DiscardUnknown(m)
}

var xxx_messageInfo_BackendConfiguration_CapabilitySet proto.InternalMessageInfo

func (m *BackendConfiguration_CapabilitySet) GetCapability() []Capability_Cap {
	if m != nil {
		return m.Capability
	}
	return nil
}

type UserEvent struct {
	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEventId string `protobuf:"bytes,2,opt,name=user_event_id,json=userEventId,proto3" json:"user_event_id,omitempty"`
	// created_time is when the user event was created.
	CreatedTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	// Types that are valid to be assigned to Evt:
	//	*UserEvent_OutgoingUpsertPicVote_
	//	*UserEvent_IncomingUpsertPicVote_
	//	*UserEvent_OutgoingPicComment_
	//	*UserEvent_IncomingPicComment_
	//	*UserEvent_UpsertPic_
	Evt                  isUserEvent_Evt `protobuf_oneof:"evt"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UserEvent) Reset()         { *m = UserEvent{} }
func (m *UserEvent) String() string { return proto.CompactTextString(m) }
func (*UserEvent) ProtoMessage()    {}
func (*UserEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *UserEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEvent.Unmarshal(m, b)
}
func (m *UserEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEvent.Marshal(b, m, deterministic)
}
func (m *UserEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEvent.Merge(m, src)
}
func (m *UserEvent) XXX_Size() int {
	return xxx_messageInfo_UserEvent.Size(m)
}
func (m *UserEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UserEvent proto.InternalMessageInfo

func (m *UserEvent) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserEvent) GetUserEventId() string {
	if m != nil {
		return m.UserEventId
	}
	return ""
}

func (m *UserEvent) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

type isUserEvent_Evt interface {
	isUserEvent_Evt()
}

type UserEvent_OutgoingUpsertPicVote_ struct {
	OutgoingUpsertPicVote *UserEvent_OutgoingUpsertPicVote `protobuf:"bytes,4,opt,name=outgoing_upsert_pic_vote,json=outgoingUpsertPicVote,proto3,oneof"`
}

type UserEvent_IncomingUpsertPicVote_ struct {
	IncomingUpsertPicVote *UserEvent_IncomingUpsertPicVote `protobuf:"bytes,5,opt,name=incoming_upsert_pic_vote,json=incomingUpsertPicVote,proto3,oneof"`
}

type UserEvent_OutgoingPicComment_ struct {
	OutgoingPicComment *UserEvent_OutgoingPicComment `protobuf:"bytes,6,opt,name=outgoing_pic_comment,json=outgoingPicComment,proto3,oneof"`
}

type UserEvent_IncomingPicComment_ struct {
	IncomingPicComment *UserEvent_IncomingPicComment `protobuf:"bytes,7,opt,name=incoming_pic_comment,json=incomingPicComment,proto3,oneof"`
}

type UserEvent_UpsertPic_ struct {
	UpsertPic *UserEvent_UpsertPic `protobuf:"bytes,8,opt,name=upsert_pic,json=upsertPic,proto3,oneof"`
}

func (*UserEvent_OutgoingUpsertPicVote_) isUserEvent_Evt() {}

func (*UserEvent_IncomingUpsertPicVote_) isUserEvent_Evt() {}

func (*UserEvent_OutgoingPicComment_) isUserEvent_Evt() {}

func (*UserEvent_IncomingPicComment_) isUserEvent_Evt() {}

func (*UserEvent_UpsertPic_) isUserEvent_Evt() {}

func (m *UserEvent) GetEvt() isUserEvent_Evt {
	if m != nil {
		return m.Evt
	}
	return nil
}

func (m *UserEvent) GetOutgoingUpsertPicVote() *UserEvent_OutgoingUpsertPicVote {
	if x, ok := m.GetEvt().(*UserEvent_OutgoingUpsertPicVote_); ok {
		return x.OutgoingUpsertPicVote
	}
	return nil
}

func (m *UserEvent) GetIncomingUpsertPicVote() *UserEvent_IncomingUpsertPicVote {
	if x, ok := m.GetEvt().(*UserEvent_IncomingUpsertPicVote_); ok {
		return x.IncomingUpsertPicVote
	}
	return nil
}

func (m *UserEvent) GetOutgoingPicComment() *UserEvent_OutgoingPicComment {
	if x, ok := m.GetEvt().(*UserEvent_OutgoingPicComment_); ok {
		return x.OutgoingPicComment
	}
	return nil
}

func (m *UserEvent) GetIncomingPicComment() *UserEvent_IncomingPicComment {
	if x, ok := m.GetEvt().(*UserEvent_IncomingPicComment_); ok {
		return x.IncomingPicComment
	}
	return nil
}

func (m *UserEvent) GetUpsertPic() *UserEvent_UpsertPic {
	if x, ok := m.GetEvt().(*UserEvent_UpsertPic_); ok {
		return x.UpsertPic
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UserEvent) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UserEvent_OneofMarshaler, _UserEvent_OneofUnmarshaler, _UserEvent_OneofSizer, []interface{}{
		(*UserEvent_OutgoingUpsertPicVote_)(nil),
		(*UserEvent_IncomingUpsertPicVote_)(nil),
		(*UserEvent_OutgoingPicComment_)(nil),
		(*UserEvent_IncomingPicComment_)(nil),
		(*UserEvent_UpsertPic_)(nil),
	}
}

func _UserEvent_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UserEvent)
	// evt
	switch x := m.Evt.(type) {
	case *UserEvent_OutgoingUpsertPicVote_:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OutgoingUpsertPicVote); err != nil {
			return err
		}
	case *UserEvent_IncomingUpsertPicVote_:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IncomingUpsertPicVote); err != nil {
			return err
		}
	case *UserEvent_OutgoingPicComment_:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OutgoingPicComment); err != nil {
			return err
		}
	case *UserEvent_IncomingPicComment_:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IncomingPicComment); err != nil {
			return err
		}
	case *UserEvent_UpsertPic_:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UpsertPic); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UserEvent.Evt has unexpected type %T", x)
	}
	return nil
}

func _UserEvent_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UserEvent)
	switch tag {
	case 4: // evt.outgoing_upsert_pic_vote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserEvent_OutgoingUpsertPicVote)
		err := b.DecodeMessage(msg)
		m.Evt = &UserEvent_OutgoingUpsertPicVote_{msg}
		return true, err
	case 5: // evt.incoming_upsert_pic_vote
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserEvent_IncomingUpsertPicVote)
		err := b.DecodeMessage(msg)
		m.Evt = &UserEvent_IncomingUpsertPicVote_{msg}
		return true, err
	case 6: // evt.outgoing_pic_comment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserEvent_OutgoingPicComment)
		err := b.DecodeMessage(msg)
		m.Evt = &UserEvent_OutgoingPicComment_{msg}
		return true, err
	case 7: // evt.incoming_pic_comment
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserEvent_IncomingPicComment)
		err := b.DecodeMessage(msg)
		m.Evt = &UserEvent_IncomingPicComment_{msg}
		return true, err
	case 8: // evt.upsert_pic
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UserEvent_UpsertPic)
		err := b.DecodeMessage(msg)
		m.Evt = &UserEvent_UpsertPic_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UserEvent_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UserEvent)
	// evt
	switch x := m.Evt.(type) {
	case *UserEvent_OutgoingUpsertPicVote_:
		s := proto.Size(x.OutgoingUpsertPicVote)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UserEvent_IncomingUpsertPicVote_:
		s := proto.Size(x.IncomingUpsertPicVote)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UserEvent_OutgoingPicComment_:
		s := proto.Size(x.OutgoingPicComment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UserEvent_IncomingPicComment_:
		s := proto.Size(x.IncomingPicComment)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UserEvent_UpsertPic_:
		s := proto.Size(x.UpsertPic)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// IncomingUpsertPicVote represents sending a vote on a pic another user made.  If a user
// self-votes, OutgoingUpsertPicVote will be created instead of IncomingUpsertPicVote.
type UserEvent_OutgoingUpsertPicVote struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEvent_OutgoingUpsertPicVote) Reset()         { *m = UserEvent_OutgoingUpsertPicVote{} }
func (m *UserEvent_OutgoingUpsertPicVote) String() string { return proto.CompactTextString(m) }
func (*UserEvent_OutgoingUpsertPicVote) ProtoMessage()    {}
func (*UserEvent_OutgoingUpsertPicVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9, 0}
}

func (m *UserEvent_OutgoingUpsertPicVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEvent_OutgoingUpsertPicVote.Unmarshal(m, b)
}
func (m *UserEvent_OutgoingUpsertPicVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEvent_OutgoingUpsertPicVote.Marshal(b, m, deterministic)
}
func (m *UserEvent_OutgoingUpsertPicVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEvent_OutgoingUpsertPicVote.Merge(m, src)
}
func (m *UserEvent_OutgoingUpsertPicVote) XXX_Size() int {
	return xxx_messageInfo_UserEvent_OutgoingUpsertPicVote.Size(m)
}
func (m *UserEvent_OutgoingUpsertPicVote) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEvent_OutgoingUpsertPicVote.DiscardUnknown(m)
}

var xxx_messageInfo_UserEvent_OutgoingUpsertPicVote proto.InternalMessageInfo

func (m *UserEvent_OutgoingUpsertPicVote) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

// IncomingUpsertPicVote represents receiving a vote on a pic they made.  If a user
// self-votes, OutgoingUpsertPicVote will be created instead of IncomingUpsertPicVote.
type UserEvent_IncomingUpsertPicVote struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// The user who made the vote.  May be absent
	SubjectUserId        string   `protobuf:"bytes,2,opt,name=subject_user_id,json=subjectUserId,proto3" json:"subject_user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEvent_IncomingUpsertPicVote) Reset()         { *m = UserEvent_IncomingUpsertPicVote{} }
func (m *UserEvent_IncomingUpsertPicVote) String() string { return proto.CompactTextString(m) }
func (*UserEvent_IncomingUpsertPicVote) ProtoMessage()    {}
func (*UserEvent_IncomingUpsertPicVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9, 1}
}

func (m *UserEvent_IncomingUpsertPicVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEvent_IncomingUpsertPicVote.Unmarshal(m, b)
}
func (m *UserEvent_IncomingUpsertPicVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEvent_IncomingUpsertPicVote.Marshal(b, m, deterministic)
}
func (m *UserEvent_IncomingUpsertPicVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEvent_IncomingUpsertPicVote.Merge(m, src)
}
func (m *UserEvent_IncomingUpsertPicVote) XXX_Size() int {
	return xxx_messageInfo_UserEvent_IncomingUpsertPicVote.Size(m)
}
func (m *UserEvent_IncomingUpsertPicVote) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEvent_IncomingUpsertPicVote.DiscardUnknown(m)
}

var xxx_messageInfo_UserEvent_IncomingUpsertPicVote proto.InternalMessageInfo

func (m *UserEvent_IncomingUpsertPicVote) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *UserEvent_IncomingUpsertPicVote) GetSubjectUserId() string {
	if m != nil {
		return m.SubjectUserId
	}
	return ""
}

// OutgoingPicComment represents commenting on someone else's pic.  If a user comments on
// their own pic, OutgoingPicComment will be used instead of IncomingPicComment.
type UserEvent_OutgoingPicComment struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// comment_id is the comment that this user created.
	CommentId            string   `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEvent_OutgoingPicComment) Reset()         { *m = UserEvent_OutgoingPicComment{} }
func (m *UserEvent_OutgoingPicComment) String() string { return proto.CompactTextString(m) }
func (*UserEvent_OutgoingPicComment) ProtoMessage()    {}
func (*UserEvent_OutgoingPicComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9, 2}
}

func (m *UserEvent_OutgoingPicComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEvent_OutgoingPicComment.Unmarshal(m, b)
}
func (m *UserEvent_OutgoingPicComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEvent_OutgoingPicComment.Marshal(b, m, deterministic)
}
func (m *UserEvent_OutgoingPicComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEvent_OutgoingPicComment.Merge(m, src)
}
func (m *UserEvent_OutgoingPicComment) XXX_Size() int {
	return xxx_messageInfo_UserEvent_OutgoingPicComment.Size(m)
}
func (m *UserEvent_OutgoingPicComment) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEvent_OutgoingPicComment.DiscardUnknown(m)
}

var xxx_messageInfo_UserEvent_OutgoingPicComment proto.InternalMessageInfo

func (m *UserEvent_OutgoingPicComment) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *UserEvent_OutgoingPicComment) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

// IncomingPicComment represents commenting on someone else's pic.  If a user comments on
// their own pic, OutgoingPicComment will be used instead of IncomingPicComment.
type UserEvent_IncomingPicComment struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// comment_id is the newly created child comment, **not** the one owned by user_id.  The
	// comment_parent_id of the given comment is owned by user_id.
	CommentId            string   `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	CommentParentId      string   `protobuf:"bytes,3,opt,name=comment_parent_id,json=commentParentId,proto3" json:"comment_parent_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEvent_IncomingPicComment) Reset()         { *m = UserEvent_IncomingPicComment{} }
func (m *UserEvent_IncomingPicComment) String() string { return proto.CompactTextString(m) }
func (*UserEvent_IncomingPicComment) ProtoMessage()    {}
func (*UserEvent_IncomingPicComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9, 3}
}

func (m *UserEvent_IncomingPicComment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEvent_IncomingPicComment.Unmarshal(m, b)
}
func (m *UserEvent_IncomingPicComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEvent_IncomingPicComment.Marshal(b, m, deterministic)
}
func (m *UserEvent_IncomingPicComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEvent_IncomingPicComment.Merge(m, src)
}
func (m *UserEvent_IncomingPicComment) XXX_Size() int {
	return xxx_messageInfo_UserEvent_IncomingPicComment.Size(m)
}
func (m *UserEvent_IncomingPicComment) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEvent_IncomingPicComment.DiscardUnknown(m)
}

var xxx_messageInfo_UserEvent_IncomingPicComment proto.InternalMessageInfo

func (m *UserEvent_IncomingPicComment) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *UserEvent_IncomingPicComment) GetCommentId() string {
	if m != nil {
		return m.CommentId
	}
	return ""
}

func (m *UserEvent_IncomingPicComment) GetCommentParentId() string {
	if m != nil {
		return m.CommentParentId
	}
	return ""
}

type UserEvent_UpsertPic struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserEvent_UpsertPic) Reset()         { *m = UserEvent_UpsertPic{} }
func (m *UserEvent_UpsertPic) String() string { return proto.CompactTextString(m) }
func (*UserEvent_UpsertPic) ProtoMessage()    {}
func (*UserEvent_UpsertPic) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9, 4}
}

func (m *UserEvent_UpsertPic) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEvent_UpsertPic.Unmarshal(m, b)
}
func (m *UserEvent_UpsertPic) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEvent_UpsertPic.Marshal(b, m, deterministic)
}
func (m *UserEvent_UpsertPic) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEvent_UpsertPic.Merge(m, src)
}
func (m *UserEvent_UpsertPic) XXX_Size() int {
	return xxx_messageInfo_UserEvent_UpsertPic.Size(m)
}
func (m *UserEvent_UpsertPic) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEvent_UpsertPic.DiscardUnknown(m)
}

var xxx_messageInfo_UserEvent_UpsertPic proto.InternalMessageInfo

func (m *UserEvent_UpsertPic) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type LookupUserRequest struct {
	// if absent, assumed to come from auth token
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupUserRequest) Reset()         { *m = LookupUserRequest{} }
func (m *LookupUserRequest) String() string { return proto.CompactTextString(m) }
func (*LookupUserRequest) ProtoMessage()    {}
func (*LookupUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *LookupUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupUserRequest.Unmarshal(m, b)
}
func (m *LookupUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupUserRequest.Marshal(b, m, deterministic)
}
func (m *LookupUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupUserRequest.Merge(m, src)
}
func (m *LookupUserRequest) XXX_Size() int {
	return xxx_messageInfo_LookupUserRequest.Size(m)
}
func (m *LookupUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupUserRequest proto.InternalMessageInfo

func (m *LookupUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LookupUserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupUserResponse) Reset()         { *m = LookupUserResponse{} }
func (m *LookupUserResponse) String() string { return proto.CompactTextString(m) }
func (*LookupUserResponse) ProtoMessage()    {}
func (*LookupUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *LookupUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupUserResponse.Unmarshal(m, b)
}
func (m *LookupUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupUserResponse.Marshal(b, m, deterministic)
}
func (m *LookupUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupUserResponse.Merge(m, src)
}
func (m *LookupUserResponse) XXX_Size() int {
	return xxx_messageInfo_LookupUserResponse.Size(m)
}
func (m *LookupUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupUserResponse proto.InternalMessageInfo

func (m *LookupUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateUserRequest struct {
	UserId               string                              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Version              int64                               `protobuf:"fixed64,2,opt,name=version,proto3" json:"version,omitempty"`
	Ident                *UpdateUserRequest_ChangeIdent      `protobuf:"bytes,3,opt,name=ident,proto3" json:"ident,omitempty"`
	Secret               *UpdateUserRequest_ChangeSecret     `protobuf:"bytes,4,opt,name=secret,proto3" json:"secret,omitempty"`
	Capability           *UpdateUserRequest_ChangeCapability `protobuf:"bytes,5,opt,name=capability,proto3" json:"capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateUserRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UpdateUserRequest) GetIdent() *UpdateUserRequest_ChangeIdent {
	if m != nil {
		return m.Ident
	}
	return nil
}

func (m *UpdateUserRequest) GetSecret() *UpdateUserRequest_ChangeSecret {
	if m != nil {
		return m.Secret
	}
	return nil
}

func (m *UpdateUserRequest) GetCapability() *UpdateUserRequest_ChangeCapability {
	if m != nil {
		return m.Capability
	}
	return nil
}

type UpdateUserRequest_ChangeIdent struct {
	Ident                string   `protobuf:"bytes,1,opt,name=ident,proto3" json:"ident,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest_ChangeIdent) Reset()         { *m = UpdateUserRequest_ChangeIdent{} }
func (m *UpdateUserRequest_ChangeIdent) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_ChangeIdent) ProtoMessage()    {}
func (*UpdateUserRequest_ChangeIdent) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12, 0}
}

func (m *UpdateUserRequest_ChangeIdent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_ChangeIdent.Unmarshal(m, b)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_ChangeIdent.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_ChangeIdent.Merge(m, src)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_ChangeIdent.Size(m)
}
func (m *UpdateUserRequest_ChangeIdent) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_ChangeIdent.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_ChangeIdent proto.InternalMessageInfo

func (m *UpdateUserRequest_ChangeIdent) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

type UpdateUserRequest_ChangeSecret struct {
	Secret               string   `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserRequest_ChangeSecret) Reset()         { *m = UpdateUserRequest_ChangeSecret{} }
func (m *UpdateUserRequest_ChangeSecret) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_ChangeSecret) ProtoMessage()    {}
func (*UpdateUserRequest_ChangeSecret) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12, 1}
}

func (m *UpdateUserRequest_ChangeSecret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_ChangeSecret.Unmarshal(m, b)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_ChangeSecret.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_ChangeSecret.Merge(m, src)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_ChangeSecret.Size(m)
}
func (m *UpdateUserRequest_ChangeSecret) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_ChangeSecret.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_ChangeSecret proto.InternalMessageInfo

func (m *UpdateUserRequest_ChangeSecret) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type UpdateUserRequest_ChangeCapability struct {
	SetCapability        []Capability_Cap `protobuf:"varint,1,rep,packed,name=set_capability,json=setCapability,proto3,enum=pixur.api.Capability_Cap" json:"set_capability,omitempty"`
	ClearCapability      []Capability_Cap `protobuf:"varint,2,rep,packed,name=clear_capability,json=clearCapability,proto3,enum=pixur.api.Capability_Cap" json:"clear_capability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateUserRequest_ChangeCapability) Reset()         { *m = UpdateUserRequest_ChangeCapability{} }
func (m *UpdateUserRequest_ChangeCapability) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest_ChangeCapability) ProtoMessage()    {}
func (*UpdateUserRequest_ChangeCapability) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12, 2}
}

func (m *UpdateUserRequest_ChangeCapability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest_ChangeCapability.Unmarshal(m, b)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest_ChangeCapability.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest_ChangeCapability.Merge(m, src)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest_ChangeCapability.Size(m)
}
func (m *UpdateUserRequest_ChangeCapability) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest_ChangeCapability.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest_ChangeCapability proto.InternalMessageInfo

func (m *UpdateUserRequest_ChangeCapability) GetSetCapability() []Capability_Cap {
	if m != nil {
		return m.SetCapability
	}
	return nil
}

func (m *UpdateUserRequest_ChangeCapability) GetClearCapability() []Capability_Cap {
	if m != nil {
		return m.ClearCapability
	}
	return nil
}

type UpdateUserResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserResponse) Reset()         { *m = UpdateUserResponse{} }
func (m *UpdateUserResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateUserResponse) ProtoMessage()    {}
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *UpdateUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserResponse.Unmarshal(m, b)
}
func (m *UpdateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserResponse.Marshal(b, m, deterministic)
}
func (m *UpdateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserResponse.Merge(m, src)
}
func (m *UpdateUserResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateUserResponse.Size(m)
}
func (m *UpdateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserResponse proto.InternalMessageInfo

func (m *UpdateUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type PicCommentTree struct {
	// All comments, ordered by a post order traversal.  Protobuf does not handle deeply nested
	// messages well.
	Comment              []*PicComment `protobuf:"bytes,1,rep,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PicCommentTree) Reset()         { *m = PicCommentTree{} }
func (m *PicCommentTree) String() string { return proto.CompactTextString(m) }
func (*PicCommentTree) ProtoMessage()    {}
func (*PicCommentTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *PicCommentTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicCommentTree.Unmarshal(m, b)
}
func (m *PicCommentTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicCommentTree.Marshal(b, m, deterministic)
}
func (m *PicCommentTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicCommentTree.Merge(m, src)
}
func (m *PicCommentTree) XXX_Size() int {
	return xxx_messageInfo_PicCommentTree.Size(m)
}
func (m *PicCommentTree) XXX_DiscardUnknown() {
	xxx_messageInfo_PicCommentTree.DiscardUnknown(m)
}

var xxx_messageInfo_PicCommentTree proto.InternalMessageInfo

func (m *PicCommentTree) GetComment() []*PicComment {
	if m != nil {
		return m.Comment
	}
	return nil
}

type LookupPicDetailsRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicDetailsRequest) Reset()         { *m = LookupPicDetailsRequest{} }
func (m *LookupPicDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicDetailsRequest) ProtoMessage()    {}
func (*LookupPicDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *LookupPicDetailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicDetailsRequest.Unmarshal(m, b)
}
func (m *LookupPicDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicDetailsRequest.Marshal(b, m, deterministic)
}
func (m *LookupPicDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicDetailsRequest.Merge(m, src)
}
func (m *LookupPicDetailsRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicDetailsRequest.Size(m)
}
func (m *LookupPicDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicDetailsRequest proto.InternalMessageInfo

func (m *LookupPicDetailsRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type LookupPicDetailsResponse struct {
	Pic                  *Pic            `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	PicTag               []*PicTag       `protobuf:"bytes,2,rep,name=pic_tag,json=picTag,proto3" json:"pic_tag,omitempty"`
	PicCommentTree       *PicCommentTree `protobuf:"bytes,3,opt,name=pic_comment_tree,json=picCommentTree,proto3" json:"pic_comment_tree,omitempty"`
	PicFile              []*PicFile      `protobuf:"bytes,4,rep,name=pic_file,json=picFile,proto3" json:"pic_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LookupPicDetailsResponse) Reset()         { *m = LookupPicDetailsResponse{} }
func (m *LookupPicDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicDetailsResponse) ProtoMessage()    {}
func (*LookupPicDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *LookupPicDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicDetailsResponse.Unmarshal(m, b)
}
func (m *LookupPicDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicDetailsResponse.Marshal(b, m, deterministic)
}
func (m *LookupPicDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicDetailsResponse.Merge(m, src)
}
func (m *LookupPicDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicDetailsResponse.Size(m)
}
func (m *LookupPicDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicDetailsResponse proto.InternalMessageInfo

func (m *LookupPicDetailsResponse) GetPic() *Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

func (m *LookupPicDetailsResponse) GetPicTag() []*PicTag {
	if m != nil {
		return m.PicTag
	}
	return nil
}

func (m *LookupPicDetailsResponse) GetPicCommentTree() *PicCommentTree {
	if m != nil {
		return m.PicCommentTree
	}
	return nil
}

func (m *LookupPicDetailsResponse) GetPicFile() []*PicFile {
	if m != nil {
		return m.PicFile
	}
	return nil
}

type FindIndexPicsRequest struct {
	StartPicId           string   `protobuf:"bytes,1,opt,name=start_pic_id,json=startPicId,proto3" json:"start_pic_id,omitempty"`
	Ascending            bool     `protobuf:"varint,2,opt,name=ascending,proto3" json:"ascending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindIndexPicsRequest) Reset()         { *m = FindIndexPicsRequest{} }
func (m *FindIndexPicsRequest) String() string { return proto.CompactTextString(m) }
func (*FindIndexPicsRequest) ProtoMessage()    {}
func (*FindIndexPicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *FindIndexPicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindIndexPicsRequest.Unmarshal(m, b)
}
func (m *FindIndexPicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindIndexPicsRequest.Marshal(b, m, deterministic)
}
func (m *FindIndexPicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindIndexPicsRequest.Merge(m, src)
}
func (m *FindIndexPicsRequest) XXX_Size() int {
	return xxx_messageInfo_FindIndexPicsRequest.Size(m)
}
func (m *FindIndexPicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindIndexPicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindIndexPicsRequest proto.InternalMessageInfo

func (m *FindIndexPicsRequest) GetStartPicId() string {
	if m != nil {
		return m.StartPicId
	}
	return ""
}

func (m *FindIndexPicsRequest) GetAscending() bool {
	if m != nil {
		return m.Ascending
	}
	return false
}

type FindIndexPicsResponse struct {
	Pic []*Pic `protobuf:"bytes,1,rep,name=pic,proto3" json:"pic,omitempty"`
	// if set, this field is the next pic id as a
	// continuation token.
	NextPicId string `protobuf:"bytes,2,opt,name=next_pic_id,json=nextPicId,proto3" json:"next_pic_id,omitempty"`
	// if set, this field is the previous pic id as a
	// continuation token.
	PrevPicId            string   `protobuf:"bytes,3,opt,name=prev_pic_id,json=prevPicId,proto3" json:"prev_pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindIndexPicsResponse) Reset()         { *m = FindIndexPicsResponse{} }
func (m *FindIndexPicsResponse) String() string { return proto.CompactTextString(m) }
func (*FindIndexPicsResponse) ProtoMessage()    {}
func (*FindIndexPicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *FindIndexPicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindIndexPicsResponse.Unmarshal(m, b)
}
func (m *FindIndexPicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindIndexPicsResponse.Marshal(b, m, deterministic)
}
func (m *FindIndexPicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindIndexPicsResponse.Merge(m, src)
}
func (m *FindIndexPicsResponse) XXX_Size() int {
	return xxx_messageInfo_FindIndexPicsResponse.Size(m)
}
func (m *FindIndexPicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindIndexPicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindIndexPicsResponse proto.InternalMessageInfo

func (m *FindIndexPicsResponse) GetPic() []*Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

func (m *FindIndexPicsResponse) GetNextPicId() string {
	if m != nil {
		return m.NextPicId
	}
	return ""
}

func (m *FindIndexPicsResponse) GetPrevPicId() string {
	if m != nil {
		return m.PrevPicId
	}
	return ""
}

type FindSchedPicsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSchedPicsRequest) Reset()         { *m = FindSchedPicsRequest{} }
func (m *FindSchedPicsRequest) String() string { return proto.CompactTextString(m) }
func (*FindSchedPicsRequest) ProtoMessage()    {}
func (*FindSchedPicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *FindSchedPicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSchedPicsRequest.Unmarshal(m, b)
}
func (m *FindSchedPicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSchedPicsRequest.Marshal(b, m, deterministic)
}
func (m *FindSchedPicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSchedPicsRequest.Merge(m, src)
}
func (m *FindSchedPicsRequest) XXX_Size() int {
	return xxx_messageInfo_FindSchedPicsRequest.Size(m)
}
func (m *FindSchedPicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSchedPicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindSchedPicsRequest proto.InternalMessageInfo

type FindSchedPicsResponse struct {
	Pic                  []*Pic   `protobuf:"bytes,1,rep,name=pic,proto3" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSchedPicsResponse) Reset()         { *m = FindSchedPicsResponse{} }
func (m *FindSchedPicsResponse) String() string { return proto.CompactTextString(m) }
func (*FindSchedPicsResponse) ProtoMessage()    {}
func (*FindSchedPicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *FindSchedPicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSchedPicsResponse.Unmarshal(m, b)
}
func (m *FindSchedPicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSchedPicsResponse.Marshal(b, m, deterministic)
}
func (m *FindSchedPicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSchedPicsResponse.Merge(m, src)
}
func (m *FindSchedPicsResponse) XXX_Size() int {
	return xxx_messageInfo_FindSchedPicsResponse.Size(m)
}
func (m *FindSchedPicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSchedPicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindSchedPicsResponse proto.InternalMessageInfo

func (m *FindSchedPicsResponse) GetPic() []*Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type AddPicTagsRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	Tag                  []string `protobuf:"bytes,2,rep,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPicTagsRequest) Reset()         { *m = AddPicTagsRequest{} }
func (m *AddPicTagsRequest) String() string { return proto.CompactTextString(m) }
func (*AddPicTagsRequest) ProtoMessage()    {}
func (*AddPicTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *AddPicTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicTagsRequest.Unmarshal(m, b)
}
func (m *AddPicTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicTagsRequest.Marshal(b, m, deterministic)
}
func (m *AddPicTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicTagsRequest.Merge(m, src)
}
func (m *AddPicTagsRequest) XXX_Size() int {
	return xxx_messageInfo_AddPicTagsRequest.Size(m)
}
func (m *AddPicTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicTagsRequest proto.InternalMessageInfo

func (m *AddPicTagsRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *AddPicTagsRequest) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

type AddPicTagsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPicTagsResponse) Reset()         { *m = AddPicTagsResponse{} }
func (m *AddPicTagsResponse) String() string { return proto.CompactTextString(m) }
func (*AddPicTagsResponse) ProtoMessage()    {}
func (*AddPicTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *AddPicTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicTagsResponse.Unmarshal(m, b)
}
func (m *AddPicTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicTagsResponse.Marshal(b, m, deterministic)
}
func (m *AddPicTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicTagsResponse.Merge(m, src)
}
func (m *AddPicTagsResponse) XXX_Size() int {
	return xxx_messageInfo_AddPicTagsResponse.Size(m)
}
func (m *AddPicTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicTagsResponse proto.InternalMessageInfo

type FindSimilarPicsRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSimilarPicsRequest) Reset()         { *m = FindSimilarPicsRequest{} }
func (m *FindSimilarPicsRequest) String() string { return proto.CompactTextString(m) }
func (*FindSimilarPicsRequest) ProtoMessage()    {}
func (*FindSimilarPicsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *FindSimilarPicsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSimilarPicsRequest.Unmarshal(m, b)
}
func (m *FindSimilarPicsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSimilarPicsRequest.Marshal(b, m, deterministic)
}
func (m *FindSimilarPicsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSimilarPicsRequest.Merge(m, src)
}
func (m *FindSimilarPicsRequest) XXX_Size() int {
	return xxx_messageInfo_FindSimilarPicsRequest.Size(m)
}
func (m *FindSimilarPicsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSimilarPicsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindSimilarPicsRequest proto.InternalMessageInfo

func (m *FindSimilarPicsRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type FindSimilarPicsResponse struct {
	PicId                []string `protobuf:"bytes,1,rep,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSimilarPicsResponse) Reset()         { *m = FindSimilarPicsResponse{} }
func (m *FindSimilarPicsResponse) String() string { return proto.CompactTextString(m) }
func (*FindSimilarPicsResponse) ProtoMessage()    {}
func (*FindSimilarPicsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *FindSimilarPicsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSimilarPicsResponse.Unmarshal(m, b)
}
func (m *FindSimilarPicsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSimilarPicsResponse.Marshal(b, m, deterministic)
}
func (m *FindSimilarPicsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSimilarPicsResponse.Merge(m, src)
}
func (m *FindSimilarPicsResponse) XXX_Size() int {
	return xxx_messageInfo_FindSimilarPicsResponse.Size(m)
}
func (m *FindSimilarPicsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSimilarPicsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindSimilarPicsResponse proto.InternalMessageInfo

func (m *FindSimilarPicsResponse) GetPicId() []string {
	if m != nil {
		return m.PicId
	}
	return nil
}

type IncrementViewCountRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrementViewCountRequest) Reset()         { *m = IncrementViewCountRequest{} }
func (m *IncrementViewCountRequest) String() string { return proto.CompactTextString(m) }
func (*IncrementViewCountRequest) ProtoMessage()    {}
func (*IncrementViewCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *IncrementViewCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementViewCountRequest.Unmarshal(m, b)
}
func (m *IncrementViewCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementViewCountRequest.Marshal(b, m, deterministic)
}
func (m *IncrementViewCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementViewCountRequest.Merge(m, src)
}
func (m *IncrementViewCountRequest) XXX_Size() int {
	return xxx_messageInfo_IncrementViewCountRequest.Size(m)
}
func (m *IncrementViewCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementViewCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementViewCountRequest proto.InternalMessageInfo

func (m *IncrementViewCountRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type IncrementViewCountResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IncrementViewCountResponse) Reset()         { *m = IncrementViewCountResponse{} }
func (m *IncrementViewCountResponse) String() string { return proto.CompactTextString(m) }
func (*IncrementViewCountResponse) ProtoMessage()    {}
func (*IncrementViewCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *IncrementViewCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IncrementViewCountResponse.Unmarshal(m, b)
}
func (m *IncrementViewCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IncrementViewCountResponse.Marshal(b, m, deterministic)
}
func (m *IncrementViewCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IncrementViewCountResponse.Merge(m, src)
}
func (m *IncrementViewCountResponse) XXX_Size() int {
	return xxx_messageInfo_IncrementViewCountResponse.Size(m)
}
func (m *IncrementViewCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IncrementViewCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IncrementViewCountResponse proto.InternalMessageInfo

type PurgePicRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgePicRequest) Reset()         { *m = PurgePicRequest{} }
func (m *PurgePicRequest) String() string { return proto.CompactTextString(m) }
func (*PurgePicRequest) ProtoMessage()    {}
func (*PurgePicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}

func (m *PurgePicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgePicRequest.Unmarshal(m, b)
}
func (m *PurgePicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgePicRequest.Marshal(b, m, deterministic)
}
func (m *PurgePicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgePicRequest.Merge(m, src)
}
func (m *PurgePicRequest) XXX_Size() int {
	return xxx_messageInfo_PurgePicRequest.Size(m)
}
func (m *PurgePicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgePicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PurgePicRequest proto.InternalMessageInfo

func (m *PurgePicRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type PurgePicResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgePicResponse) Reset()         { *m = PurgePicResponse{} }
func (m *PurgePicResponse) String() string { return proto.CompactTextString(m) }
func (*PurgePicResponse) ProtoMessage()    {}
func (*PurgePicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}

func (m *PurgePicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgePicResponse.Unmarshal(m, b)
}
func (m *PurgePicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgePicResponse.Marshal(b, m, deterministic)
}
func (m *PurgePicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgePicResponse.Merge(m, src)
}
func (m *PurgePicResponse) XXX_Size() int {
	return xxx_messageInfo_PurgePicResponse.Size(m)
}
func (m *PurgePicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgePicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PurgePicResponse proto.InternalMessageInfo

type SoftDeletePicRequest struct {
	PicId                string               `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	Details              string               `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	Reason               DeletionReason       `protobuf:"varint,3,opt,name=reason,proto3,enum=pixur.api.DeletionReason" json:"reason,omitempty"`
	DeletionTime         *timestamp.Timestamp `protobuf:"bytes,4,opt,name=deletion_time,json=deletionTime,proto3" json:"deletion_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SoftDeletePicRequest) Reset()         { *m = SoftDeletePicRequest{} }
func (m *SoftDeletePicRequest) String() string { return proto.CompactTextString(m) }
func (*SoftDeletePicRequest) ProtoMessage()    {}
func (*SoftDeletePicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{29}
}

func (m *SoftDeletePicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoftDeletePicRequest.Unmarshal(m, b)
}
func (m *SoftDeletePicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoftDeletePicRequest.Marshal(b, m, deterministic)
}
func (m *SoftDeletePicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoftDeletePicRequest.Merge(m, src)
}
func (m *SoftDeletePicRequest) XXX_Size() int {
	return xxx_messageInfo_SoftDeletePicRequest.Size(m)
}
func (m *SoftDeletePicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SoftDeletePicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SoftDeletePicRequest proto.InternalMessageInfo

func (m *SoftDeletePicRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *SoftDeletePicRequest) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *SoftDeletePicRequest) GetReason() DeletionReason {
	if m != nil {
		return m.Reason
	}
	return DeletionReason_UNKNOWN
}

func (m *SoftDeletePicRequest) GetDeletionTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeletionTime
	}
	return nil
}

type SoftDeletePicResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SoftDeletePicResponse) Reset()         { *m = SoftDeletePicResponse{} }
func (m *SoftDeletePicResponse) String() string { return proto.CompactTextString(m) }
func (*SoftDeletePicResponse) ProtoMessage()    {}
func (*SoftDeletePicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{30}
}

func (m *SoftDeletePicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SoftDeletePicResponse.Unmarshal(m, b)
}
func (m *SoftDeletePicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SoftDeletePicResponse.Marshal(b, m, deterministic)
}
func (m *SoftDeletePicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SoftDeletePicResponse.Merge(m, src)
}
func (m *SoftDeletePicResponse) XXX_Size() int {
	return xxx_messageInfo_SoftDeletePicResponse.Size(m)
}
func (m *SoftDeletePicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SoftDeletePicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SoftDeletePicResponse proto.InternalMessageInfo

// UpsertPicRequest is a request to upload and possibly merge with another
// picture.
type UpsertPicRequest struct {
	// url is an optional field for the Pixur backend to download the pic from.
	// Either url and/or data must be set.   If the data field is set along
	// with the URL, the url is treated as regular metadata and not fetched.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// referrer is the referrer url used to fetch the resource.  If no data is
	// set, the url will be used to retrieve the data, along with the referrer
	// being set in the request.  If data is set, referrer is treated as
	// additional metadata.  May not be used if url is not set.
	Referrer string `protobuf:"bytes,5,opt,name=referrer,proto3" json:"referrer,omitempty"`
	// name is an optional field indicating a reasonable file name for the pic.
	// If name and url are set, the name field will override the name
	// automatically derived from the URL.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// data is the file contents of the upload.  It must contain a valid pic
	// if present.  It may be left absent if there is a valid url instead.  This
	// field takes precedence over the url field if both are specified.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	// md5_hash is the hash of the pic contents.  It is used to verify the pic
	// is valid when downloading from url, or when set in data.  If the Pixur
	// backend already has a pic with a matching md5_hash, it may not use
	// either data or url (at least one must still be specified, though).
	Md5Hash              []byte   `protobuf:"bytes,4,opt,name=md5_hash,json=md5Hash,proto3" json:"md5_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicRequest) Reset()         { *m = UpsertPicRequest{} }
func (m *UpsertPicRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPicRequest) ProtoMessage()    {}
func (*UpsertPicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{31}
}

func (m *UpsertPicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicRequest.Unmarshal(m, b)
}
func (m *UpsertPicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicRequest.Marshal(b, m, deterministic)
}
func (m *UpsertPicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicRequest.Merge(m, src)
}
func (m *UpsertPicRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPicRequest.Size(m)
}
func (m *UpsertPicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicRequest proto.InternalMessageInfo

func (m *UpsertPicRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *UpsertPicRequest) GetReferrer() string {
	if m != nil {
		return m.Referrer
	}
	return ""
}

func (m *UpsertPicRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpsertPicRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpsertPicRequest) GetMd5Hash() []byte {
	if m != nil {
		return m.Md5Hash
	}
	return nil
}

type UpsertPicResponse struct {
	// pic is the newly created or updated picture.
	Pic                  *Pic     `protobuf:"bytes,1,opt,name=pic,proto3" json:"pic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicResponse) Reset()         { *m = UpsertPicResponse{} }
func (m *UpsertPicResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPicResponse) ProtoMessage()    {}
func (*UpsertPicResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{32}
}

func (m *UpsertPicResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicResponse.Unmarshal(m, b)
}
func (m *UpsertPicResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicResponse.Marshal(b, m, deterministic)
}
func (m *UpsertPicResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicResponse.Merge(m, src)
}
func (m *UpsertPicResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPicResponse.Size(m)
}
func (m *UpsertPicResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicResponse proto.InternalMessageInfo

func (m *UpsertPicResponse) GetPic() *Pic {
	if m != nil {
		return m.Pic
	}
	return nil
}

type CreateUserRequest struct {
	// ident is the unique identity of the user being created, usually an email address
	Ident string `protobuf:"bytes,1,opt,name=ident,proto3" json:"ident,omitempty"`
	// secret is the secret string used to authenticate the user, usually a password
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserRequest) Reset()         { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()    {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{33}
}

func (m *CreateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserRequest.Unmarshal(m, b)
}
func (m *CreateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserRequest.Marshal(b, m, deterministic)
}
func (m *CreateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserRequest.Merge(m, src)
}
func (m *CreateUserRequest) XXX_Size() int {
	return xxx_messageInfo_CreateUserRequest.Size(m)
}
func (m *CreateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserRequest proto.InternalMessageInfo

func (m *CreateUserRequest) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *CreateUserRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type CreateUserResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateUserResponse) Reset()         { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()    {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{34}
}

func (m *CreateUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateUserResponse.Unmarshal(m, b)
}
func (m *CreateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateUserResponse.Marshal(b, m, deterministic)
}
func (m *CreateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateUserResponse.Merge(m, src)
}
func (m *CreateUserResponse) XXX_Size() int {
	return xxx_messageInfo_CreateUserResponse.Size(m)
}
func (m *CreateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateUserResponse proto.InternalMessageInfo

type GetRefreshTokenRequest struct {
	// ident is the unique identity of the user being created, usually an email address
	Ident string `protobuf:"bytes,1,opt,name=ident,proto3" json:"ident,omitempty"`
	// secret is the secret string used to authenticate the user, usually a password
	Secret               string   `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	RefreshToken         string   `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRefreshTokenRequest) Reset()         { *m = GetRefreshTokenRequest{} }
func (m *GetRefreshTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetRefreshTokenRequest) ProtoMessage()    {}
func (*GetRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{35}
}

func (m *GetRefreshTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRefreshTokenRequest.Unmarshal(m, b)
}
func (m *GetRefreshTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRefreshTokenRequest.Marshal(b, m, deterministic)
}
func (m *GetRefreshTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRefreshTokenRequest.Merge(m, src)
}
func (m *GetRefreshTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetRefreshTokenRequest.Size(m)
}
func (m *GetRefreshTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRefreshTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRefreshTokenRequest proto.InternalMessageInfo

func (m *GetRefreshTokenRequest) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *GetRefreshTokenRequest) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *GetRefreshTokenRequest) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

type GetRefreshTokenResponse struct {
	RefreshToken         string      `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	AuthToken            string      `protobuf:"bytes,2,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	PixToken             string      `protobuf:"bytes,5,opt,name=pix_token,json=pixToken,proto3" json:"pix_token,omitempty"`
	RefreshPayload       *PwtPayload `protobuf:"bytes,3,opt,name=refresh_payload,json=refreshPayload,proto3" json:"refresh_payload,omitempty"`
	AuthPayload          *PwtPayload `protobuf:"bytes,4,opt,name=auth_payload,json=authPayload,proto3" json:"auth_payload,omitempty"`
	PixPayload           *PwtPayload `protobuf:"bytes,6,opt,name=pix_payload,json=pixPayload,proto3" json:"pix_payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRefreshTokenResponse) Reset()         { *m = GetRefreshTokenResponse{} }
func (m *GetRefreshTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GetRefreshTokenResponse) ProtoMessage()    {}
func (*GetRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{36}
}

func (m *GetRefreshTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRefreshTokenResponse.Unmarshal(m, b)
}
func (m *GetRefreshTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRefreshTokenResponse.Marshal(b, m, deterministic)
}
func (m *GetRefreshTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRefreshTokenResponse.Merge(m, src)
}
func (m *GetRefreshTokenResponse) XXX_Size() int {
	return xxx_messageInfo_GetRefreshTokenResponse.Size(m)
}
func (m *GetRefreshTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRefreshTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRefreshTokenResponse proto.InternalMessageInfo

func (m *GetRefreshTokenResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *GetRefreshTokenResponse) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *GetRefreshTokenResponse) GetPixToken() string {
	if m != nil {
		return m.PixToken
	}
	return ""
}

func (m *GetRefreshTokenResponse) GetRefreshPayload() *PwtPayload {
	if m != nil {
		return m.RefreshPayload
	}
	return nil
}

func (m *GetRefreshTokenResponse) GetAuthPayload() *PwtPayload {
	if m != nil {
		return m.AuthPayload
	}
	return nil
}

func (m *GetRefreshTokenResponse) GetPixPayload() *PwtPayload {
	if m != nil {
		return m.PixPayload
	}
	return nil
}

type PwtHeader struct {
	Algorithm            PwtHeader_Algorithm `protobuf:"varint,1,opt,name=algorithm,proto3,enum=pixur.api.PwtHeader_Algorithm" json:"algorithm,omitempty"`
	Version              int64               `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PwtHeader) Reset()         { *m = PwtHeader{} }
func (m *PwtHeader) String() string { return proto.CompactTextString(m) }
func (*PwtHeader) ProtoMessage()    {}
func (*PwtHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{37}
}

func (m *PwtHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PwtHeader.Unmarshal(m, b)
}
func (m *PwtHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PwtHeader.Marshal(b, m, deterministic)
}
func (m *PwtHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PwtHeader.Merge(m, src)
}
func (m *PwtHeader) XXX_Size() int {
	return xxx_messageInfo_PwtHeader.Size(m)
}
func (m *PwtHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_PwtHeader.DiscardUnknown(m)
}

var xxx_messageInfo_PwtHeader proto.InternalMessageInfo

func (m *PwtHeader) GetAlgorithm() PwtHeader_Algorithm {
	if m != nil {
		return m.Algorithm
	}
	return PwtHeader_UNKNOWN
}

func (m *PwtHeader) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type PwtPayload struct {
	Subject   string               `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	NotBefore *timestamp.Timestamp `protobuf:"bytes,2,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	NotAfter  *timestamp.Timestamp `protobuf:"bytes,3,opt,name=not_after,json=notAfter,proto3" json:"not_after,omitempty"`
	// represents when this token should be reverified.  Optional.
	SoftNotAfter         *timestamp.Timestamp `protobuf:"bytes,6,opt,name=soft_not_after,json=softNotAfter,proto3" json:"soft_not_after,omitempty"`
	Issuer               string               `protobuf:"bytes,4,opt,name=issuer,proto3" json:"issuer,omitempty"`
	TokenId              int64                `protobuf:"varint,5,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	TokenParentId        int64                `protobuf:"varint,8,opt,name=token_parent_id,json=tokenParentId,proto3" json:"token_parent_id,omitempty"`
	Type                 PwtPayload_Type      `protobuf:"varint,7,opt,name=type,proto3,enum=pixur.api.PwtPayload_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PwtPayload) Reset()         { *m = PwtPayload{} }
func (m *PwtPayload) String() string { return proto.CompactTextString(m) }
func (*PwtPayload) ProtoMessage()    {}
func (*PwtPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{38}
}

func (m *PwtPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PwtPayload.Unmarshal(m, b)
}
func (m *PwtPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PwtPayload.Marshal(b, m, deterministic)
}
func (m *PwtPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PwtPayload.Merge(m, src)
}
func (m *PwtPayload) XXX_Size() int {
	return xxx_messageInfo_PwtPayload.Size(m)
}
func (m *PwtPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_PwtPayload.DiscardUnknown(m)
}

var xxx_messageInfo_PwtPayload proto.InternalMessageInfo

func (m *PwtPayload) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *PwtPayload) GetNotBefore() *timestamp.Timestamp {
	if m != nil {
		return m.NotBefore
	}
	return nil
}

func (m *PwtPayload) GetNotAfter() *timestamp.Timestamp {
	if m != nil {
		return m.NotAfter
	}
	return nil
}

func (m *PwtPayload) GetSoftNotAfter() *timestamp.Timestamp {
	if m != nil {
		return m.SoftNotAfter
	}
	return nil
}

func (m *PwtPayload) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *PwtPayload) GetTokenId() int64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *PwtPayload) GetTokenParentId() int64 {
	if m != nil {
		return m.TokenParentId
	}
	return 0
}

func (m *PwtPayload) GetType() PwtPayload_Type {
	if m != nil {
		return m.Type
	}
	return PwtPayload_UNKNOWN
}

type AddPicCommentRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	CommentParentId      string   `protobuf:"bytes,2,opt,name=comment_parent_id,json=commentParentId,proto3" json:"comment_parent_id,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPicCommentRequest) Reset()         { *m = AddPicCommentRequest{} }
func (m *AddPicCommentRequest) String() string { return proto.CompactTextString(m) }
func (*AddPicCommentRequest) ProtoMessage()    {}
func (*AddPicCommentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{39}
}

func (m *AddPicCommentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicCommentRequest.Unmarshal(m, b)
}
func (m *AddPicCommentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicCommentRequest.Marshal(b, m, deterministic)
}
func (m *AddPicCommentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicCommentRequest.Merge(m, src)
}
func (m *AddPicCommentRequest) XXX_Size() int {
	return xxx_messageInfo_AddPicCommentRequest.Size(m)
}
func (m *AddPicCommentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicCommentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicCommentRequest proto.InternalMessageInfo

func (m *AddPicCommentRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *AddPicCommentRequest) GetCommentParentId() string {
	if m != nil {
		return m.CommentParentId
	}
	return ""
}

func (m *AddPicCommentRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type AddPicCommentResponse struct {
	Comment              *PicComment `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddPicCommentResponse) Reset()         { *m = AddPicCommentResponse{} }
func (m *AddPicCommentResponse) String() string { return proto.CompactTextString(m) }
func (*AddPicCommentResponse) ProtoMessage()    {}
func (*AddPicCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{40}
}

func (m *AddPicCommentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPicCommentResponse.Unmarshal(m, b)
}
func (m *AddPicCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPicCommentResponse.Marshal(b, m, deterministic)
}
func (m *AddPicCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPicCommentResponse.Merge(m, src)
}
func (m *AddPicCommentResponse) XXX_Size() int {
	return xxx_messageInfo_AddPicCommentResponse.Size(m)
}
func (m *AddPicCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPicCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPicCommentResponse proto.InternalMessageInfo

func (m *AddPicCommentResponse) GetComment() *PicComment {
	if m != nil {
		return m.Comment
	}
	return nil
}

type DeleteTokenRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTokenRequest) Reset()         { *m = DeleteTokenRequest{} }
func (m *DeleteTokenRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTokenRequest) ProtoMessage()    {}
func (*DeleteTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{41}
}

func (m *DeleteTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTokenRequest.Unmarshal(m, b)
}
func (m *DeleteTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTokenRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTokenRequest.Merge(m, src)
}
func (m *DeleteTokenRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTokenRequest.Size(m)
}
func (m *DeleteTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTokenRequest proto.InternalMessageInfo

type DeleteTokenResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTokenResponse) Reset()         { *m = DeleteTokenResponse{} }
func (m *DeleteTokenResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTokenResponse) ProtoMessage()    {}
func (*DeleteTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42}
}

func (m *DeleteTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTokenResponse.Unmarshal(m, b)
}
func (m *DeleteTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTokenResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTokenResponse.Merge(m, src)
}
func (m *DeleteTokenResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTokenResponse.Size(m)
}
func (m *DeleteTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTokenResponse proto.InternalMessageInfo

type UpsertPicVoteRequest struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// Optional.   Not necessary when creating for the first time.
	Version              int64        `protobuf:"fixed64,3,opt,name=version,proto3" json:"version,omitempty"`
	Vote                 PicVote_Vote `protobuf:"varint,2,opt,name=vote,proto3,enum=pixur.api.PicVote_Vote" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpsertPicVoteRequest) Reset()         { *m = UpsertPicVoteRequest{} }
func (m *UpsertPicVoteRequest) String() string { return proto.CompactTextString(m) }
func (*UpsertPicVoteRequest) ProtoMessage()    {}
func (*UpsertPicVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{43}
}

func (m *UpsertPicVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicVoteRequest.Unmarshal(m, b)
}
func (m *UpsertPicVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicVoteRequest.Marshal(b, m, deterministic)
}
func (m *UpsertPicVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicVoteRequest.Merge(m, src)
}
func (m *UpsertPicVoteRequest) XXX_Size() int {
	return xxx_messageInfo_UpsertPicVoteRequest.Size(m)
}
func (m *UpsertPicVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicVoteRequest proto.InternalMessageInfo

func (m *UpsertPicVoteRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *UpsertPicVoteRequest) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UpsertPicVoteRequest) GetVote() PicVote_Vote {
	if m != nil {
		return m.Vote
	}
	return PicVote_UNKNOWN
}

type UpsertPicVoteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpsertPicVoteResponse) Reset()         { *m = UpsertPicVoteResponse{} }
func (m *UpsertPicVoteResponse) String() string { return proto.CompactTextString(m) }
func (*UpsertPicVoteResponse) ProtoMessage()    {}
func (*UpsertPicVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{44}
}

func (m *UpsertPicVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpsertPicVoteResponse.Unmarshal(m, b)
}
func (m *UpsertPicVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpsertPicVoteResponse.Marshal(b, m, deterministic)
}
func (m *UpsertPicVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpsertPicVoteResponse.Merge(m, src)
}
func (m *UpsertPicVoteResponse) XXX_Size() int {
	return xxx_messageInfo_UpsertPicVoteResponse.Size(m)
}
func (m *UpsertPicVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpsertPicVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpsertPicVoteResponse proto.InternalMessageInfo

type LookupPicVoteRequest struct {
	PicId string `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	// Optional.  Uses auth token if not specified.
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicVoteRequest) Reset()         { *m = LookupPicVoteRequest{} }
func (m *LookupPicVoteRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicVoteRequest) ProtoMessage()    {}
func (*LookupPicVoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{45}
}

func (m *LookupPicVoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicVoteRequest.Unmarshal(m, b)
}
func (m *LookupPicVoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicVoteRequest.Marshal(b, m, deterministic)
}
func (m *LookupPicVoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicVoteRequest.Merge(m, src)
}
func (m *LookupPicVoteRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicVoteRequest.Size(m)
}
func (m *LookupPicVoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicVoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicVoteRequest proto.InternalMessageInfo

func (m *LookupPicVoteRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

func (m *LookupPicVoteRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type LookupPicVoteResponse struct {
	Vote                 *PicVote `protobuf:"bytes,1,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicVoteResponse) Reset()         { *m = LookupPicVoteResponse{} }
func (m *LookupPicVoteResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicVoteResponse) ProtoMessage()    {}
func (*LookupPicVoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{46}
}

func (m *LookupPicVoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicVoteResponse.Unmarshal(m, b)
}
func (m *LookupPicVoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicVoteResponse.Marshal(b, m, deterministic)
}
func (m *LookupPicVoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicVoteResponse.Merge(m, src)
}
func (m *LookupPicVoteResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicVoteResponse.Size(m)
}
func (m *LookupPicVoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicVoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicVoteResponse proto.InternalMessageInfo

func (m *LookupPicVoteResponse) GetVote() *PicVote {
	if m != nil {
		return m.Vote
	}
	return nil
}

type LookupPicFileRequest struct {
	PicFileId            string         `protobuf:"bytes,1,opt,name=pic_file_id,json=picFileId,proto3" json:"pic_file_id,omitempty"`
	Format               PicFile_Format `protobuf:"varint,2,opt,name=format,proto3,enum=pixur.api.PicFile_Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LookupPicFileRequest) Reset()         { *m = LookupPicFileRequest{} }
func (m *LookupPicFileRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicFileRequest) ProtoMessage()    {}
func (*LookupPicFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{47}
}

func (m *LookupPicFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicFileRequest.Unmarshal(m, b)
}
func (m *LookupPicFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicFileRequest.Marshal(b, m, deterministic)
}
func (m *LookupPicFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicFileRequest.Merge(m, src)
}
func (m *LookupPicFileRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicFileRequest.Size(m)
}
func (m *LookupPicFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicFileRequest proto.InternalMessageInfo

func (m *LookupPicFileRequest) GetPicFileId() string {
	if m != nil {
		return m.PicFileId
	}
	return ""
}

func (m *LookupPicFileRequest) GetFormat() PicFile_Format {
	if m != nil {
		return m.Format
	}
	return PicFile_UNKNOWN
}

type LookupPicFileResponse struct {
	PicFile              *PicFile `protobuf:"bytes,1,opt,name=pic_file,json=picFile,proto3" json:"pic_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicFileResponse) Reset()         { *m = LookupPicFileResponse{} }
func (m *LookupPicFileResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicFileResponse) ProtoMessage()    {}
func (*LookupPicFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{48}
}

func (m *LookupPicFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicFileResponse.Unmarshal(m, b)
}
func (m *LookupPicFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicFileResponse.Marshal(b, m, deterministic)
}
func (m *LookupPicFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicFileResponse.Merge(m, src)
}
func (m *LookupPicFileResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicFileResponse.Size(m)
}
func (m *LookupPicFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicFileResponse proto.InternalMessageInfo

func (m *LookupPicFileResponse) GetPicFile() *PicFile {
	if m != nil {
		return m.PicFile
	}
	return nil
}

type ReadPicFileRequest struct {
	PicFileId string         `protobuf:"bytes,1,opt,name=pic_file_id,json=picFileId,proto3" json:"pic_file_id,omitempty"`
	Format    PicFile_Format `protobuf:"varint,2,opt,name=format,proto3,enum=pixur.api.PicFile_Format" json:"format,omitempty"`
	// The offset into the file to start reading at.  Required
	Offset int64 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// The maximum number of bytes to read.   Maybe be 0.
	Limit                int64    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPicFileRequest) Reset()         { *m = ReadPicFileRequest{} }
func (m *ReadPicFileRequest) String() string { return proto.CompactTextString(m) }
func (*ReadPicFileRequest) ProtoMessage()    {}
func (*ReadPicFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{49}
}

func (m *ReadPicFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPicFileRequest.Unmarshal(m, b)
}
func (m *ReadPicFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPicFileRequest.Marshal(b, m, deterministic)
}
func (m *ReadPicFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPicFileRequest.Merge(m, src)
}
func (m *ReadPicFileRequest) XXX_Size() int {
	return xxx_messageInfo_ReadPicFileRequest.Size(m)
}
func (m *ReadPicFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPicFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPicFileRequest proto.InternalMessageInfo

func (m *ReadPicFileRequest) GetPicFileId() string {
	if m != nil {
		return m.PicFileId
	}
	return ""
}

func (m *ReadPicFileRequest) GetFormat() PicFile_Format {
	if m != nil {
		return m.Format
	}
	return PicFile_UNKNOWN
}

func (m *ReadPicFileRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadPicFileRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadPicFileResponse struct {
	// may be empty
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// indicates that the end of the pic has been reached.
	Eof                  bool     `protobuf:"varint,2,opt,name=eof,proto3" json:"eof,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadPicFileResponse) Reset()         { *m = ReadPicFileResponse{} }
func (m *ReadPicFileResponse) String() string { return proto.CompactTextString(m) }
func (*ReadPicFileResponse) ProtoMessage()    {}
func (*ReadPicFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{50}
}

func (m *ReadPicFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadPicFileResponse.Unmarshal(m, b)
}
func (m *ReadPicFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadPicFileResponse.Marshal(b, m, deterministic)
}
func (m *ReadPicFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadPicFileResponse.Merge(m, src)
}
func (m *ReadPicFileResponse) XXX_Size() int {
	return xxx_messageInfo_ReadPicFileResponse.Size(m)
}
func (m *ReadPicFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadPicFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadPicFileResponse proto.InternalMessageInfo

func (m *ReadPicFileResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadPicFileResponse) GetEof() bool {
	if m != nil {
		return m.Eof
	}
	return false
}

type LookupPicExtensionRequest struct {
	PicId                string   `protobuf:"bytes,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupPicExtensionRequest) Reset()         { *m = LookupPicExtensionRequest{} }
func (m *LookupPicExtensionRequest) String() string { return proto.CompactTextString(m) }
func (*LookupPicExtensionRequest) ProtoMessage()    {}
func (*LookupPicExtensionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{51}
}

func (m *LookupPicExtensionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicExtensionRequest.Unmarshal(m, b)
}
func (m *LookupPicExtensionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicExtensionRequest.Marshal(b, m, deterministic)
}
func (m *LookupPicExtensionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicExtensionRequest.Merge(m, src)
}
func (m *LookupPicExtensionRequest) XXX_Size() int {
	return xxx_messageInfo_LookupPicExtensionRequest.Size(m)
}
func (m *LookupPicExtensionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicExtensionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicExtensionRequest proto.InternalMessageInfo

func (m *LookupPicExtensionRequest) GetPicId() string {
	if m != nil {
		return m.PicId
	}
	return ""
}

type LookupPicExtensionResponse struct {
	Ext                  map[string]*any.Any `protobuf:"bytes,1,rep,name=ext,proto3" json:"ext,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LookupPicExtensionResponse) Reset()         { *m = LookupPicExtensionResponse{} }
func (m *LookupPicExtensionResponse) String() string { return proto.CompactTextString(m) }
func (*LookupPicExtensionResponse) ProtoMessage()    {}
func (*LookupPicExtensionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{52}
}

func (m *LookupPicExtensionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupPicExtensionResponse.Unmarshal(m, b)
}
func (m *LookupPicExtensionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupPicExtensionResponse.Marshal(b, m, deterministic)
}
func (m *LookupPicExtensionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupPicExtensionResponse.Merge(m, src)
}
func (m *LookupPicExtensionResponse) XXX_Size() int {
	return xxx_messageInfo_LookupPicExtensionResponse.Size(m)
}
func (m *LookupPicExtensionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupPicExtensionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupPicExtensionResponse proto.InternalMessageInfo

func (m *LookupPicExtensionResponse) GetExt() map[string]*any.Any {
	if m != nil {
		return m.Ext
	}
	return nil
}

type FindUserEventsRequest struct {
	// Optional.  Uses auth token if not specified.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Optional.  If present, specifies the starting user event id to scan for
	StartUserEventId     string   `protobuf:"bytes,2,opt,name=start_user_event_id,json=startUserEventId,proto3" json:"start_user_event_id,omitempty"`
	Ascending            bool     `protobuf:"varint,3,opt,name=ascending,proto3" json:"ascending,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindUserEventsRequest) Reset()         { *m = FindUserEventsRequest{} }
func (m *FindUserEventsRequest) String() string { return proto.CompactTextString(m) }
func (*FindUserEventsRequest) ProtoMessage()    {}
func (*FindUserEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{53}
}

func (m *FindUserEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUserEventsRequest.Unmarshal(m, b)
}
func (m *FindUserEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUserEventsRequest.Marshal(b, m, deterministic)
}
func (m *FindUserEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUserEventsRequest.Merge(m, src)
}
func (m *FindUserEventsRequest) XXX_Size() int {
	return xxx_messageInfo_FindUserEventsRequest.Size(m)
}
func (m *FindUserEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUserEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindUserEventsRequest proto.InternalMessageInfo

func (m *FindUserEventsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *FindUserEventsRequest) GetStartUserEventId() string {
	if m != nil {
		return m.StartUserEventId
	}
	return ""
}

func (m *FindUserEventsRequest) GetAscending() bool {
	if m != nil {
		return m.Ascending
	}
	return false
}

type FindUserEventsResponse struct {
	UserEvent            []*UserEvent `protobuf:"bytes,1,rep,name=user_event,json=userEvent,proto3" json:"user_event,omitempty"`
	NextUserEventId      string       `protobuf:"bytes,2,opt,name=next_user_event_id,json=nextUserEventId,proto3" json:"next_user_event_id,omitempty"`
	PrevUserEventId      string       `protobuf:"bytes,3,opt,name=prev_user_event_id,json=prevUserEventId,proto3" json:"prev_user_event_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *FindUserEventsResponse) Reset()         { *m = FindUserEventsResponse{} }
func (m *FindUserEventsResponse) String() string { return proto.CompactTextString(m) }
func (*FindUserEventsResponse) ProtoMessage()    {}
func (*FindUserEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{54}
}

func (m *FindUserEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindUserEventsResponse.Unmarshal(m, b)
}
func (m *FindUserEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindUserEventsResponse.Marshal(b, m, deterministic)
}
func (m *FindUserEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindUserEventsResponse.Merge(m, src)
}
func (m *FindUserEventsResponse) XXX_Size() int {
	return xxx_messageInfo_FindUserEventsResponse.Size(m)
}
func (m *FindUserEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindUserEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindUserEventsResponse proto.InternalMessageInfo

func (m *FindUserEventsResponse) GetUserEvent() []*UserEvent {
	if m != nil {
		return m.UserEvent
	}
	return nil
}

func (m *FindUserEventsResponse) GetNextUserEventId() string {
	if m != nil {
		return m.NextUserEventId
	}
	return ""
}

func (m *FindUserEventsResponse) GetPrevUserEventId() string {
	if m != nil {
		return m.PrevUserEventId
	}
	return ""
}

type ServiceOpts struct {
	// a vaguely defined, but monotonically increasing "version".
	ApiVersion int64 `protobuf:"varint,1,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// The header key used to when using an auth token.
	AuthTokenHeaderKey string `protobuf:"bytes,2,opt,name=auth_token_header_key,json=authTokenHeaderKey,proto3" json:"auth_token_header_key,omitempty"`
	// The header key used to when using a pix token.
	PixTokenHeaderKey string `protobuf:"bytes,3,opt,name=pix_token_header_key,json=pixTokenHeaderKey,proto3" json:"pix_token_header_key,omitempty"`
	// Used in responses (e.g. ReadPicFile) to indicate suggested http headers.
	// See pixur.api.HttpHeader
	HttpHeaderKey        string   `protobuf:"bytes,4,opt,name=http_header_key,json=httpHeaderKey,proto3" json:"http_header_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceOpts) Reset()         { *m = ServiceOpts{} }
func (m *ServiceOpts) String() string { return proto.CompactTextString(m) }
func (*ServiceOpts) ProtoMessage()    {}
func (*ServiceOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{55}
}

func (m *ServiceOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceOpts.Unmarshal(m, b)
}
func (m *ServiceOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceOpts.Marshal(b, m, deterministic)
}
func (m *ServiceOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceOpts.Merge(m, src)
}
func (m *ServiceOpts) XXX_Size() int {
	return xxx_messageInfo_ServiceOpts.Size(m)
}
func (m *ServiceOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceOpts.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceOpts proto.InternalMessageInfo

func (m *ServiceOpts) GetApiVersion() int64 {
	if m != nil {
		return m.ApiVersion
	}
	return 0
}

func (m *ServiceOpts) GetAuthTokenHeaderKey() string {
	if m != nil {
		return m.AuthTokenHeaderKey
	}
	return ""
}

func (m *ServiceOpts) GetPixTokenHeaderKey() string {
	if m != nil {
		return m.PixTokenHeaderKey
	}
	return ""
}

func (m *ServiceOpts) GetHttpHeaderKey() string {
	if m != nil {
		return m.HttpHeaderKey
	}
	return ""
}

// HttpHeader is a message included as a header on some responses.  It is only a suggestion.
// See pixur.api.ServiceOpts.http_header_key
type HttpHeader struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpHeader) Reset()         { *m = HttpHeader{} }
func (m *HttpHeader) String() string { return proto.CompactTextString(m) }
func (*HttpHeader) ProtoMessage()    {}
func (*HttpHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{56}
}

func (m *HttpHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpHeader.Unmarshal(m, b)
}
func (m *HttpHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpHeader.Marshal(b, m, deterministic)
}
func (m *HttpHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpHeader.Merge(m, src)
}
func (m *HttpHeader) XXX_Size() int {
	return xxx_messageInfo_HttpHeader.Size(m)
}
func (m *HttpHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpHeader.DiscardUnknown(m)
}

var xxx_messageInfo_HttpHeader proto.InternalMessageInfo

func (m *HttpHeader) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HttpHeader) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

var E_PixurServiceOpts = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.ServiceOptions)(nil),
	ExtensionType: (*ServiceOpts)(nil),
	Field:         65537,
	Name:          "pixur.api.pixur_service_opts",
	Tag:           "bytes,65537,opt,name=pixur_service_opts",
	Filename:      "api.proto",
}

func init() {
	proto.RegisterEnum("pixur.api.DeletionReason", DeletionReason_name, DeletionReason_value)
	proto.RegisterEnum("pixur.api.PicFile_Format", PicFile_Format_name, PicFile_Format_value)
	proto.RegisterEnum("pixur.api.PicVote_Vote", PicVote_Vote_name, PicVote_Vote_value)
	proto.RegisterEnum("pixur.api.Capability_Cap", Capability_Cap_name, Capability_Cap_value)
	proto.RegisterEnum("pixur.api.PwtHeader_Algorithm", PwtHeader_Algorithm_name, PwtHeader_Algorithm_value)
	proto.RegisterEnum("pixur.api.PwtPayload_Type", PwtPayload_Type_name, PwtPayload_Type_value)
	proto.RegisterType((*Pic)(nil), "pixur.api.Pic")
	proto.RegisterType((*PicFile)(nil), "pixur.api.PicFile")
	proto.RegisterType((*PicSource)(nil), "pixur.api.PicSource")
	proto.RegisterType((*PicTag)(nil), "pixur.api.PicTag")
	proto.RegisterType((*PicComment)(nil), "pixur.api.PicComment")
	proto.RegisterType((*PicVote)(nil), "pixur.api.PicVote")
	proto.RegisterType((*User)(nil), "pixur.api.User")
	proto.RegisterType((*Capability)(nil), "pixur.api.Capability")
	proto.RegisterType((*BackendConfiguration)(nil), "pixur.api.BackendConfiguration")
	proto.RegisterType((*BackendConfiguration_CapabilitySet)(nil), "pixur.api.BackendConfiguration.CapabilitySet")
	proto.RegisterType((*UserEvent)(nil), "pixur.api.UserEvent")
	proto.RegisterType((*UserEvent_OutgoingUpsertPicVote)(nil), "pixur.api.UserEvent.OutgoingUpsertPicVote")
	proto.RegisterType((*UserEvent_IncomingUpsertPicVote)(nil), "pixur.api.UserEvent.IncomingUpsertPicVote")
	proto.RegisterType((*UserEvent_OutgoingPicComment)(nil), "pixur.api.UserEvent.OutgoingPicComment")
	proto.RegisterType((*UserEvent_IncomingPicComment)(nil), "pixur.api.UserEvent.IncomingPicComment")
	proto.RegisterType((*UserEvent_UpsertPic)(nil), "pixur.api.UserEvent.UpsertPic")
	proto.RegisterType((*LookupUserRequest)(nil), "pixur.api.LookupUserRequest")
	proto.RegisterType((*LookupUserResponse)(nil), "pixur.api.LookupUserResponse")
	proto.RegisterType((*UpdateUserRequest)(nil), "pixur.api.UpdateUserRequest")
	proto.RegisterType((*UpdateUserRequest_ChangeIdent)(nil), "pixur.api.UpdateUserRequest.ChangeIdent")
	proto.RegisterType((*UpdateUserRequest_ChangeSecret)(nil), "pixur.api.UpdateUserRequest.ChangeSecret")
	proto.RegisterType((*UpdateUserRequest_ChangeCapability)(nil), "pixur.api.UpdateUserRequest.ChangeCapability")
	proto.RegisterType((*UpdateUserResponse)(nil), "pixur.api.UpdateUserResponse")
	proto.RegisterType((*PicCommentTree)(nil), "pixur.api.PicCommentTree")
	proto.RegisterType((*LookupPicDetailsRequest)(nil), "pixur.api.LookupPicDetailsRequest")
	proto.RegisterType((*LookupPicDetailsResponse)(nil), "pixur.api.LookupPicDetailsResponse")
	proto.RegisterType((*FindIndexPicsRequest)(nil), "pixur.api.FindIndexPicsRequest")
	proto.RegisterType((*FindIndexPicsResponse)(nil), "pixur.api.FindIndexPicsResponse")
	proto.RegisterType((*FindSchedPicsRequest)(nil), "pixur.api.FindSchedPicsRequest")
	proto.RegisterType((*FindSchedPicsResponse)(nil), "pixur.api.FindSchedPicsResponse")
	proto.RegisterType((*AddPicTagsRequest)(nil), "pixur.api.AddPicTagsRequest")
	proto.RegisterType((*AddPicTagsResponse)(nil), "pixur.api.AddPicTagsResponse")
	proto.RegisterType((*FindSimilarPicsRequest)(nil), "pixur.api.FindSimilarPicsRequest")
	proto.RegisterType((*FindSimilarPicsResponse)(nil), "pixur.api.FindSimilarPicsResponse")
	proto.RegisterType((*IncrementViewCountRequest)(nil), "pixur.api.IncrementViewCountRequest")
	proto.RegisterType((*IncrementViewCountResponse)(nil), "pixur.api.IncrementViewCountResponse")
	proto.RegisterType((*PurgePicRequest)(nil), "pixur.api.PurgePicRequest")
	proto.RegisterType((*PurgePicResponse)(nil), "pixur.api.PurgePicResponse")
	proto.RegisterType((*SoftDeletePicRequest)(nil), "pixur.api.SoftDeletePicRequest")
	proto.RegisterType((*SoftDeletePicResponse)(nil), "pixur.api.SoftDeletePicResponse")
	proto.RegisterType((*UpsertPicRequest)(nil), "pixur.api.UpsertPicRequest")
	proto.RegisterType((*UpsertPicResponse)(nil), "pixur.api.UpsertPicResponse")
	proto.RegisterType((*CreateUserRequest)(nil), "pixur.api.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "pixur.api.CreateUserResponse")
	proto.RegisterType((*GetRefreshTokenRequest)(nil), "pixur.api.GetRefreshTokenRequest")
	proto.RegisterType((*GetRefreshTokenResponse)(nil), "pixur.api.GetRefreshTokenResponse")
	proto.RegisterType((*PwtHeader)(nil), "pixur.api.PwtHeader")
	proto.RegisterType((*PwtPayload)(nil), "pixur.api.PwtPayload")
	proto.RegisterType((*AddPicCommentRequest)(nil), "pixur.api.AddPicCommentRequest")
	proto.RegisterType((*AddPicCommentResponse)(nil), "pixur.api.AddPicCommentResponse")
	proto.RegisterType((*DeleteTokenRequest)(nil), "pixur.api.DeleteTokenRequest")
	proto.RegisterType((*DeleteTokenResponse)(nil), "pixur.api.DeleteTokenResponse")
	proto.RegisterType((*UpsertPicVoteRequest)(nil), "pixur.api.UpsertPicVoteRequest")
	proto.RegisterType((*UpsertPicVoteResponse)(nil), "pixur.api.UpsertPicVoteResponse")
	proto.RegisterType((*LookupPicVoteRequest)(nil), "pixur.api.LookupPicVoteRequest")
	proto.RegisterType((*LookupPicVoteResponse)(nil), "pixur.api.LookupPicVoteResponse")
	proto.RegisterType((*LookupPicFileRequest)(nil), "pixur.api.LookupPicFileRequest")
	proto.RegisterType((*LookupPicFileResponse)(nil), "pixur.api.LookupPicFileResponse")
	proto.RegisterType((*ReadPicFileRequest)(nil), "pixur.api.ReadPicFileRequest")
	proto.RegisterType((*ReadPicFileResponse)(nil), "pixur.api.ReadPicFileResponse")
	proto.RegisterType((*LookupPicExtensionRequest)(nil), "pixur.api.LookupPicExtensionRequest")
	proto.RegisterType((*LookupPicExtensionResponse)(nil), "pixur.api.LookupPicExtensionResponse")
	proto.RegisterMapType((map[string]*any.Any)(nil), "pixur.api.LookupPicExtensionResponse.ExtEntry")
	proto.RegisterType((*FindUserEventsRequest)(nil), "pixur.api.FindUserEventsRequest")
	proto.RegisterType((*FindUserEventsResponse)(nil), "pixur.api.FindUserEventsResponse")
	proto.RegisterType((*ServiceOpts)(nil), "pixur.api.ServiceOpts")
	proto.RegisterType((*HttpHeader)(nil), "pixur.api.HttpHeader")
	proto.RegisterExtension(E_PixurServiceOpts)
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 3774 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0xcd, 0x6f, 0xe3, 0x48,
	0x76, 0x1f, 0xea, 0x5b, 0x4f, 0x96, 0x44, 0x97, 0x65, 0x5b, 0xd6, 0xb8, 0x7b, 0xbc, 0x9c, 0xa4,
	0xe3, 0xed, 0xd9, 0x76, 0xcf, 0x78, 0xb6, 0x27, 0x3b, 0x3b, 0xbb, 0xdb, 0xa3, 0xb6, 0xe5, 0xb6,
	0xbc, 0x6e, 0x5b, 0xa0, 0x65, 0xf7, 0x64, 0x93, 0x05, 0x97, 0x96, 0x4a, 0x32, 0xd3, 0x12, 0xc9,
	0x90, 0x94, 0x5b, 0x0e, 0x10, 0x60, 0x93, 0xdc, 0x72, 0xca, 0x21, 0xb9, 0x04, 0x39, 0x04, 0xc9,
	0x21, 0x97, 0xfd, 0x0b, 0x92, 0xdc, 0x73, 0x09, 0x10, 0x20, 0xb9, 0x2c, 0x82, 0x5c, 0x02, 0xe4,
	0x0f, 0x09, 0xea, 0x83, 0x64, 0x51, 0xa4, 0x2c, 0xf5, 0x34, 0x16, 0xc8, 0x45, 0x60, 0x55, 0xbd,
	0xf7, 0xab, 0x57, 0xaf, 0x5e, 0xbd, 0x8f, 0x2a, 0x41, 0x51, 0xb7, 0x8d, 0x3d, 0xdb, 0xb1, 0x3c,
	0x0b, 0x15, 0x6d, 0x63, 0x3a, 0x71, 0xf6, 0x74, 0xdb, 0x68, 0x6c, 0x0d, 0x2d, 0x6b, 0x38, 0xc2,
	0x4f, 0xe9, 0xc0, 0xf5, 0x64, 0xf0, 0x54, 0x37, 0xef, 0x18, 0x55, 0x63, 0x67, 0x76, 0xa8, 0x8f,
	0xdd, 0x9e, 0x63, 0xd8, 0x9e, 0xe5, 0x70, 0x8a, 0x87, 0x31, 0x8a, 0x89, 0xa3, 0x7b, 0x86, 0x65,
	0xf2, 0xf1, 0x8f, 0x66, 0xc7, 0x3d, 0x63, 0x8c, 0x5d, 0x4f, 0x1f, 0xdb, 0xf3, 0x00, 0xde, 0x3a,
	0xba, 0x6d, 0x63, 0xc7, 0x65, 0xe3, 0xca, 0x3f, 0x64, 0x20, 0xdd, 0x31, 0x7a, 0xa8, 0x02, 0x29,
	0xa3, 0x5f, 0x97, 0x76, 0xa4, 0xdd, 0xa2, 0x9a, 0x32, 0xfa, 0xa8, 0x0e, 0xf9, 0x5b, 0xec, 0xb8,
	0x86, 0x65, 0xd6, 0x33, 0x3b, 0xd2, 0xae, 0xac, 0xfa, 0x4d, 0xf4, 0x63, 0x58, 0xe9, 0x39, 0x58,
	0xf7, 0x70, 0x5f, 0x23, 0x93, 0xd5, 0x2b, 0x3b, 0xd2, 0x6e, 0x69, 0xbf, 0xb1, 0xc7, 0x26, 0xda,
	0xf3, 0x27, 0xda, 0xeb, 0xfa, 0x92, 0xa8, 0x25, 0x4e, 0x4f, 0x7a, 0xd0, 0x73, 0x28, 0x8f, 0xad,
	0xbe, 0x31, 0x30, 0x7c, 0xfe, 0xea, 0x42, 0xfe, 0x15, 0x9f, 0x81, 0x02, 0x7c, 0x17, 0x64, 0x1b,
	0x9b, 0x7d, 0xc3, 0x1c, 0x6a, 0x7d, 0x3c, 0xc2, 0x44, 0x19, 0xf5, 0xe2, 0x8e, 0xb4, 0x5b, 0x50,
	0xab, 0xbc, 0xff, 0x90, 0x77, 0xa3, 0x07, 0x00, 0xb7, 0x06, 0x7e, 0xab, 0xf5, 0xac, 0x89, 0xe9,
	0xd5, 0x61, 0x47, 0xda, 0x4d, 0xab, 0x45, 0xd2, 0x73, 0x40, 0x3a, 0xd0, 0x16, 0x14, 0xdc, 0x9e,
	0xe5, 0x60, 0x6d, 0x64, 0xd5, 0x57, 0x76, 0xa4, 0x5d, 0x49, 0xcd, 0xd3, 0xf6, 0xa9, 0x15, 0x0e,
	0xdd, 0x18, 0xf5, 0xb2, 0x30, 0x74, 0x6c, 0xa0, 0x47, 0x90, 0x19, 0x18, 0x23, 0x5c, 0x97, 0xa9,
	0xdc, 0x68, 0x2f, 0xd8, 0xe9, 0xbd, 0x8e, 0xd1, 0x3b, 0x32, 0x46, 0x58, 0xa5, 0xe3, 0xe8, 0x7b,
	0x90, 0x73, 0xad, 0x89, 0xd3, 0xc3, 0x75, 0xb4, 0x93, 0xde, 0x2d, 0xed, 0xd7, 0xa2, 0x94, 0x17,
	0x74, 0x4c, 0xe5, 0x34, 0xe8, 0x53, 0x28, 0x7a, 0x37, 0x93, 0xf1, 0xb5, 0xa9, 0x1b, 0xa3, 0xfa,
	0x2a, 0x65, 0x48, 0x82, 0x0e, 0x89, 0xd0, 0xd7, 0x50, 0x1e, 0x18, 0x8e, 0xeb, 0x69, 0x13, 0x17,
	0x3b, 0x9a, 0xd1, 0xaf, 0xaf, 0x51, 0x81, 0xb6, 0x63, 0x8a, 0xbc, 0xf0, 0x1c, 0xc3, 0x1c, 0x5e,
	0xe9, 0xa3, 0x09, 0x56, 0x4b, 0x94, 0xe5, 0xd2, 0xc5, 0x4e, 0xbb, 0x7f, 0x92, 0x29, 0xa4, 0xe4,
	0xf4, 0x49, 0xa6, 0x90, 0x96, 0x33, 0x27, 0x99, 0x42, 0x56, 0xce, 0x9d, 0x64, 0x0a, 0x39, 0x39,
	0x7f, 0x92, 0x29, 0xe4, 0xe5, 0xc2, 0x49, 0xa6, 0x50, 0x90, 0x8b, 0x27, 0x99, 0x42, 0x49, 0x5e,
	0x51, 0xfe, 0x2e, 0x0d, 0x79, 0x2e, 0x42, 0xcc, 0x52, 0x3e, 0x83, 0xdc, 0xc0, 0x72, 0xc6, 0xba,
	0x57, 0x4f, 0xed, 0x48, 0xbb, 0x95, 0xfd, 0xad, 0xb8, 0xd8, 0x7b, 0x47, 0x94, 0x40, 0xe5, 0x84,
	0xa8, 0x06, 0xd9, 0xb7, 0x46, 0xdf, 0xbb, 0xa9, 0xa7, 0x77, 0xa4, 0xdd, 0xac, 0xca, 0x1a, 0x68,
	0x03, 0x72, 0x37, 0xd8, 0x18, 0xde, 0x78, 0xd4, 0xe2, 0xb2, 0x2a, 0x6f, 0xa1, 0x67, 0x50, 0xf0,
	0xad, 0xbe, 0x9e, 0xa5, 0x6b, 0xdc, 0x8a, 0xad, 0xf1, 0x90, 0x13, 0xa8, 0x01, 0x29, 0xda, 0x16,
	0x35, 0x9a, 0xa3, 0x06, 0x22, 0x68, 0x6f, 0xd6, 0x8a, 0xf3, 0xef, 0x69, 0xc5, 0x85, 0x77, 0xb4,
	0x62, 0x04, 0x19, 0xd7, 0xf8, 0x63, 0x4c, 0x2d, 0x37, 0xad, 0xd2, 0x6f, 0xe5, 0x2b, 0xc8, 0x31,
	0x45, 0xa1, 0x12, 0xe4, 0x2f, 0xcf, 0x7e, 0x7a, 0x76, 0xfe, 0xfa, 0x4c, 0xfe, 0x00, 0x15, 0x20,
	0x73, 0xd2, 0x69, 0xbd, 0x94, 0x25, 0x94, 0x87, 0xf4, 0xcb, 0xf6, 0x91, 0x9c, 0x22, 0x1f, 0x9d,
	0xb3, 0x97, 0x72, 0x9a, 0x8c, 0xbd, 0x6e, 0xbd, 0x78, 0x25, 0x67, 0x94, 0x57, 0x50, 0x0c, 0xac,
	0x0a, 0xc9, 0x90, 0x9e, 0x38, 0x23, 0xbe, 0x49, 0xe4, 0x13, 0x35, 0xa0, 0xe0, 0xe0, 0x01, 0x76,
	0x1c, 0xec, 0x50, 0xad, 0x17, 0xd5, 0xa0, 0x4d, 0x64, 0x31, 0xf5, 0x31, 0xa6, 0xfb, 0x57, 0x54,
	0xe9, 0xb7, 0xf2, 0xbf, 0x12, 0xe4, 0x3a, 0x46, 0xaf, 0xab, 0x0f, 0xd1, 0x3a, 0xe4, 0x6c, 0xa3,
	0xa7, 0x05, 0x9b, 0x9e, 0xb5, 0x8d, 0x5e, 0xbb, 0x4f, 0xba, 0x3d, 0x7d, 0x48, 0xba, 0x19, 0x5f,
	0xd6, 0xd3, 0x87, 0xed, 0x7e, 0x00, 0x96, 0x0e, 0xc1, 0x62, 0xca, 0xce, 0xbc, 0xa7, 0xb2, 0xb3,
	0xef, 0xa8, 0x6c, 0xc1, 0x99, 0xe5, 0x22, 0xce, 0x4c, 0xf9, 0xcf, 0x14, 0x40, 0xc7, 0xe8, 0x1d,
	0x58, 0xe3, 0x31, 0x36, 0xbd, 0x79, 0x4b, 0x7d, 0x00, 0xd0, 0x63, 0x14, 0xe1, 0x72, 0x8b, 0xbc,
	0xa7, 0xdd, 0x47, 0x8f, 0x61, 0xd5, 0x1f, 0xb6, 0x75, 0x87, 0x53, 0xb1, 0xf5, 0x57, 0xf9, 0x40,
	0x87, 0xf6, 0x33, 0xf5, 0x78, 0x78, 0xea, 0x51, 0x7b, 0x2b, 0xaa, 0xf4, 0xfb, 0xff, 0xaf, 0x7a,
	0xd0, 0x33, 0xc8, 0xfb, 0xde, 0xa5, 0xb0, 0x84, 0x77, 0xc9, 0x4d, 0xa8, 0x63, 0x51, 0xfe, 0x23,
	0x45, 0xdd, 0xc5, 0x95, 0xe5, 0xe1, 0x79, 0x2a, 0x15, 0x90, 0xf3, 0xcb, 0x23, 0xa3, 0x4f, 0x20,
	0x73, 0x6b, 0x79, 0xcc, 0xba, 0x2a, 0xfb, 0x9b, 0x51, 0x57, 0x43, 0xe6, 0xdb, 0x23, 0x3f, 0x2a,
	0x25, 0x7a, 0x87, 0x18, 0x96, 0x7d, 0x4f, 0x8d, 0xe7, 0xde, 0x4d, 0xe3, 0xca, 0x3e, 0x64, 0xa8,
	0x72, 0x22, 0xe7, 0x3c, 0x07, 0xa9, 0xcb, 0x8e, 0x2c, 0x91, 0x33, 0x7d, 0x48, 0x7a, 0x52, 0x64,
	0xf8, 0xac, 0x75, 0xd9, 0x55, 0x9b, 0xa7, 0x72, 0x5a, 0xf9, 0xb7, 0x14, 0x64, 0x88, 0xe3, 0x46,
	0x9b, 0xa1, 0xea, 0x98, 0x4a, 0x7d, 0xe5, 0xd4, 0x20, 0x6b, 0xf4, 0xb1, 0xe9, 0xf9, 0x07, 0x92,
	0x36, 0x62, 0x6b, 0x4d, 0xbf, 0xe7, 0x5a, 0x33, 0xef, 0x68, 0x5d, 0x5f, 0x43, 0x65, 0xa4, 0xbb,
	0x9e, 0xe6, 0x62, 0x6c, 0x2e, 0x6d, 0x9f, 0x84, 0xe3, 0x02, 0x63, 0x73, 0x81, 0x7d, 0x7e, 0x09,
	0xd0, 0xd3, 0x6d, 0xfd, 0xda, 0x18, 0x19, 0xde, 0x5d, 0x3d, 0xbf, 0x93, 0x9e, 0x89, 0x3f, 0x07,
	0xc1, 0x20, 0xf9, 0x54, 0x05, 0x62, 0x92, 0xf8, 0x40, 0x38, 0xac, 0xfc, 0x55, 0x06, 0xd2, 0x07,
	0xba, 0x1d, 0xdd, 0x91, 0x0a, 0x40, 0xa7, 0x7d, 0xa0, 0x1d, 0xa8, 0xad, 0x66, 0xb7, 0x25, 0x4b,
	0x68, 0x05, 0x0a, 0xa4, 0xad, 0xb6, 0x9a, 0x87, 0x72, 0x0a, 0x95, 0xa1, 0x48, 0x5a, 0xed, 0xb3,
	0xc3, 0xd6, 0x37, 0x72, 0x1a, 0xad, 0x41, 0x95, 0x34, 0x2f, 0xce, 0x8f, 0xba, 0xda, 0x61, 0xeb,
	0xb4, 0xd5, 0x6d, 0xc9, 0x59, 0xbf, 0xf3, 0xb8, 0xa9, 0x1e, 0xfa, 0x9d, 0x39, 0x9f, 0xb1, 0x73,
	0xa9, 0xbe, 0x6c, 0xc9, 0x79, 0xf4, 0x21, 0x6c, 0x92, 0xe6, 0x65, 0xe7, 0xb0, 0xd9, 0x6d, 0x69,
	0x57, 0xed, 0xd6, 0x6b, 0xed, 0xe0, 0xfc, 0xf2, 0xac, 0xdb, 0x52, 0xe5, 0x02, 0x42, 0x50, 0x21,
	0x83, 0xdd, 0xe6, 0x4b, 0x5f, 0x8c, 0x22, 0xda, 0x00, 0x44, 0xc5, 0x3a, 0x7f, 0xf5, 0xaa, 0x75,
	0xd6, 0xf5, 0xfb, 0xc1, 0x9f, 0xec, 0xea, 0xbc, 0xdb, 0xf2, 0x3b, 0x4b, 0xa8, 0x0a, 0xa5, 0xcb,
	0x8b, 0x96, 0xea, 0x77, 0x64, 0x50, 0x03, 0x36, 0x68, 0x07, 0x9f, 0xef, 0xa0, 0xd9, 0x69, 0xbe,
	0x68, 0x9f, 0xb6, 0xbb, 0xbf, 0x27, 0xaf, 0x90, 0xd9, 0xe8, 0x18, 0x59, 0xa1, 0x76, 0xd1, 0x3a,
	0x3d, 0x92, 0xcb, 0x68, 0x15, 0xca, 0x61, 0x5f, 0xf3, 0xf4, 0x54, 0xae, 0xa0, 0x3a, 0xd4, 0xc8,
	0x44, 0xad, 0x6f, 0xba, 0xad, 0xb3, 0x8b, 0xf6, 0xf9, 0x99, 0x0f, 0x5e, 0xf5, 0x45, 0x0b, 0x47,
	0xa8, 0xae, 0x64, 0xb4, 0x03, 0xdb, 0xa2, 0xc8, 0x31, 0xce, 0x55, 0xf4, 0x10, 0x1a, 0xc9, 0x14,
	0x14, 0x01, 0xa1, 0x6d, 0xa8, 0xfb, 0x8a, 0x88, 0x71, 0xaf, 0x91, 0x45, 0xc5, 0x47, 0x29, 0x67,
	0x0d, 0x3d, 0x80, 0xad, 0x40, 0x2d, 0x31, 0xd6, 0x75, 0x5f, 0xfd, 0x33, 0xc3, 0x94, 0x77, 0x43,
	0xf9, 0x97, 0x15, 0xa8, 0xbd, 0xd0, 0x7b, 0x6f, 0xb0, 0xd9, 0x3f, 0xb0, 0xcc, 0x81, 0x31, 0xf4,
	0xb3, 0x8b, 0x36, 0xa0, 0xb1, 0x61, 0x6a, 0xbe, 0xdf, 0x1f, 0x61, 0x73, 0xe8, 0xdd, 0xd0, 0xf3,
	0x58, 0xda, 0xff, 0x30, 0x66, 0xd9, 0x6d, 0xd3, 0xfb, 0xe2, 0xfb, 0xcc, 0x93, 0xc9, 0x63, 0xc3,
	0xe4, 0xe1, 0xe6, 0x94, 0x32, 0x51, 0x28, 0x7d, 0x3a, 0x0b, 0x95, 0x5a, 0x06, 0x4a, 0x9f, 0x46,
	0xa1, 0x5a, 0x40, 0xe0, 0x35, 0x7a, 0xf0, 0x7d, 0xa0, 0xf4, 0x62, 0xa0, 0xca, 0xd8, 0x30, 0xdb,
	0xfd, 0x28, 0x8c, 0x3e, 0x8d, 0xc2, 0x64, 0x96, 0x81, 0xd1, 0xa7, 0x22, 0xcc, 0x29, 0xd4, 0x88,
	0x34, 0x24, 0x1b, 0xd6, 0x48, 0x1e, 0xe0, 0x43, 0x65, 0x17, 0x43, 0xad, 0x8e, 0x0d, 0x93, 0x64,
	0x8e, 0x67, 0xfa, 0x18, 0x0b, 0x68, 0xfa, 0x34, 0x8e, 0x96, 0x5b, 0x06, 0x4d, 0x9f, 0xce, 0xa0,
	0x35, 0x81, 0x2c, 0x5a, 0x9b, 0x38, 0x23, 0x1f, 0x27, 0xbf, 0x18, 0x67, 0x65, 0x6c, 0x98, 0x97,
	0xce, 0x48, 0x80, 0xd0, 0xa7, 0x22, 0x44, 0x61, 0x19, 0x08, 0x7d, 0x1a, 0x85, 0x30, 0x4c, 0x8d,
	0xe4, 0x51, 0x1c, 0xa2, 0xb8, 0x9c, 0x14, 0x5d, 0x7d, 0x18, 0x95, 0x42, 0x80, 0x80, 0xe5, 0xa4,
	0x08, 0x21, 0x7e, 0x01, 0x35, 0xdd, 0xb4, 0xcc, 0xbb, 0xb1, 0x35, 0x71, 0x35, 0xc1, 0x9f, 0x96,
	0x28, 0xd0, 0x13, 0xc1, 0x9f, 0x26, 0x1d, 0x05, 0xc1, 0xc9, 0x5e, 0x60, 0x4f, 0x5d, 0x0b, 0xa0,
	0xc2, 0x7e, 0xf4, 0x73, 0x58, 0x33, 0xf1, 0x5b, 0x56, 0xa9, 0x08, 0x13, 0xac, 0x7c, 0x9b, 0x09,
	0x56, 0x4d, 0xfc, 0x96, 0xc4, 0x41, 0x01, 0x5e, 0x85, 0xcd, 0x3e, 0x1e, 0xe8, 0x93, 0x91, 0xa7,
	0x0d, 0x0c, 0xb3, 0xaf, 0x19, 0x66, 0x1f, 0x4f, 0x35, 0xdb, 0xe8, 0xb9, 0xb4, 0x78, 0x5b, 0xa0,
	0x8c, 0x1a, 0xe7, 0x3d, 0x32, 0xcc, 0x7e, 0x9b, 0x70, 0x76, 0x8c, 0x9e, 0x8b, 0x4e, 0x60, 0x8d,
	0x99, 0x5b, 0x14, 0xaf, 0xb2, 0xdc, 0xb1, 0x8c, 0x62, 0xb5, 0x80, 0x58, 0xa0, 0xf6, 0x16, 0x5f,
	0x8f, 0xb5, 0xa0, 0x94, 0xa9, 0x2e, 0x2a, 0x65, 0xaa, 0x63, 0x7d, 0xfa, 0x1a, 0x5f, 0x8f, 0xfd,
	0x0e, 0xf4, 0x07, 0xf0, 0x00, 0x9b, 0xfa, 0xf5, 0x08, 0x13, 0x51, 0x02, 0x7f, 0xe1, 0xe2, 0xd1,
	0x40, 0x73, 0xb0, 0x3d, 0xba, 0xe3, 0x25, 0x69, 0x3c, 0xb0, 0xbe, 0xb0, 0xac, 0x11, 0x93, 0x6d,
	0x8b, 0x01, 0x84, 0x29, 0xef, 0x05, 0x1e, 0x0d, 0x54, 0xc2, 0x8c, 0xae, 0x61, 0x27, 0x09, 0xdd,
	0xb8, 0x1e, 0x91, 0x52, 0x9b, 0x4d, 0xb0, 0xba, 0x70, 0x82, 0xed, 0xd8, 0x04, 0x0c, 0x80, 0xcd,
	0xd1, 0x85, 0x7a, 0x64, 0xa3, 0xa8, 0x41, 0xe0, 0x5b, 0x6c, 0x7a, 0x6e, 0x1d, 0x2d, 0xd6, 0xec,
	0xba, 0xb0, 0x53, 0xc4, 0x04, 0x5a, 0x94, 0x33, 0xf4, 0x0c, 0x33, 0x88, 0x6b, 0xcb, 0x7a, 0x06,
	0x11, 0xad, 0x71, 0x02, 0xe5, 0x88, 0xc1, 0xcd, 0x24, 0x19, 0xd2, 0xbb, 0x24, 0x19, 0xff, 0x9a,
	0x87, 0x62, 0x00, 0x3d, 0x3f, 0x71, 0x53, 0xa0, 0x1c, 0xca, 0x1d, 0x96, 0x18, 0xa5, 0x89, 0xcf,
	0xda, 0xee, 0xbf, 0x6f, 0x1a, 0x87, 0xa1, 0x6e, 0x4d, 0xbc, 0xa1, 0x45, 0xf6, 0x72, 0x62, 0xbb,
	0xd8, 0xf1, 0xe8, 0x36, 0xd3, 0x64, 0x9a, 0xb9, 0xf6, 0xc7, 0xc2, 0x92, 0x02, 0x99, 0xf7, 0xce,
	0x39, 0xd3, 0x25, 0xe5, 0xe1, 0x49, 0xf6, 0xf1, 0x07, 0xea, 0xba, 0x95, 0x34, 0x40, 0xa6, 0x31,
	0xcc, 0x9e, 0x35, 0x4e, 0x9a, 0x26, 0x7b, 0xcf, 0x34, 0x6d, 0xce, 0x14, 0x9b, 0xc6, 0x48, 0x1a,
	0x40, 0xbf, 0x0f, 0xb5, 0x60, 0x35, 0x82, 0xb5, 0xf2, 0x58, 0xf0, 0x3b, 0xf7, 0xae, 0x24, 0x34,
	0xcd, 0xe3, 0x0f, 0x54, 0x64, 0xc5, 0x7a, 0x09, 0x78, 0xb0, 0x06, 0x11, 0x3c, 0x7f, 0x0f, 0xb8,
	0x2f, 0x7f, 0x14, 0xdc, 0x88, 0xf5, 0xa2, 0xe7, 0x00, 0xa1, 0x5e, 0x78, 0xc0, 0x78, 0x98, 0x08,
	0x19, 0xac, 0xf8, 0xf8, 0x03, 0xb5, 0x38, 0xf1, 0x1b, 0x8d, 0x3d, 0x58, 0x4f, 0xdc, 0x93, 0x39,
	0x85, 0x56, 0xe3, 0x0a, 0xd6, 0x13, 0x95, 0x3b, 0xaf, 0x30, 0x7b, 0x04, 0x55, 0x77, 0x72, 0xfd,
	0x87, 0xb8, 0x17, 0x5e, 0x2c, 0x31, 0x6b, 0x2c, 0xf3, 0x6e, 0x76, 0x79, 0xd4, 0x38, 0x01, 0x14,
	0xd7, 0xe8, 0xb7, 0x2b, 0xa0, 0x1b, 0xb7, 0x80, 0xe2, 0x0a, 0xfc, 0xcd, 0x17, 0xe3, 0x0d, 0x05,
	0x8a, 0x81, 0x4e, 0xe6, 0x4c, 0xf7, 0x22, 0x0b, 0x69, 0x7c, 0xeb, 0x29, 0xdf, 0x83, 0xd5, 0x53,
	0xcb, 0x7a, 0x33, 0xb1, 0xc9, 0xf2, 0x55, 0xfc, 0x47, 0x13, 0xec, 0xce, 0x3f, 0xd0, 0xca, 0x97,
	0x80, 0x44, 0x6a, 0xd7, 0xb6, 0x4c, 0x17, 0xa3, 0x8f, 0x21, 0x43, 0xc6, 0x79, 0x96, 0x58, 0x9d,
	0xd9, 0x75, 0x95, 0x0e, 0x2a, 0x7f, 0x96, 0x81, 0xd5, 0x4b, 0xbb, 0xaf, 0x7b, 0x78, 0x99, 0x99,
	0xc4, 0xda, 0x28, 0x15, 0xad, 0x8d, 0x7e, 0xe2, 0x57, 0x83, 0xcc, 0x53, 0xec, 0x8a, 0xd3, 0xcd,
	0xe2, 0xef, 0x1d, 0xdc, 0xe8, 0xe6, 0x10, 0xd3, 0xe4, 0xcd, 0xaf, 0x1b, 0x9b, 0x90, 0x73, 0x71,
	0xcf, 0xc1, 0x1e, 0xf7, 0x0f, 0xdf, 0x5d, 0x02, 0xe0, 0x82, 0x32, 0xa8, 0x9c, 0x11, 0xbd, 0x8a,
	0x78, 0xce, 0x6c, 0x2c, 0xda, 0xcf, 0x83, 0x09, 0x3d, 0xaa, 0xe8, 0x4d, 0x1b, 0x1f, 0x43, 0x49,
	0x90, 0x33, 0x2c, 0x77, 0x25, 0xa1, 0xdc, 0x6d, 0x3c, 0x82, 0x15, 0x51, 0x16, 0xb4, 0x11, 0x2c,
	0x83, 0x2b, 0x8e, 0xb5, 0x1a, 0x7f, 0x23, 0x81, 0x3c, 0x3b, 0x1b, 0xa9, 0x55, 0x5d, 0xec, 0x69,
	0xef, 0xe2, 0xee, 0xcb, 0x2e, 0xf6, 0x04, 0x84, 0x43, 0x90, 0x7b, 0x23, 0xac, 0x47, 0xd2, 0x9c,
	0xd4, 0x22, 0x8c, 0x2a, 0x65, 0x11, 0xaa, 0xd1, 0x2f, 0x01, 0x89, 0xba, 0x79, 0x17, 0xfb, 0x69,
	0x42, 0x25, 0x3c, 0x43, 0x5d, 0x07, 0x63, 0xf4, 0x14, 0xf2, 0xbe, 0x0b, 0x93, 0xe8, 0xc5, 0xf2,
	0x7a, 0xf4, 0xda, 0x84, 0xd3, 0xaa, 0x3e, 0x95, 0xf2, 0x29, 0x6c, 0x32, 0xeb, 0xed, 0x18, 0xbd,
	0x43, 0xec, 0xe9, 0xc6, 0xc8, 0xf5, 0xed, 0x30, 0xf9, 0x90, 0x28, 0xff, 0x2d, 0x41, 0x3d, 0xce,
	0xc2, 0xc5, 0xde, 0x81, 0x34, 0xf1, 0x75, 0x4c, 0xea, 0x4a, 0x74, 0x6e, 0x95, 0x0c, 0xa1, 0xc7,
	0x90, 0x27, 0xa8, 0x9e, 0x3e, 0xa4, 0xba, 0x2a, 0xed, 0xaf, 0x46, 0xa9, 0xba, 0xfa, 0x50, 0x25,
	0xf3, 0x76, 0xf5, 0x21, 0x3a, 0x00, 0x59, 0xcc, 0x4f, 0x3c, 0x07, 0xfb, 0xb1, 0x70, 0x2b, 0x71,
	0x59, 0x44, 0x05, 0x6a, 0xc5, 0x8e, 0xaa, 0xe4, 0x09, 0x14, 0x08, 0x08, 0xbd, 0xc7, 0xcf, 0xcc,
	0xbd, 0x6c, 0x27, 0x42, 0x91, 0x0f, 0xe5, 0x0a, 0x6a, 0x91, 0x84, 0xce, 0xd7, 0xc6, 0x0e, 0xac,
	0xb8, 0x9e, 0xce, 0x63, 0x5c, 0xa0, 0x13, 0xa0, 0x7d, 0x1d, 0xea, 0xac, 0xb6, 0xa1, 0xa8, 0xbb,
	0x3d, 0xf6, 0x2c, 0x41, 0x0f, 0x68, 0x41, 0x0d, 0x3b, 0x94, 0x3b, 0x58, 0x9f, 0xc1, 0x9d, 0x55,
	0x59, 0x7a, 0x9e, 0xca, 0x1e, 0x42, 0xc9, 0xc4, 0xd3, 0x60, 0x66, 0xee, 0x06, 0x49, 0x17, 0x9b,
	0xf8, 0x21, 0x94, 0x6c, 0x07, 0xdf, 0xfa, 0xe3, 0xcc, 0x01, 0x16, 0x49, 0x17, 0x1d, 0x57, 0x36,
	0xd8, 0x92, 0x2e, 0x7a, 0x37, 0xb8, 0x2f, 0x2c, 0x49, 0xf9, 0x92, 0x89, 0x24, 0xf4, 0x2f, 0x2b,
	0x92, 0xf2, 0x23, 0x58, 0x6d, 0xf6, 0xfb, 0x6c, 0xbb, 0x16, 0x18, 0x0c, 0x92, 0x21, 0xed, 0xef,
	0x76, 0x51, 0x25, 0x9f, 0x4a, 0x0d, 0x90, 0xc8, 0xcd, 0x66, 0x55, 0x9e, 0xc2, 0x06, 0x15, 0xc7,
	0x18, 0x1b, 0x23, 0xdd, 0x11, 0x75, 0x3f, 0xc7, 0x12, 0x3f, 0x85, 0xcd, 0x18, 0x03, 0x5f, 0x81,
	0xc8, 0x91, 0x0e, 0x39, 0xf6, 0x61, 0xab, 0x6d, 0xf6, 0x1c, 0x4c, 0x8c, 0xe3, 0xca, 0x7f, 0x1b,
	0x5a, 0x30, 0xcb, 0x36, 0x34, 0x92, 0x78, 0xb8, 0xd0, 0xbb, 0x50, 0xed, 0x4c, 0x9c, 0x21, 0x49,
	0x82, 0x17, 0xe0, 0x20, 0x90, 0x43, 0x4a, 0xce, 0xfd, 0xcf, 0x12, 0xd4, 0x2e, 0xac, 0x81, 0x47,
	0x5f, 0xb1, 0x16, 0x63, 0x90, 0x08, 0xd0, 0x67, 0x27, 0x8e, 0x5b, 0x81, 0xdf, 0x44, 0x9f, 0x41,
	0xce, 0xc1, 0xba, 0x6b, 0x99, 0xfc, 0xba, 0x54, 0x3c, 0x20, 0xfe, 0x1b, 0x99, 0x4a, 0x09, 0x54,
	0x4e, 0x88, 0x9e, 0x43, 0xd9, 0x7f, 0x54, 0x5b, 0xfa, 0xb6, 0xcf, 0x67, 0xa0, 0x37, 0x9b, 0x9b,
	0xb0, 0x3e, 0x23, 0x3c, 0x5f, 0xd6, 0x9f, 0x4b, 0x20, 0x07, 0xc1, 0xd6, 0x5f, 0xd2, 0xfd, 0xef,
	0x14, 0xd9, 0xc5, 0xef, 0x14, 0xa4, 0xaf, 0xaf, 0x7b, 0x3a, 0x5d, 0xe1, 0x8a, 0x4a, 0xbf, 0xd1,
	0x16, 0x14, 0xc6, 0xfd, 0x67, 0xda, 0x8d, 0xee, 0xb2, 0x6b, 0x8b, 0x15, 0x35, 0x3f, 0xee, 0x3f,
	0x3b, 0xd6, 0xdd, 0x1b, 0xe5, 0x19, 0x09, 0xae, 0x81, 0x10, 0xcb, 0x3a, 0x28, 0xa5, 0x09, 0xab,
	0x07, 0x34, 0x99, 0x16, 0x63, 0x72, 0x62, 0xfc, 0x11, 0xe2, 0x4d, 0x4a, 0x8c, 0x37, 0xc4, 0xbe,
	0x45, 0x08, 0xae, 0x95, 0x37, 0xb0, 0xf1, 0x12, 0x7b, 0x2a, 0x1e, 0x38, 0xd8, 0xbd, 0xe9, 0x5a,
	0x6f, 0xb0, 0xf9, 0xad, 0xd0, 0xd1, 0xc7, 0x50, 0x76, 0x18, 0x88, 0xe6, 0x11, 0x14, 0x7e, 0xe0,
	0x57, 0x1c, 0x01, 0x59, 0xf9, 0x55, 0x0a, 0x36, 0x63, 0xb3, 0x05, 0xb1, 0x65, 0x06, 0x40, 0x8a,
	0x03, 0x90, 0xd4, 0x4b, 0x9f, 0x78, 0x3e, 0x05, 0xf7, 0x39, 0xa4, 0x87, 0x0d, 0x7f, 0x08, 0x45,
	0xdb, 0x98, 0xf2, 0x51, 0xbe, 0x79, 0xb6, 0x31, 0x65, 0x83, 0x3f, 0x81, 0xaa, 0x3f, 0x81, 0xad,
	0xdf, 0x8d, 0x2c, 0xbd, 0xcf, 0xdd, 0x76, 0x24, 0x1a, 0xbd, 0xf5, 0x3a, 0x6c, 0x50, 0xad, 0x70,
	0x6a, 0xde, 0x46, 0x3f, 0x80, 0x15, 0x3a, 0xb7, 0xcf, 0x9c, 0xb9, 0x8f, 0xb9, 0x44, 0x48, 0x7d,
	0xce, 0x2f, 0xa0, 0x44, 0xc4, 0xf2, 0x19, 0x73, 0xf7, 0x31, 0x82, 0x6d, 0x4c, 0xf9, 0xb7, 0xf2,
	0xf7, 0x12, 0x14, 0x3b, 0x6f, 0xbd, 0x63, 0xac, 0xf7, 0xb1, 0x83, 0x7e, 0x04, 0x45, 0x7d, 0x34,
	0xb4, 0x1c, 0xc3, 0xbb, 0x19, 0x53, 0xe5, 0x54, 0x22, 0x79, 0x7b, 0x40, 0xb8, 0xd7, 0xf4, 0xa9,
	0xd4, 0x90, 0x61, 0x36, 0x4d, 0x4b, 0x87, 0x2f, 0x50, 0x3f, 0x86, 0x62, 0xc0, 0x11, 0xbd, 0x7d,
	0x2e, 0x42, 0xf6, 0xf8, 0x62, 0xff, 0xd9, 0x17, 0xb2, 0x44, 0x3e, 0x55, 0xfa, 0x49, 0x6f, 0x9d,
	0x8f, 0x2f, 0x9e, 0x7d, 0xb6, 0xaf, 0x91, 0x66, 0x5a, 0xf9, 0xdb, 0x34, 0x40, 0x28, 0x3f, 0x99,
	0x87, 0xa7, 0xe9, 0x7c, 0x03, 0xfd, 0x26, 0xa9, 0x62, 0x4d, 0xcb, 0xd3, 0xae, 0xf1, 0xc0, 0x72,
	0x30, 0xbf, 0x5d, 0xbc, 0xef, 0x58, 0x17, 0x4d, 0xcb, 0x7b, 0x41, 0x89, 0xd1, 0xef, 0x02, 0x69,
	0x68, 0xfa, 0xc0, 0xe3, 0x8f, 0x87, 0xf7, 0x73, 0x16, 0x4c, 0xcb, 0x6b, 0x12, 0x5a, 0x9a, 0x4e,
	0x59, 0x03, 0x4f, 0x0b, 0xb9, 0x97, 0x78, 0x28, 0x21, 0x1c, 0x67, 0x3e, 0xc2, 0x06, 0xe4, 0x0c,
	0xd7, 0x9d, 0x60, 0x87, 0xee, 0x77, 0x51, 0xe5, 0x2d, 0x72, 0xc4, 0xa9, 0x99, 0x11, 0x6f, 0x98,
	0x65, 0x0a, 0xa5, 0x6d, 0x56, 0xc0, 0xb0, 0xa1, 0x30, 0xfd, 0x2f, 0x50, 0x8a, 0x32, 0xed, 0x0e,
	0x5e, 0xe2, 0xf6, 0x20, 0xe3, 0xdd, 0xd9, 0xec, 0xe5, 0xb7, 0xb2, 0xdf, 0x48, 0xb4, 0x87, 0xbd,
	0xee, 0x9d, 0x8d, 0x55, 0x4a, 0xa7, 0x7c, 0x0e, 0x19, 0xd2, 0x8a, 0xee, 0x51, 0x09, 0xf2, 0x6a,
	0xeb, 0x48, 0x6d, 0x5d, 0x1c, 0xb3, 0x87, 0x9b, 0xe6, 0x65, 0xf7, 0x98, 0xbf, 0xcf, 0xb6, 0xbf,
	0x91, 0xd3, 0xca, 0x18, 0x6a, 0x2c, 0xaa, 0xf9, 0x49, 0xd6, 0xfd, 0xbe, 0x3c, 0xb1, 0x78, 0x49,
	0xdd, 0xff, 0x92, 0x98, 0x0e, 0x5f, 0x12, 0x95, 0x63, 0x58, 0x9f, 0x99, 0x8e, 0x1f, 0xef, 0x48,
	0x0e, 0x28, 0x2d, 0x91, 0x03, 0xd6, 0x00, 0x31, 0x1f, 0x2e, 0x3a, 0x25, 0x65, 0x1d, 0xd6, 0x22,
	0xbd, 0xdc, 0x8b, 0x79, 0x50, 0x8b, 0xd4, 0x96, 0x8b, 0x23, 0x96, 0x7f, 0x18, 0xd2, 0xd1, 0x9a,
	0xc5, 0x7f, 0xde, 0x4b, 0x2d, 0xf1, 0xbc, 0x47, 0x42, 0xcd, 0xcc, 0xac, 0x5c, 0x9c, 0x23, 0xa8,
	0x05, 0xc9, 0xe8, 0x12, 0xe2, 0x08, 0xb5, 0x55, 0x2a, 0x52, 0xc5, 0x3d, 0x87, 0xf5, 0x19, 0x1c,
	0xae, 0xcd, 0x47, 0x5c, 0x4c, 0x29, 0xe9, 0x2f, 0x20, 0x82, 0x84, 0x86, 0x20, 0x08, 0xcd, 0x28,
	0xb9, 0x20, 0x24, 0x39, 0xe3, 0xe9, 0x67, 0x28, 0x4d, 0x91, 0x67, 0x9b, 0xed, 0x6f, 0xf3, 0x97,
	0x0a, 0xe5, 0x48, 0x90, 0x95, 0x4d, 0xc5, 0x65, 0x15, 0x53, 0x5d, 0x69, 0xee, 0x5f, 0x56, 0x82,
	0x54, 0xf7, 0xaf, 0x25, 0x40, 0x2a, 0xd6, 0xfb, 0xbf, 0x71, 0x89, 0xc9, 0xd1, 0xb6, 0x06, 0x03,
	0x17, 0x33, 0x0b, 0x4e, 0xab, 0xbc, 0x45, 0x02, 0xdf, 0xc8, 0x18, 0x1b, 0xac, 0xec, 0x4c, 0xab,
	0xac, 0xa1, 0x7c, 0x05, 0x6b, 0x11, 0xb1, 0xf8, 0xea, 0xfc, 0xf0, 0x2f, 0x09, 0xe1, 0x5f, 0x86,
	0x34, 0xb6, 0x06, 0x3c, 0xdb, 0x26, 0x9f, 0x24, 0xc5, 0x0b, 0x94, 0xd3, 0x9a, 0x7a, 0xd8, 0x74,
	0x69, 0xe6, 0x73, 0x6f, 0x6a, 0xf6, 0x2b, 0x09, 0x1a, 0x49, 0x4c, 0x7c, 0xe2, 0xaf, 0x21, 0x4d,
	0x0e, 0x1f, 0x4b, 0x87, 0xf7, 0x84, 0xd5, 0xce, 0xe7, 0xd9, 0x6b, 0x4d, 0xbd, 0x96, 0xe9, 0x39,
	0x77, 0x2a, 0x61, 0x6d, 0x9c, 0x42, 0xc1, 0xef, 0x20, 0x22, 0xbf, 0xc1, 0x77, 0x7e, 0x1e, 0xf4,
	0x06, 0xdf, 0xa1, 0xc7, 0x90, 0xbd, 0xd5, 0x47, 0x13, 0xdf, 0x53, 0xd7, 0x62, 0x1e, 0xb3, 0x69,
	0xde, 0xa9, 0x8c, 0xe4, 0x87, 0xa9, 0x1f, 0x48, 0xca, 0x9f, 0xb0, 0xbc, 0x3d, 0xbc, 0xc7, 0x5c,
	0x78, 0x73, 0xf0, 0x04, 0xd6, 0x58, 0xf1, 0x92, 0x74, 0xf5, 0x28, 0xd3, 0xa1, 0x4b, 0xe1, 0xfe,
	0x31, 0x52, 0xc9, 0xa4, 0x67, 0x2b, 0x99, 0x7f, 0x94, 0x58, 0xa2, 0x2e, 0xce, 0xcf, 0x35, 0xf5,
	0x39, 0x40, 0x38, 0x03, 0x57, 0x58, 0x2d, 0xe9, 0xc6, 0x4b, 0x2d, 0x06, 0xf7, 0x9d, 0xe8, 0x13,
	0x40, 0xb4, 0xbc, 0x49, 0x92, 0xad, 0x4a, 0x46, 0x44, 0xd1, 0x3e, 0x01, 0x44, 0x6b, 0x9d, 0x28,
	0x31, 0xbf, 0xf3, 0x21, 0x23, 0x02, 0xb1, 0xf2, 0x4f, 0x12, 0x94, 0x2e, 0xb0, 0x73, 0x6b, 0xf4,
	0xf0, 0xb9, 0xed, 0xb9, 0xe8, 0x23, 0x28, 0xe9, 0xb6, 0xa1, 0xf9, 0x0e, 0x49, 0xa2, 0x46, 0x07,
	0xba, 0x6d, 0x5c, 0x71, 0x9f, 0xf4, 0x19, 0xac, 0x87, 0x49, 0x8f, 0x76, 0x43, 0x83, 0xbc, 0x46,
	0x76, 0x8b, 0x49, 0x83, 0x82, 0xfc, 0x87, 0xc5, 0xff, 0x9f, 0xe2, 0x3b, 0xf4, 0x14, 0x6a, 0x41,
	0x22, 0x24, 0x72, 0x30, 0x91, 0x56, 0xfd, 0x9c, 0x28, 0x64, 0x78, 0x04, 0xd5, 0x1b, 0xcf, 0xb3,
	0x45, 0x5a, 0x16, 0xef, 0xca, 0xa4, 0x3b, 0xa0, 0x53, 0xbe, 0x0f, 0x70, 0x1c, 0x74, 0x24, 0x58,
	0x4d, 0x4d, 0xb4, 0x9a, 0x22, 0xb7, 0x8f, 0xc7, 0x5f, 0x41, 0x25, 0x9a, 0xee, 0xc7, 0xfe, 0x5f,
	0x74, 0x76, 0x7e, 0xd6, 0x92, 0x25, 0x84, 0xa0, 0xa2, 0x5e, 0x9e, 0xb6, 0xb4, 0xab, 0xf6, 0xf9,
	0x69, 0xb3, 0xdb, 0x3e, 0x3f, 0x93, 0x53, 0xfb, 0xbf, 0xae, 0xc0, 0x4a, 0x87, 0x6c, 0x16, 0x57,
	0x1a, 0x52, 0xa1, 0x1c, 0x89, 0x31, 0xe8, 0x23, 0x61, 0x33, 0x93, 0x82, 0x5d, 0x63, 0x67, 0x3e,
	0x01, 0xb7, 0x91, 0x36, 0x40, 0x58, 0xfc, 0xa1, 0xed, 0x18, 0xbd, 0x50, 0x51, 0x36, 0x1e, 0xcc,
	0x19, 0x0d, 0xa1, 0xc2, 0x3c, 0x3b, 0x02, 0x15, 0xcb, 0xe0, 0x23, 0x50, 0xf1, 0xe4, 0x1c, 0x9d,
	0x42, 0x49, 0x88, 0x76, 0xe8, 0xc1, 0x6c, 0xf9, 0x14, 0x89, 0x8d, 0x8d, 0x87, 0xf3, 0x86, 0x39,
	0xda, 0x6b, 0x28, 0x47, 0x5f, 0x85, 0x44, 0xbd, 0x25, 0x5d, 0x2f, 0x44, 0xf4, 0x96, 0x78, 0x4f,
	0xa0, 0xa4, 0xff, 0x32, 0x25, 0xf9, 0xc0, 0x41, 0xc9, 0x1e, 0x03, 0x9e, 0x2d, 0xf2, 0x63, 0xc0,
	0xb1, 0x6a, 0x9f, 0x01, 0xff, 0x1c, 0xaa, 0x33, 0xb5, 0x34, 0xfa, 0xce, 0x2c, 0x67, 0xac, 0x30,
	0x6f, 0x28, 0xf7, 0x91, 0x88, 0xf0, 0x3f, 0x83, 0xca, 0xcc, 0x43, 0xce, 0xac, 0x5c, 0x31, 0x6f,
	0xd6, 0xf8, 0xce, 0x3d, 0x14, 0x22, 0xf6, 0x37, 0x50, 0x9d, 0xa9, 0x74, 0x22, 0xa2, 0x27, 0xd7,
	0x5c, 0x11, 0xd1, 0xe7, 0x15, 0x4a, 0x3a, 0xbd, 0xab, 0x9e, 0x29, 0xfd, 0xd1, 0x6f, 0x09, 0x9c,
	0x73, 0x6f, 0x13, 0x1a, 0xbf, 0xbd, 0x80, 0x8a, 0x4f, 0xf1, 0x0b, 0x90, 0x67, 0x2f, 0xd3, 0x90,
	0x92, 0x14, 0x62, 0xa2, 0x97, 0x73, 0x8d, 0x8f, 0xef, 0xa5, 0x11, 0xd5, 0x33, 0xf0, 0xef, 0xa7,
	0xc5, 0x38, 0x15, 0x59, 0xc4, 0xdc, 0x78, 0x19, 0x59, 0xc4, 0xfc, 0x60, 0x17, 0x98, 0x66, 0x24,
	0x2b, 0x89, 0x98, 0x66, 0x52, 0x6a, 0x14, 0x31, 0xcd, 0xc4, 0x84, 0x86, 0x01, 0x5f, 0x42, 0x49,
	0x48, 0x07, 0x22, 0x47, 0x33, 0x9e, 0xbd, 0x44, 0x8e, 0x66, 0x42, 0x16, 0x41, 0x21, 0x77, 0xa5,
	0x4f, 0xa3, 0xf2, 0xd2, 0x47, 0x92, 0x44, 0x79, 0x85, 0x9c, 0x32, 0x59, 0xde, 0x48, 0x36, 0x4a,
	0xe5, 0x3d, 0x03, 0x08, 0x1f, 0x04, 0x22, 0x5e, 0x29, 0xf6, 0xaa, 0x10, 0xf1, 0x4a, 0xf1, 0x57,
	0x04, 0x86, 0x77, 0x00, 0x05, 0xff, 0xe2, 0x08, 0x45, 0x4a, 0x97, 0xe8, 0xbd, 0x53, 0xe3, 0xc3,
	0xc4, 0x31, 0x6e, 0x67, 0x2a, 0x94, 0x23, 0x77, 0x35, 0x91, 0xd5, 0x26, 0x5d, 0x41, 0x45, 0x56,
	0x9b, 0x78, 0xcd, 0x43, 0xdc, 0x6f, 0x78, 0x73, 0x1d, 0x59, 0x68, 0xec, 0xb2, 0x3f, 0xb2, 0xd0,
	0x84, 0xeb, 0xee, 0x23, 0xf1, 0x75, 0xe6, 0xc3, 0x08, 0x6d, 0xf4, 0x1a, 0xa9, 0xb1, 0x9d, 0x3c,
	0x18, 0x2e, 0x33, 0xfa, 0xf2, 0xf5, 0x51, 0x12, 0xf9, 0xbc, 0x4d, 0x4d, 0x2c, 0x31, 0x1a, 0x07,
	0x7f, 0xf1, 0xcb, 0x9d, 0xe7, 0x85, 0xff, 0xfa, 0x9f, 0x7f, 0x2f, 0x22, 0x99, 0xd2, 0x3e, 0x21,
	0x69, 0xc0, 0x13, 0x1a, 0xf1, 0x1b, 0x55, 0xd6, 0x63, 0x1b, 0x53, 0xd6, 0xa1, 0xac, 0xb3, 0x0e,
	0x12, 0xcb, 0x9f, 0xb0, 0x10, 0xff, 0xe4, 0xda, 0x30, 0x7f, 0x38, 0x04, 0x44, 0x07, 0x34, 0x97,
	0x85, 0x56, 0xcd, 0xa2, 0x09, 0x49, 0xfc, 0x8f, 0x90, 0x41, 0xba, 0x62, 0x58, 0xa6, 0x5b, 0xff,
	0xd3, 0x5f, 0xb2, 0xbb, 0x8f, 0x0d, 0x71, 0x33, 0xc2, 0x8c, 0x46, 0x65, 0x02, 0x09, 0x3d, 0x2f,
	0x9e, 0x40, 0xd9, 0x72, 0x86, 0x21, 0x79, 0x47, 0xfa, 0xd9, 0x26, 0x6b, 0x58, 0xce, 0xf0, 0x29,
	0xfd, 0x7a, 0xaa, 0xdb, 0xc6, 0x57, 0xba, 0x6d, 0xfc, 0x5a, 0x92, 0xae, 0x73, 0x74, 0xe6, 0xcf,
	0xff, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x37, 0x89, 0x31, 0xf8, 0xd0, 0x30, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PixurServiceClient is the client API for PixurService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PixurServiceClient interface {
	AddPicComment(ctx context.Context, in *AddPicCommentRequest, opts ...grpc.CallOption) (*AddPicCommentResponse, error)
	AddPicTags(ctx context.Context, in *AddPicTagsRequest, opts ...grpc.CallOption) (*AddPicTagsResponse, error)
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
	DeleteToken(ctx context.Context, in *DeleteTokenRequest, opts ...grpc.CallOption) (*DeleteTokenResponse, error)
	FindIndexPics(ctx context.Context, in *FindIndexPicsRequest, opts ...grpc.CallOption) (*FindIndexPicsResponse, error)
	FindSchedPics(ctx context.Context, in *FindSchedPicsRequest, opts ...grpc.CallOption) (*FindSchedPicsResponse, error)
	FindSimilarPics(ctx context.Context, in *FindSimilarPicsRequest, opts ...grpc.CallOption) (*FindSimilarPicsResponse, error)
	FindUserEvents(ctx context.Context, in *FindUserEventsRequest, opts ...grpc.CallOption) (*FindUserEventsResponse, error)
	GetRefreshToken(ctx context.Context, in *GetRefreshTokenRequest, opts ...grpc.CallOption) (*GetRefreshTokenResponse, error)
	IncrementViewCount(ctx context.Context, in *IncrementViewCountRequest, opts ...grpc.CallOption) (*IncrementViewCountResponse, error)
	LookupPicDetails(ctx context.Context, in *LookupPicDetailsRequest, opts ...grpc.CallOption) (*LookupPicDetailsResponse, error)
	LookupPicExtension(ctx context.Context, in *LookupPicExtensionRequest, opts ...grpc.CallOption) (*LookupPicExtensionResponse, error)
	LookupPicFile(ctx context.Context, in *LookupPicFileRequest, opts ...grpc.CallOption) (*LookupPicFileResponse, error)
	ReadPicFile(ctx context.Context, opts ...grpc.CallOption) (PixurService_ReadPicFileClient, error)
	LookupPicVote(ctx context.Context, in *LookupPicVoteRequest, opts ...grpc.CallOption) (*LookupPicVoteResponse, error)
	LookupUser(ctx context.Context, in *LookupUserRequest, opts ...grpc.CallOption) (*LookupUserResponse, error)
	PurgePic(ctx context.Context, in *PurgePicRequest, opts ...grpc.CallOption) (*PurgePicResponse, error)
	SoftDeletePic(ctx context.Context, in *SoftDeletePicRequest, opts ...grpc.CallOption) (*SoftDeletePicResponse, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error)
	UpsertPic(ctx context.Context, in *UpsertPicRequest, opts ...grpc.CallOption) (*UpsertPicResponse, error)
	UpsertPicVote(ctx context.Context, in *UpsertPicVoteRequest, opts ...grpc.CallOption) (*UpsertPicVoteResponse, error)
}

type pixurServiceClient struct {
	cc *grpc.ClientConn
}

func NewPixurServiceClient(cc *grpc.ClientConn) PixurServiceClient {
	return &pixurServiceClient{cc}
}

func (c *pixurServiceClient) AddPicComment(ctx context.Context, in *AddPicCommentRequest, opts ...grpc.CallOption) (*AddPicCommentResponse, error) {
	out := new(AddPicCommentResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/AddPicComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) AddPicTags(ctx context.Context, in *AddPicTagsRequest, opts ...grpc.CallOption) (*AddPicTagsResponse, error) {
	out := new(AddPicTagsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/AddPicTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) DeleteToken(ctx context.Context, in *DeleteTokenRequest, opts ...grpc.CallOption) (*DeleteTokenResponse, error) {
	out := new(DeleteTokenResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/DeleteToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindIndexPics(ctx context.Context, in *FindIndexPicsRequest, opts ...grpc.CallOption) (*FindIndexPicsResponse, error) {
	out := new(FindIndexPicsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindIndexPics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindSchedPics(ctx context.Context, in *FindSchedPicsRequest, opts ...grpc.CallOption) (*FindSchedPicsResponse, error) {
	out := new(FindSchedPicsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindSchedPics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindSimilarPics(ctx context.Context, in *FindSimilarPicsRequest, opts ...grpc.CallOption) (*FindSimilarPicsResponse, error) {
	out := new(FindSimilarPicsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindSimilarPics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) FindUserEvents(ctx context.Context, in *FindUserEventsRequest, opts ...grpc.CallOption) (*FindUserEventsResponse, error) {
	out := new(FindUserEventsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/FindUserEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) GetRefreshToken(ctx context.Context, in *GetRefreshTokenRequest, opts ...grpc.CallOption) (*GetRefreshTokenResponse, error) {
	out := new(GetRefreshTokenResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/GetRefreshToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) IncrementViewCount(ctx context.Context, in *IncrementViewCountRequest, opts ...grpc.CallOption) (*IncrementViewCountResponse, error) {
	out := new(IncrementViewCountResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/IncrementViewCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicDetails(ctx context.Context, in *LookupPicDetailsRequest, opts ...grpc.CallOption) (*LookupPicDetailsResponse, error) {
	out := new(LookupPicDetailsResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicExtension(ctx context.Context, in *LookupPicExtensionRequest, opts ...grpc.CallOption) (*LookupPicExtensionResponse, error) {
	out := new(LookupPicExtensionResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicExtension", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupPicFile(ctx context.Context, in *LookupPicFileRequest, opts ...grpc.CallOption) (*LookupPicFileResponse, error) {
	out := new(LookupPicFileResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) ReadPicFile(ctx context.Context, opts ...grpc.CallOption) (PixurService_ReadPicFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PixurService_serviceDesc.Streams[0], "/pixur.api.PixurService/ReadPicFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &pixurServiceReadPicFileClient{stream}
	return x, nil
}

type PixurService_ReadPicFileClient interface {
	Send(*ReadPicFileRequest) error
	Recv() (*ReadPicFileResponse, error)
	grpc.ClientStream
}

type pixurServiceReadPicFileClient struct {
	grpc.ClientStream
}

func (x *pixurServiceReadPicFileClient) Send(m *ReadPicFileRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pixurServiceReadPicFileClient) Recv() (*ReadPicFileResponse, error) {
	m := new(ReadPicFileResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *pixurServiceClient) LookupPicVote(ctx context.Context, in *LookupPicVoteRequest, opts ...grpc.CallOption) (*LookupPicVoteResponse, error) {
	out := new(LookupPicVoteResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupPicVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) LookupUser(ctx context.Context, in *LookupUserRequest, opts ...grpc.CallOption) (*LookupUserResponse, error) {
	out := new(LookupUserResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/LookupUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) PurgePic(ctx context.Context, in *PurgePicRequest, opts ...grpc.CallOption) (*PurgePicResponse, error) {
	out := new(PurgePicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/PurgePic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) SoftDeletePic(ctx context.Context, in *SoftDeletePicRequest, opts ...grpc.CallOption) (*SoftDeletePicResponse, error) {
	out := new(SoftDeletePicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/SoftDeletePic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*UpdateUserResponse, error) {
	out := new(UpdateUserResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpsertPic(ctx context.Context, in *UpsertPicRequest, opts ...grpc.CallOption) (*UpsertPicResponse, error) {
	out := new(UpsertPicResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpsertPic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pixurServiceClient) UpsertPicVote(ctx context.Context, in *UpsertPicVoteRequest, opts ...grpc.CallOption) (*UpsertPicVoteResponse, error) {
	out := new(UpsertPicVoteResponse)
	err := c.cc.Invoke(ctx, "/pixur.api.PixurService/UpsertPicVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PixurServiceServer is the server API for PixurService service.
type PixurServiceServer interface {
	AddPicComment(context.Context, *AddPicCommentRequest) (*AddPicCommentResponse, error)
	AddPicTags(context.Context, *AddPicTagsRequest) (*AddPicTagsResponse, error)
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	DeleteToken(context.Context, *DeleteTokenRequest) (*DeleteTokenResponse, error)
	FindIndexPics(context.Context, *FindIndexPicsRequest) (*FindIndexPicsResponse, error)
	FindSchedPics(context.Context, *FindSchedPicsRequest) (*FindSchedPicsResponse, error)
	FindSimilarPics(context.Context, *FindSimilarPicsRequest) (*FindSimilarPicsResponse, error)
	FindUserEvents(context.Context, *FindUserEventsRequest) (*FindUserEventsResponse, error)
	GetRefreshToken(context.Context, *GetRefreshTokenRequest) (*GetRefreshTokenResponse, error)
	IncrementViewCount(context.Context, *IncrementViewCountRequest) (*IncrementViewCountResponse, error)
	LookupPicDetails(context.Context, *LookupPicDetailsRequest) (*LookupPicDetailsResponse, error)
	LookupPicExtension(context.Context, *LookupPicExtensionRequest) (*LookupPicExtensionResponse, error)
	LookupPicFile(context.Context, *LookupPicFileRequest) (*LookupPicFileResponse, error)
	ReadPicFile(PixurService_ReadPicFileServer) error
	LookupPicVote(context.Context, *LookupPicVoteRequest) (*LookupPicVoteResponse, error)
	LookupUser(context.Context, *LookupUserRequest) (*LookupUserResponse, error)
	PurgePic(context.Context, *PurgePicRequest) (*PurgePicResponse, error)
	SoftDeletePic(context.Context, *SoftDeletePicRequest) (*SoftDeletePicResponse, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*UpdateUserResponse, error)
	UpsertPic(context.Context, *UpsertPicRequest) (*UpsertPicResponse, error)
	UpsertPicVote(context.Context, *UpsertPicVoteRequest) (*UpsertPicVoteResponse, error)
}

func RegisterPixurServiceServer(s *grpc.Server, srv PixurServiceServer) {
	s.RegisterService(&_PixurService_serviceDesc, srv)
}

func _PixurService_AddPicComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPicCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).AddPicComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/AddPicComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).AddPicComment(ctx, req.(*AddPicCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_AddPicTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPicTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).AddPicTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/AddPicTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).AddPicTags(ctx, req.(*AddPicTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_DeleteToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).DeleteToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/DeleteToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).DeleteToken(ctx, req.(*DeleteTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindIndexPics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindIndexPicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindIndexPics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindIndexPics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindIndexPics(ctx, req.(*FindIndexPicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindSchedPics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSchedPicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindSchedPics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindSchedPics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindSchedPics(ctx, req.(*FindSchedPicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindSimilarPics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSimilarPicsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindSimilarPics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindSimilarPics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindSimilarPics(ctx, req.(*FindSimilarPicsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_FindUserEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindUserEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).FindUserEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/FindUserEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).FindUserEvents(ctx, req.(*FindUserEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_GetRefreshToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRefreshTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).GetRefreshToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/GetRefreshToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).GetRefreshToken(ctx, req.(*GetRefreshTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_IncrementViewCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IncrementViewCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).IncrementViewCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/IncrementViewCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).IncrementViewCount(ctx, req.(*IncrementViewCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicDetails(ctx, req.(*LookupPicDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicExtension_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicExtensionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicExtension(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicExtension",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicExtension(ctx, req.(*LookupPicExtensionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupPicFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicFile(ctx, req.(*LookupPicFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_ReadPicFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PixurServiceServer).ReadPicFile(&pixurServiceReadPicFileServer{stream})
}

type PixurService_ReadPicFileServer interface {
	Send(*ReadPicFileResponse) error
	Recv() (*ReadPicFileRequest, error)
	grpc.ServerStream
}

type pixurServiceReadPicFileServer struct {
	grpc.ServerStream
}

func (x *pixurServiceReadPicFileServer) Send(m *ReadPicFileResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pixurServiceReadPicFileServer) Recv() (*ReadPicFileRequest, error) {
	m := new(ReadPicFileRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _PixurService_LookupPicVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupPicVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupPicVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupPicVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupPicVote(ctx, req.(*LookupPicVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_LookupUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).LookupUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/LookupUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).LookupUser(ctx, req.(*LookupUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_PurgePic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurgePicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).PurgePic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/PurgePic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).PurgePic(ctx, req.(*PurgePicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_SoftDeletePic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SoftDeletePicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).SoftDeletePic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/SoftDeletePic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).SoftDeletePic(ctx, req.(*SoftDeletePicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpsertPic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpsertPic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpsertPic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpsertPic(ctx, req.(*UpsertPicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PixurService_UpsertPicVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertPicVoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PixurServiceServer).UpsertPicVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pixur.api.PixurService/UpsertPicVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PixurServiceServer).UpsertPicVote(ctx, req.(*UpsertPicVoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PixurService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pixur.api.PixurService",
	HandlerType: (*PixurServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPicComment",
			Handler:    _PixurService_AddPicComment_Handler,
		},
		{
			MethodName: "AddPicTags",
			Handler:    _PixurService_AddPicTags_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _PixurService_CreateUser_Handler,
		},
		{
			MethodName: "DeleteToken",
			Handler:    _PixurService_DeleteToken_Handler,
		},
		{
			MethodName: "FindIndexPics",
			Handler:    _PixurService_FindIndexPics_Handler,
		},
		{
			MethodName: "FindSchedPics",
			Handler:    _PixurService_FindSchedPics_Handler,
		},
		{
			MethodName: "FindSimilarPics",
			Handler:    _PixurService_FindSimilarPics_Handler,
		},
		{
			MethodName: "FindUserEvents",
			Handler:    _PixurService_FindUserEvents_Handler,
		},
		{
			MethodName: "GetRefreshToken",
			Handler:    _PixurService_GetRefreshToken_Handler,
		},
		{
			MethodName: "IncrementViewCount",
			Handler:    _PixurService_IncrementViewCount_Handler,
		},
		{
			MethodName: "LookupPicDetails",
			Handler:    _PixurService_LookupPicDetails_Handler,
		},
		{
			MethodName: "LookupPicExtension",
			Handler:    _PixurService_LookupPicExtension_Handler,
		},
		{
			MethodName: "LookupPicFile",
			Handler:    _PixurService_LookupPicFile_Handler,
		},
		{
			MethodName: "LookupPicVote",
			Handler:    _PixurService_LookupPicVote_Handler,
		},
		{
			MethodName: "LookupUser",
			Handler:    _PixurService_LookupUser_Handler,
		},
		{
			MethodName: "PurgePic",
			Handler:    _PixurService_PurgePic_Handler,
		},
		{
			MethodName: "SoftDeletePic",
			Handler:    _PixurService_SoftDeletePic_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _PixurService_UpdateUser_Handler,
		},
		{
			MethodName: "UpsertPic",
			Handler:    _PixurService_UpsertPic_Handler,
		},
		{
			MethodName: "UpsertPicVote",
			Handler:    _PixurService_UpsertPicVote_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadPicFile",
			Handler:       _PixurService_ReadPicFile_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api.proto",
}
