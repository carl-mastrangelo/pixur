// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tables.proto

package tables

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	schema "pixur.org/pixur/be/schema"
	_ "pixur.org/pixur/be/schema/db/model"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PicRow struct {
	Id                   int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	IndexOrder           int64       `protobuf:"varint,2,opt,name=index_order,json=indexOrder,proto3" json:"index_order,omitempty"`
	ScoreOrder           int32       `protobuf:"varint,5,opt,name=score_order,json=scoreOrder,proto3" json:"score_order,omitempty"`
	SchedOrder           int32       `protobuf:"varint,6,opt,name=sched_order,json=schedOrder,proto3" json:"sched_order,omitempty"`
	Data                 *schema.Pic `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PicRow) Reset()         { *m = PicRow{} }
func (m *PicRow) String() string { return proto.CompactTextString(m) }
func (*PicRow) ProtoMessage()    {}
func (*PicRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e429e24f449e1ed, []int{0}
}

func (m *PicRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicRow.Unmarshal(m, b)
}
func (m *PicRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicRow.Marshal(b, m, deterministic)
}
func (m *PicRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicRow.Merge(m, src)
}
func (m *PicRow) XXX_Size() int {
	return xxx_messageInfo_PicRow.Size(m)
}
func (m *PicRow) XXX_DiscardUnknown() {
	xxx_messageInfo_PicRow.DiscardUnknown(m)
}

var xxx_messageInfo_PicRow proto.InternalMessageInfo

func (m *PicRow) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PicRow) GetIndexOrder() int64 {
	if m != nil {
		return m.IndexOrder
	}
	return 0
}

func (m *PicRow) GetScoreOrder() int32 {
	if m != nil {
		return m.ScoreOrder
	}
	return 0
}

func (m *PicRow) GetSchedOrder() int32 {
	if m != nil {
		return m.SchedOrder
	}
	return 0
}

func (m *PicRow) GetData() *schema.Pic {
	if m != nil {
		return m.Data
	}
	return nil
}

type TagRow struct {
	Id                   int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Data                 *schema.Tag `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TagRow) Reset()         { *m = TagRow{} }
func (m *TagRow) String() string { return proto.CompactTextString(m) }
func (*TagRow) ProtoMessage()    {}
func (*TagRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e429e24f449e1ed, []int{1}
}

func (m *TagRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagRow.Unmarshal(m, b)
}
func (m *TagRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagRow.Marshal(b, m, deterministic)
}
func (m *TagRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagRow.Merge(m, src)
}
func (m *TagRow) XXX_Size() int {
	return xxx_messageInfo_TagRow.Size(m)
}
func (m *TagRow) XXX_DiscardUnknown() {
	xxx_messageInfo_TagRow.DiscardUnknown(m)
}

var xxx_messageInfo_TagRow proto.InternalMessageInfo

func (m *TagRow) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TagRow) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TagRow) GetData() *schema.Tag {
	if m != nil {
		return m.Data
	}
	return nil
}

type PicTagRow struct {
	PicId                int64          `protobuf:"varint,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	TagId                int64          `protobuf:"varint,2,opt,name=tag_id,json=tagId,proto3" json:"tag_id,omitempty"`
	Data                 *schema.PicTag `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PicTagRow) Reset()         { *m = PicTagRow{} }
func (m *PicTagRow) String() string { return proto.CompactTextString(m) }
func (*PicTagRow) ProtoMessage()    {}
func (*PicTagRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e429e24f449e1ed, []int{2}
}

func (m *PicTagRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicTagRow.Unmarshal(m, b)
}
func (m *PicTagRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicTagRow.Marshal(b, m, deterministic)
}
func (m *PicTagRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicTagRow.Merge(m, src)
}
func (m *PicTagRow) XXX_Size() int {
	return xxx_messageInfo_PicTagRow.Size(m)
}
func (m *PicTagRow) XXX_DiscardUnknown() {
	xxx_messageInfo_PicTagRow.DiscardUnknown(m)
}

var xxx_messageInfo_PicTagRow proto.InternalMessageInfo

func (m *PicTagRow) GetPicId() int64 {
	if m != nil {
		return m.PicId
	}
	return 0
}

func (m *PicTagRow) GetTagId() int64 {
	if m != nil {
		return m.TagId
	}
	return 0
}

func (m *PicTagRow) GetData() *schema.PicTag {
	if m != nil {
		return m.Data
	}
	return nil
}

type PicIdentRow struct {
	PicId                int64                `protobuf:"varint,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	Type                 schema.PicIdent_Type `protobuf:"varint,2,opt,name=type,proto3,enum=pixur.PicIdent_Type" json:"type,omitempty"`
	Value                []byte               `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Data                 *schema.PicIdent     `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PicIdentRow) Reset()         { *m = PicIdentRow{} }
func (m *PicIdentRow) String() string { return proto.CompactTextString(m) }
func (*PicIdentRow) ProtoMessage()    {}
func (*PicIdentRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e429e24f449e1ed, []int{3}
}

func (m *PicIdentRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicIdentRow.Unmarshal(m, b)
}
func (m *PicIdentRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicIdentRow.Marshal(b, m, deterministic)
}
func (m *PicIdentRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicIdentRow.Merge(m, src)
}
func (m *PicIdentRow) XXX_Size() int {
	return xxx_messageInfo_PicIdentRow.Size(m)
}
func (m *PicIdentRow) XXX_DiscardUnknown() {
	xxx_messageInfo_PicIdentRow.DiscardUnknown(m)
}

var xxx_messageInfo_PicIdentRow proto.InternalMessageInfo

func (m *PicIdentRow) GetPicId() int64 {
	if m != nil {
		return m.PicId
	}
	return 0
}

func (m *PicIdentRow) GetType() schema.PicIdent_Type {
	if m != nil {
		return m.Type
	}
	return schema.PicIdent_UNKNOWN
}

func (m *PicIdentRow) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *PicIdentRow) GetData() *schema.PicIdent {
	if m != nil {
		return m.Data
	}
	return nil
}

type PicCommentRow struct {
	PicId                int64              `protobuf:"varint,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	CommentId            int64              `protobuf:"varint,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Data                 *schema.PicComment `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PicCommentRow) Reset()         { *m = PicCommentRow{} }
func (m *PicCommentRow) String() string { return proto.CompactTextString(m) }
func (*PicCommentRow) ProtoMessage()    {}
func (*PicCommentRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e429e24f449e1ed, []int{4}
}

func (m *PicCommentRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicCommentRow.Unmarshal(m, b)
}
func (m *PicCommentRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicCommentRow.Marshal(b, m, deterministic)
}
func (m *PicCommentRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicCommentRow.Merge(m, src)
}
func (m *PicCommentRow) XXX_Size() int {
	return xxx_messageInfo_PicCommentRow.Size(m)
}
func (m *PicCommentRow) XXX_DiscardUnknown() {
	xxx_messageInfo_PicCommentRow.DiscardUnknown(m)
}

var xxx_messageInfo_PicCommentRow proto.InternalMessageInfo

func (m *PicCommentRow) GetPicId() int64 {
	if m != nil {
		return m.PicId
	}
	return 0
}

func (m *PicCommentRow) GetCommentId() int64 {
	if m != nil {
		return m.CommentId
	}
	return 0
}

func (m *PicCommentRow) GetData() *schema.PicComment {
	if m != nil {
		return m.Data
	}
	return nil
}

type PicVoteRow struct {
	PicId                int64           `protobuf:"varint,1,opt,name=pic_id,json=picId,proto3" json:"pic_id,omitempty"`
	UserId               int64           `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Index                int64           `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"`
	Data                 *schema.PicVote `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PicVoteRow) Reset()         { *m = PicVoteRow{} }
func (m *PicVoteRow) String() string { return proto.CompactTextString(m) }
func (*PicVoteRow) ProtoMessage()    {}
func (*PicVoteRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e429e24f449e1ed, []int{5}
}

func (m *PicVoteRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PicVoteRow.Unmarshal(m, b)
}
func (m *PicVoteRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PicVoteRow.Marshal(b, m, deterministic)
}
func (m *PicVoteRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PicVoteRow.Merge(m, src)
}
func (m *PicVoteRow) XXX_Size() int {
	return xxx_messageInfo_PicVoteRow.Size(m)
}
func (m *PicVoteRow) XXX_DiscardUnknown() {
	xxx_messageInfo_PicVoteRow.DiscardUnknown(m)
}

var xxx_messageInfo_PicVoteRow proto.InternalMessageInfo

func (m *PicVoteRow) GetPicId() int64 {
	if m != nil {
		return m.PicId
	}
	return 0
}

func (m *PicVoteRow) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PicVoteRow) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *PicVoteRow) GetData() *schema.PicVote {
	if m != nil {
		return m.Data
	}
	return nil
}

type UserRow struct {
	Id                   int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ident                string       `protobuf:"bytes,2,opt,name=ident,proto3" json:"ident,omitempty"`
	Data                 *schema.User `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserRow) Reset()         { *m = UserRow{} }
func (m *UserRow) String() string { return proto.CompactTextString(m) }
func (*UserRow) ProtoMessage()    {}
func (*UserRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e429e24f449e1ed, []int{6}
}

func (m *UserRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRow.Unmarshal(m, b)
}
func (m *UserRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRow.Marshal(b, m, deterministic)
}
func (m *UserRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRow.Merge(m, src)
}
func (m *UserRow) XXX_Size() int {
	return xxx_messageInfo_UserRow.Size(m)
}
func (m *UserRow) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRow.DiscardUnknown(m)
}

var xxx_messageInfo_UserRow proto.InternalMessageInfo

func (m *UserRow) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserRow) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *UserRow) GetData() *schema.User {
	if m != nil {
		return m.Data
	}
	return nil
}

type UserEventRow struct {
	UserId               int64             `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedTs            int64             `protobuf:"varint,2,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	Index                int64             `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Data                 *schema.UserEvent `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserEventRow) Reset()         { *m = UserEventRow{} }
func (m *UserEventRow) String() string { return proto.CompactTextString(m) }
func (*UserEventRow) ProtoMessage()    {}
func (*UserEventRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e429e24f449e1ed, []int{7}
}

func (m *UserEventRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserEventRow.Unmarshal(m, b)
}
func (m *UserEventRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserEventRow.Marshal(b, m, deterministic)
}
func (m *UserEventRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserEventRow.Merge(m, src)
}
func (m *UserEventRow) XXX_Size() int {
	return xxx_messageInfo_UserEventRow.Size(m)
}
func (m *UserEventRow) XXX_DiscardUnknown() {
	xxx_messageInfo_UserEventRow.DiscardUnknown(m)
}

var xxx_messageInfo_UserEventRow proto.InternalMessageInfo

func (m *UserEventRow) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserEventRow) GetCreatedTs() int64 {
	if m != nil {
		return m.CreatedTs
	}
	return 0
}

func (m *UserEventRow) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *UserEventRow) GetData() *schema.UserEvent {
	if m != nil {
		return m.Data
	}
	return nil
}

type CustomDataRow struct {
	KeyType              int64              `protobuf:"varint,1,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	Key1                 int64              `protobuf:"varint,2,opt,name=key1,proto3" json:"key1,omitempty"`
	Key2                 int64              `protobuf:"varint,3,opt,name=key2,proto3" json:"key2,omitempty"`
	Key3                 int64              `protobuf:"varint,4,opt,name=key3,proto3" json:"key3,omitempty"`
	Key4                 int64              `protobuf:"varint,5,opt,name=key4,proto3" json:"key4,omitempty"`
	Key5                 int64              `protobuf:"varint,6,opt,name=key5,proto3" json:"key5,omitempty"`
	Data                 *schema.CustomData `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CustomDataRow) Reset()         { *m = CustomDataRow{} }
func (m *CustomDataRow) String() string { return proto.CompactTextString(m) }
func (*CustomDataRow) ProtoMessage()    {}
func (*CustomDataRow) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e429e24f449e1ed, []int{8}
}

func (m *CustomDataRow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomDataRow.Unmarshal(m, b)
}
func (m *CustomDataRow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomDataRow.Marshal(b, m, deterministic)
}
func (m *CustomDataRow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomDataRow.Merge(m, src)
}
func (m *CustomDataRow) XXX_Size() int {
	return xxx_messageInfo_CustomDataRow.Size(m)
}
func (m *CustomDataRow) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomDataRow.DiscardUnknown(m)
}

var xxx_messageInfo_CustomDataRow proto.InternalMessageInfo

func (m *CustomDataRow) GetKeyType() int64 {
	if m != nil {
		return m.KeyType
	}
	return 0
}

func (m *CustomDataRow) GetKey1() int64 {
	if m != nil {
		return m.Key1
	}
	return 0
}

func (m *CustomDataRow) GetKey2() int64 {
	if m != nil {
		return m.Key2
	}
	return 0
}

func (m *CustomDataRow) GetKey3() int64 {
	if m != nil {
		return m.Key3
	}
	return 0
}

func (m *CustomDataRow) GetKey4() int64 {
	if m != nil {
		return m.Key4
	}
	return 0
}

func (m *CustomDataRow) GetKey5() int64 {
	if m != nil {
		return m.Key5
	}
	return 0
}

func (m *CustomDataRow) GetData() *schema.CustomData {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PicRow)(nil), "pixur.tables.PicRow")
	proto.RegisterType((*TagRow)(nil), "pixur.tables.TagRow")
	proto.RegisterType((*PicTagRow)(nil), "pixur.tables.PicTagRow")
	proto.RegisterType((*PicIdentRow)(nil), "pixur.tables.PicIdentRow")
	proto.RegisterType((*PicCommentRow)(nil), "pixur.tables.PicCommentRow")
	proto.RegisterType((*PicVoteRow)(nil), "pixur.tables.PicVoteRow")
	proto.RegisterType((*UserRow)(nil), "pixur.tables.UserRow")
	proto.RegisterType((*UserEventRow)(nil), "pixur.tables.UserEventRow")
	proto.RegisterType((*CustomDataRow)(nil), "pixur.tables.CustomDataRow")
}

func init() { proto.RegisterFile("tables.proto", fileDescriptor_9e429e24f449e1ed) }

var fileDescriptor_9e429e24f449e1ed = []byte{
	// 944 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x96, 0xcf, 0x6f, 0x1b, 0x45,
	0x14, 0xc7, 0x35, 0xf6, 0x7a, 0x1d, 0x3f, 0xff, 0xc8, 0x76, 0x80, 0x12, 0x8c, 0x48, 0x26, 0x4b,
	0x23, 0x45, 0x80, 0x12, 0xe2, 0x24, 0x80, 0x50, 0x0f, 0x95, 0x53, 0x0e, 0x6d, 0x51, 0xb1, 0x52,
	0xb7, 0x07, 0x2e, 0xd6, 0x66, 0x77, 0xe4, 0xac, 0x62, 0x7b, 0x97, 0xdd, 0x75, 0x5b, 0xdf, 0xe6,
	0x3c, 0xe2, 0xc8, 0x9d, 0x7f, 0x89, 0x13, 0xff, 0x03, 0x67, 0x0e, 0x48, 0x9c, 0xd0, 0xfc, 0xda,
	0xd9, 0x8d, 0x44, 0xab, 0x5c, 0xa2, 0x99, 0x37, 0xdf, 0x79, 0xef, 0xfb, 0x79, 0x33, 0x3b, 0x31,
	0xf4, 0x8a, 0xe0, 0x6a, 0x41, 0xf3, 0xa3, 0x34, 0x4b, 0x8a, 0x04, 0xf7, 0xd2, 0xf8, 0xed, 0x3a,
	0x3b, 0x52, 0xb1, 0xe1, 0x81, 0x9a, 0x25, 0xd9, 0xfc, 0x58, 0x8e, 0x8e, 0xaf, 0xe8, 0x71, 0x1e,
	0x5e, 0xd3, 0x65, 0xa0, 0xe6, 0x6a, 0xd3, 0xf0, 0xe8, 0xff, 0x65, 0xd1, 0xd5, 0xf1, 0x32, 0x89,
	0xe8, 0x42, 0xfd, 0x55, 0x7a, 0xff, 0xef, 0x06, 0xb8, 0x93, 0x38, 0xbc, 0x4c, 0xde, 0xe0, 0x4f,
	0xa1, 0x11, 0x47, 0x3b, 0x88, 0xa0, 0xc3, 0xe6, 0xb8, 0xcb, 0x19, 0x69, 0x43, 0xeb, 0x49, 0x74,
	0x91, 0x2c, 0x2e, 0x1b, 0x71, 0x84, 0xcf, 0xa0, 0x1b, 0xaf, 0x22, 0xfa, 0x76, 0x96, 0x64, 0x11,
	0xcd, 0x76, 0x1a, 0x52, 0xf5, 0x01, 0x67, 0x64, 0x1b, 0xfa, 0x4f, 0xc4, 0xc2, 0x4f, 0x22, 0x2e,
	0xd4, 0x10, 0x97, 0x53, 0xfc, 0x0d, 0x74, 0xf3, 0x30, 0xc9, 0xa8, 0xde, 0xd5, 0x22, 0xe8, 0xb0,
	0x35, 0xfe, 0x88, 0x33, 0x72, 0x0f, 0xb6, 0x7f, 0x4c, 0xde, 0xd0, 0xec, 0x85, 0x58, 0x1d, 0x27,
	0xeb, 0x55, 0x74, 0x09, 0x52, 0x59, 0xd9, 0x77, 0x4d, 0x23, 0xbd, 0xcf, 0xad, 0xee, 0x7b, 0x99,
	0xa6, 0xb7, 0xf7, 0x5d, 0xd3, 0x48, 0xed, 0xdb, 0x05, 0x27, 0x0a, 0x8a, 0x60, 0xc7, 0x21, 0xe8,
	0xb0, 0x3b, 0x02, 0xdd, 0x0c, 0xc1, 0x27, 0xe3, 0xdf, 0xaf, 0x39, 0x23, 0xbf, 0x80, 0x33, 0x89,
	0xc3, 0x1c, 0xbb, 0x02, 0xd7, 0x43, 0x78, 0xaf, 0x46, 0x26, 0x83, 0x8d, 0x21, 0x58, 0x26, 0x21,
	0xa8, 0x40, 0x18, 0xc1, 0x0b, 0xeb, 0x76, 0xaf, 0xe6, 0xd6, 0x0a, 0x8c, 0xad, 0xa7, 0xce, 0x56,
	0xd3, 0x73, 0x2e, 0x3b, 0x71, 0x3e, 0xbb, 0x8e, 0xa3, 0x88, 0xae, 0xfc, 0x5f, 0x11, 0xb8, 0xd3,
	0x60, 0xfe, 0xde, 0xae, 0xef, 0x83, 0xb3, 0x0a, 0x96, 0x54, 0xb6, 0xbb, 0x33, 0xee, 0x73, 0x46,
	0x3a, 0xd0, 0x7e, 0x1e, 0x2c, 0xa9, 0x10, 0xc8, 0xa5, 0x12, 0xb9, 0x59, 0x43, 0x16, 0xc9, 0x15,
	0xb2, 0xcf, 0x19, 0xd9, 0x05, 0x67, 0x1a, 0xcc, 0x2d, 0xf2, 0x40, 0xa5, 0xf5, 0x9a, 0x43, 0x47,
	0x24, 0xf3, 0x7f, 0x47, 0xd0, 0x99, 0xc4, 0xa1, 0x76, 0x74, 0x00, 0x6e, 0x1a, 0x87, 0xb3, 0xd2,
	0xd5, 0x80, 0x33, 0x02, 0xb0, 0x35, 0x89, 0x43, 0x65, 0xac, 0x95, 0x8a, 0x91, 0x90, 0x15, 0xc1,
	0x5c, 0xc8, 0x1a, 0x55, 0xd9, 0x34, 0x98, 0x6b, 0x59, 0x21, 0x46, 0x02, 0xa1, 0xe2, 0xaf, 0x6f,
	0x8f, 0xc4, 0x5a, 0xdc, 0xe7, 0x8c, 0x7c, 0x06, 0x6d, 0x15, 0xcb, 0x31, 0x36, 0xf5, 0x4d, 0x01,
	0x0f, 0xf9, 0xff, 0x22, 0xe8, 0x4a, 0x03, 0x74, 0x55, 0xdc, 0xc1, 0xe3, 0xb7, 0xe0, 0x14, 0x9b,
	0x54, 0xf5, 0x6f, 0x30, 0xfa, 0xd0, 0x16, 0x97, 0x89, 0x8e, 0xa6, 0x9b, 0x94, 0x9a, 0xae, 0x8a,
	0xb1, 0xec, 0xaa, 0xd8, 0x80, 0x1f, 0x40, 0xeb, 0x75, 0xb0, 0x58, 0x53, 0x69, 0xbb, 0x67, 0xd2,
	0xbf, 0x12, 0x21, 0x99, 0x5e, 0x2e, 0xe2, 0xcf, 0x6b, 0xd7, 0x6d, 0xfb, 0x56, 0x7a, 0x4d, 0xf7,
	0x88, 0x33, 0xf2, 0x50, 0xf6, 0x57, 0x46, 0x73, 0xfc, 0x71, 0xc9, 0x27, 0x6b, 0xe9, 0x4a, 0x1e,
	0xc2, 0xf7, 0xeb, 0x81, 0xc6, 0xb0, 0x25, 0x77, 0xf8, 0x7f, 0x22, 0xe8, 0x4f, 0xe2, 0xf0, 0x22,
	0x59, 0x2e, 0xef, 0x86, 0x7f, 0x02, 0x10, 0xaa, 0x4d, 0xf6, 0x98, 0x30, 0x67, 0x64, 0x00, 0x3d,
	0x9d, 0x4c, 0xc9, 0x3b, 0xa1, 0x99, 0xe1, 0x83, 0xda, 0x71, 0xdd, 0xb3, 0x48, 0xa6, 0xba, 0x82,
	0x7a, 0xcc, 0x19, 0x79, 0x24, 0x8f, 0x44, 0xc7, 0x73, 0x7c, 0xbf, 0xc4, 0xaa, 0x14, 0xf5, 0x10,
	0xfe, 0xa4, 0x36, 0x6f, 0x0e, 0x3b, 0x65, 0x69, 0xff, 0x1f, 0x04, 0x30, 0x89, 0xc3, 0x57, 0x49,
	0x41, 0xef, 0x40, 0x75, 0x08, 0xed, 0x75, 0x4e, 0x33, 0x8b, 0xb4, 0xcd, 0x19, 0xe9, 0x42, 0xe7,
	0x65, 0x4e, 0x33, 0x25, 0x74, 0xd7, 0x72, 0x28, 0x4e, 0x51, 0x7e, 0xda, 0xf2, 0x80, 0xca, 0x7c,
	0xf2, 0xd3, 0x96, 0xf9, 0xe4, 0x22, 0xf6, 0x6b, 0xc8, 0x03, 0x8b, 0x2c, 0x7d, 0x29, 0xde, 0xe7,
	0x9c, 0x91, 0xa7, 0xd2, 0x8a, 0x08, 0xe6, 0x78, 0x58, 0xc2, 0x1a, 0x2f, 0xba, 0x94, 0x87, 0xb0,
	0x6f, 0x63, 0x46, 0xa4, 0xd7, 0x9a, 0x43, 0x57, 0x99, 0xf4, 0x7f, 0x43, 0xd0, 0x16, 0xc3, 0xf7,
	0xbe, 0x00, 0x02, 0x41, 0x5c, 0x02, 0xfd, 0x04, 0x18, 0x04, 0x11, 0x52, 0x08, 0x62, 0x84, 0xf7,
	0x6a, 0x08, 0x5d, 0x8d, 0x20, 0x0b, 0x28, 0xff, 0x07, 0x9c, 0x91, 0x7d, 0x68, 0x89, 0x88, 0x7d,
	0x06, 0x3c, 0x9d, 0xdb, 0x6b, 0x9a, 0x9b, 0xf6, 0x17, 0x82, 0x9e, 0xd0, 0xfc, 0xf0, 0x5a, 0x5f,
	0xb4, 0x4a, 0xaf, 0xd1, 0xbb, 0x7b, 0x2d, 0xee, 0x5a, 0x46, 0x83, 0x82, 0x46, 0xb3, 0x22, 0xbf,
	0x75, 0xd7, 0x54, 0x7c, 0x9a, 0xab, 0xbb, 0x66, 0x66, 0xf6, 0x78, 0x9a, 0xef, 0x3a, 0x9e, 0x07,
	0x9a, 0xad, 0x25, 0xd9, 0xbc, 0x0a, 0x9b, 0x72, 0xa9, 0x00, 0xbf, 0xe6, 0x8c, 0x7c, 0x05, 0x50,
	0x86, 0x73, 0xbc, 0x6b, 0x8f, 0xa1, 0xe2, 0xac, 0x3c, 0x26, 0xff, 0x8f, 0x06, 0xf4, 0x2f, 0xd6,
	0x79, 0x91, 0x2c, 0x1f, 0x07, 0x45, 0x20, 0x60, 0xbf, 0x84, 0xad, 0x1b, 0xba, 0x99, 0xc9, 0x17,
	0x43, 0xd1, 0x7a, 0x9c, 0x91, 0x1e, 0xc0, 0x33, 0xba, 0x31, 0xcf, 0x43, 0xfb, 0x46, 0x8d, 0xc5,
	0xbb, 0x76, 0x43, 0x37, 0x27, 0x9a, 0x54, 0x3f, 0x22, 0xcf, 0xe8, 0xe6, 0x44, 0x3e, 0x22, 0x62,
	0x49, 0x4b, 0x46, 0x1a, 0xcf, 0x4a, 0x46, 0x46, 0x32, 0xd2, 0x92, 0x53, 0x7d, 0x41, 0xad, 0xe4,
	0xd4, 0x48, 0x4e, 0xb5, 0xe4, 0x4c, 0xf2, 0x57, 0x25, 0x67, 0x46, 0x72, 0xa6, 0x25, 0xe7, 0xf2,
	0xff, 0x64, 0x55, 0x72, 0x6e, 0x24, 0xe7, 0xe5, 0x77, 0xdd, 0xae, 0x7d, 0xd7, 0x15, 0x7e, 0xd5,
	0xc6, 0x87, 0x9c, 0x91, 0xef, 0x00, 0x6c, 0x1c, 0x7f, 0x61, 0x9b, 0xa2, 0x88, 0x15, 0x94, 0xf2,
	0xad, 0xac, 0xa9, 0xea, 0x1e, 0x1a, 0x6f, 0xfd, 0xec, 0xaa, 0x5f, 0x2b, 0x57, 0xae, 0xfc, 0x75,
	0x71, 0xfa, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x67, 0xec, 0xff, 0xa1, 0xd2, 0x08, 0x00, 0x00,
}
