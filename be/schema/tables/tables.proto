syntax = "proto3";

package pixur.be.schema.tables;

option go_package = "pixur.org/pixur/be/schema/tables";

import "pixur.org/pixur/be/schema/pixur.proto";
import "pixur.org/pixur/be/schema/db/model/model.proto";

message PicRow {
  // The indexes could probably be unique, but I don't want them as a constraint.
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "Pics"
    key: {
      key_type: PRIMARY
      col: "id"
    }
    key: {
      name: "IndexOrder"
      key_type: INDEX
      col: "index_order"
      col: "id"
    }
    key: {
      name: "ScoreOrder"
      key_type: INDEX
      col: "score_order"
      col: "id"
    }
    key: {
      name: "SchedOrder"
      key_type: INDEX
      col: "sched_order"
      col: "id"
    }
  };

  int64 id = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "IdCol"}];

  int64 index_order = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "IndexOrderCol"}];

  reserved 3;
  reserved "is_hidden";

  int32 score_order = 5 [(pixur.be.schema.db.model.field_opts) = {col_fn: "LowerScoreBound"}];
  int32 sched_order = 6 [(pixur.be.schema.db.model.field_opts) = {col_fn: "UpperScoreBound"}];

  pixur.be.schema.Pic data = 4;
}

message TagRow {
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "Tags"
    key: {
      key_type: PRIMARY
      col: "id"
    }
    key: {
      name: "Name"
      key_type: UNIQUE
      col: "name"
    }
  };

  int64 id = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "IdCol"}];

  string name = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "NameCol"}];;

  pixur.be.schema.Tag data = 3;
}

message PicTagRow {
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "PicTags"
    key: {
      key_type: PRIMARY
      col: "pic_id"
      col: "tag_id"
    }
  };

  int64 pic_id = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "PicIdCol"}];
  int64 tag_id = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "TagIdCol"}];

  pixur.be.schema.PicTag data = 3;
}

message PicIdentRow {
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "PicIdents"
    key: {
      key_type: PRIMARY
      col: "pic_id"
      col: "type"
      col: "value"
    }
    key: {
      name: "Ident"
      key_type: INDEX
      col: "type"
      col: "value"
    }
  };

  int64 pic_id = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "PicIdCol"}];

  pixur.be.schema.PicIdent.Type type = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "TypeCol"}];

  bytes value = 3 [(pixur.be.schema.db.model.field_opts) = {col_fn: "ValueCol"}];

  pixur.be.schema.PicIdent data = 4;
}

message PicCommentRow {
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "PicComments"
    key: {
      key_type: PRIMARY
      col: "pic_id"
      col: "comment_id"
    }
    key: {
      name: "CommentId"
      key_type: UNIQUE
      col: "comment_id"
    }
  };

  int64 pic_id = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "PicIdCol"}];

  int64 comment_id = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "CommentIdCol"}];

  pixur.be.schema.PicComment data = 3;
}

message PicVoteRow {
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "PicVotes"
    key: {
      key_type: PRIMARY
      col: "pic_id"
      col: "user_id"
      col: "index"
    }
    key: {
      name: "UserId"
      key_type: UNIQUE
      col: "user_id"
      col: "pic_id"
      col: "index"
    }
  };

  int64 pic_id = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "PicIdCol"}];

  int64 user_id = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "UserIdCol"}];
  
  int64 index = 4 [(pixur.be.schema.db.model.field_opts) = {col_fn: "IndexCol"}];

  pixur.be.schema.PicVote data = 3;
}

message PicVoteCommentRow {
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "PicCommentVotes"
    key: {
      key_type: PRIMARY
      col: "pic_id"
      col: "comment_id"
      col: "user_id"
      col: "index"
    }
  };
  int64 pic_id = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "PicIdCol"}];
  int64 comment_id = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "CommentIdCol"}];
  int64 user_id = 3 [(pixur.be.schema.db.model.field_opts) = {col_fn: "UserIdCol"}];
  int64 index = 4 [(pixur.be.schema.db.model.field_opts) = {col_fn: "IndexCol"}];
  
  pixur.be.schema.PicCommentVote data = 5;
}

message UserRow {
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "Users"
    key: {
      key_type: PRIMARY
      col: "id"
    }
    key: {
      name: "Ident"
      key_type: UNIQUE
      col: "ident"
    }
  };

  int64 id = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "IdCol"}];

  string ident = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "IdentCol"}];

  pixur.be.schema.User data = 3;
}

message UserEventRow {
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "UserEvents"
    key: {
      key_type: PRIMARY
      col: "user_id"
      col: "created_ts"
      col: "index"
    }
  };

  int64 user_id = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "UserIdCol"}];

  int64 created_ts = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "CreatedTsCol"}];

  int64 index = 3 [(pixur.be.schema.db.model.field_opts) = {col_fn: "IndexCol"}];

  pixur.be.schema.UserEvent data = 5;
}

message CustomDataRow {
  option (pixur.be.schema.db.model.tab_opts) = {
    name: "CustomData"
    key: {
      key_type: PRIMARY
      col: "key_type"
      col: "key1"
      col: "key2"
      col: "key3"
      col: "key4"
      col: "key5"
    }
  };

  int64 key_type = 1 [(pixur.be.schema.db.model.field_opts) = {col_fn: "KeyTypeCol"}];

  int64 key1 = 2 [(pixur.be.schema.db.model.field_opts) = {col_fn: "Key1Col"}];

  int64 key2 = 3 [(pixur.be.schema.db.model.field_opts) = {col_fn: "Key2Col"}];
  
  int64 key3 = 4 [(pixur.be.schema.db.model.field_opts) = {col_fn: "Key3Col"}];
  
  int64 key4 = 5 [(pixur.be.schema.db.model.field_opts) = {col_fn: "Key4Col"}];
  
  int64 key5 = 6 [(pixur.be.schema.db.model.field_opts) = {col_fn: "Key5Col"}];

  pixur.be.schema.CustomData data = 7;
}
