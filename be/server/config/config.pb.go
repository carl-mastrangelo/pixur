// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
	api "pixur.org/pixur/api"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Config describes server configuration.
type Config struct {
	// Name of the database, like "mysql"
	DbName   string `protobuf:"bytes,1,opt,name=db_name,json=dbName,proto3" json:"db_name,omitempty"`
	DbConfig string `protobuf:"bytes,2,opt,name=db_config,json=dbConfig,proto3" json:"db_config,omitempty"`
	// listen network (e.g. "tcp")
	ListenNetwork string `protobuf:"bytes,3,opt,name=listen_network,json=listenNetwork,proto3" json:"listen_network,omitempty"`
	// listen address (e.g. "localhost:1234")
	ListenAddress string `protobuf:"bytes,9,opt,name=listen_address,json=listenAddress,proto3" json:"listen_address,omitempty"`
	// Path to look for pictures.
	PixPath string `protobuf:"bytes,4,opt,name=pix_path,json=pixPath,proto3" json:"pix_path,omitempty"`
	// session stuff
	TokenSecret           string                    `protobuf:"bytes,5,opt,name=token_secret,json=tokenSecret,proto3" json:"token_secret,omitempty"`
	SessionPrivateKeyPath string                    `protobuf:"bytes,6,opt,name=session_private_key_path,json=sessionPrivateKeyPath,proto3" json:"session_private_key_path,omitempty"`
	SessionPublicKeyPath  string                    `protobuf:"bytes,7,opt,name=session_public_key_path,json=sessionPublicKeyPath,proto3" json:"session_public_key_path,omitempty"`
	BackendConfiguration  *api.BackendConfiguration `protobuf:"bytes,10,opt,name=backend_configuration,json=backendConfiguration,proto3" json:"backend_configuration,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                  `json:"-"`
	XXX_unrecognized      []byte                    `json:"-"`
	XXX_sizecache         int32                     `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetDbName() string {
	if m != nil {
		return m.DbName
	}
	return ""
}

func (m *Config) GetDbConfig() string {
	if m != nil {
		return m.DbConfig
	}
	return ""
}

func (m *Config) GetListenNetwork() string {
	if m != nil {
		return m.ListenNetwork
	}
	return ""
}

func (m *Config) GetListenAddress() string {
	if m != nil {
		return m.ListenAddress
	}
	return ""
}

func (m *Config) GetPixPath() string {
	if m != nil {
		return m.PixPath
	}
	return ""
}

func (m *Config) GetTokenSecret() string {
	if m != nil {
		return m.TokenSecret
	}
	return ""
}

func (m *Config) GetSessionPrivateKeyPath() string {
	if m != nil {
		return m.SessionPrivateKeyPath
	}
	return ""
}

func (m *Config) GetSessionPublicKeyPath() string {
	if m != nil {
		return m.SessionPublicKeyPath
	}
	return ""
}

func (m *Config) GetBackendConfiguration() *api.BackendConfiguration {
	if m != nil {
		return m.BackendConfiguration
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "pixur.be.server.Config")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4e, 0x2a, 0x31,
	0x14, 0x86, 0xc3, 0xe5, 0xde, 0x01, 0x0a, 0x5c, 0x93, 0x09, 0x84, 0xaa, 0x0b, 0xd1, 0xc4, 0x88,
	0x9b, 0x99, 0x44, 0x63, 0x5c, 0xb8, 0x12, 0x96, 0x26, 0x84, 0xa0, 0x2b, 0x37, 0x4d, 0x3b, 0x3d,
	0x42, 0x33, 0xd0, 0x36, 0x6d, 0x41, 0x78, 0x0b, 0x1f, 0xd9, 0xd8, 0x03, 0xca, 0xc2, 0xd5, 0x4c,
	0xfe, 0xff, 0xfb, 0x4e, 0x93, 0x73, 0x48, 0xab, 0x30, 0xfa, 0x4d, 0xcd, 0x32, 0xeb, 0x4c, 0x30,
	0xe9, 0x91, 0x55, 0x9b, 0x95, 0xcb, 0x04, 0x64, 0x1e, 0xdc, 0x1a, 0xdc, 0x49, 0x9b, 0x5b, 0x95,
	0x73, 0xab, 0xb0, 0xbf, 0xf8, 0xa8, 0x92, 0x64, 0x14, 0x85, 0xb4, 0x47, 0x6a, 0x52, 0x30, 0xcd,
	0x97, 0x40, 0x2b, 0xfd, 0xca, 0xa0, 0x31, 0x4d, 0xa4, 0x18, 0xf3, 0x25, 0xa4, 0xa7, 0xa4, 0x21,
	0x05, 0xc3, 0xb1, 0xf4, 0x4f, 0xac, 0xea, 0x52, 0xec, 0xac, 0x4b, 0xf2, 0x7f, 0xa1, 0x7c, 0x00,
	0xcd, 0x34, 0x84, 0x77, 0xe3, 0x4a, 0x5a, 0x8d, 0x44, 0x1b, 0xd3, 0x31, 0x86, 0x07, 0x18, 0x97,
	0xd2, 0x81, 0xf7, 0xb4, 0x71, 0x88, 0x3d, 0x62, 0x98, 0x1e, 0x93, 0xba, 0x55, 0x1b, 0x66, 0x79,
	0x98, 0xd3, 0xbf, 0x11, 0xa8, 0x59, 0xb5, 0x99, 0xf0, 0x30, 0x4f, 0xcf, 0x49, 0x2b, 0x98, 0x12,
	0x34, 0xf3, 0x50, 0x38, 0x08, 0xf4, 0x5f, 0xac, 0x9b, 0x31, 0x7b, 0x8e, 0x51, 0x7a, 0x4f, 0xa8,
	0x07, 0xef, 0x95, 0xd1, 0xcc, 0x3a, 0xb5, 0xe6, 0x01, 0x58, 0x09, 0x5b, 0x9c, 0x96, 0x44, 0xbc,
	0xbb, 0xeb, 0x27, 0x58, 0x3f, 0xc1, 0x36, 0xce, 0xbe, 0x23, 0xbd, 0x6f, 0x71, 0x25, 0x16, 0xaa,
	0xf8, 0xf1, 0x6a, 0xd1, 0xeb, 0xec, 0xbd, 0xd8, 0xee, 0xb5, 0x17, 0xd2, 0x15, 0xbc, 0x28, 0x41,
	0xcb, 0xdd, 0x76, 0x56, 0x8e, 0x07, 0x65, 0x34, 0x25, 0xfd, 0xca, 0xa0, 0x79, 0x73, 0x96, 0xe1,
	0xf2, 0xbf, 0xb6, 0x3d, 0x44, 0x6e, 0x74, 0x88, 0x4d, 0x3b, 0xe2, 0x97, 0x74, 0x78, 0xfd, 0x7a,
	0x85, 0x9e, 0x71, 0xb3, 0x3c, 0xfe, 0xe5, 0x02, 0x72, 0x3c, 0x5f, 0x8e, 0xef, 0x3c, 0xe0, 0x47,
	0x24, 0xf1, 0x88, 0xb7, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x6a, 0x80, 0x94, 0xf4, 0x01,
	0x00, 0x00,
}
